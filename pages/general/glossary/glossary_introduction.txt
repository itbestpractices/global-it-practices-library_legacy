
===== Glossary of IT terms and abbreviations =====

Send us feedback if you would like to get content added!
Alternatively you can look up terms here:
http://pascal.computer.org/sev_display/index.action


===== A ===== 

==== Abstract test case ====

See high-level test case 

==== Action item list (ISO 29119) ====

A list that specifies the actions to be taken as a result of a specific static test being executed.

==== Acceptance (ISTQB) ====

See acceptance testing (ISTQB)

==== Acceptance criteria (ISO 29119) ====

The criteria that a system or component must satisfy in order to be accepted by a user, customer, or other Authorized entity [ISO/IEC 24765, Systems and Software Engineering Vocabulary].

==== Ad hoc testing (ISTQB) ==== 

Testing carried out informally; no formal test preparation takes place, no recognized test design technique is used, there are no expectations for results and arbitrariness guides the test execution activity. 

==== Acceptance testing (ISO 29119) ====

Formal testing conducted to enable a user, customer, or other authorized entity to determine whether to accept a system or component.

[IEEE 829-2008]

====Acceptance testing (ISTQB) ==== 

With respect to user needs, requirements, and business processes conducted to determine whether or nota system satisfies the acceptance criteria and to enable the user, customers or other authorized entity to determine whether or not to accept the system. [After IEEE 610] 

==== Accessibility testing (ISO 29119) ====

Testing to determine whether a user with specific accessibility needs is able to operate a component or system. For example, this could include users with a wide range of accessibility needs, including visual, auditory, physical, speech, cognitive, language, learning, and neurological.

==== Accessibility testing (ISTQB) ==== 

Testing to determine the ease by which users with disabilities can use a component or system. [Gerrard] 


==== Actual result (ISO 29119) ====

The behavior of test item as a result of test run.

==== Actual result (ISTQB) ====

The behavior produced/observed when a component or system is tested.  

==== Accuracy (ISTQB) ====

The capability of the software product to provide the right or agreed results or effects with the needed degree of precision. [ISO 9126] 

See also functionality testing

==== Accuracy testing (ISTQB) ==== 

The process of testing to determine the accuracy of a software product acting (IDEAL): The phase within the IDEAL model where the improvements are developed, put into practice, and deployed across the organization. The acting phase consists of the activities: create solution, pilot/test solution, refine solution and implement solution. See also IDEAL.

==== Adaptability (ISTQB) ==== 

The capability of the software product to be adapted for different specified environments without applying actions or means other than those provided for this purpose for the software considered. [ISO 9126] 

See also portability. 

==== Adaptability testing (ISO 29119) ====

Testing against an adaptability requirement. For example, an adaptability requirement could specify where a system may need to be ported to another environment or platform.

==== Action word driven testing (ISTQB) ==== 

See keyword driven testing 

==== Actual outcome (ISTQB) ==== 

See actual result.

==== Ad hoc review (ISTQB) ====

See informal review. 


==== Ad-hoc testing (ISO 29119) ====

Testing performed using no recognized test case design technique.

==== Agile manifesto (ISTQB)  ==== 

A statement on the values that underpin agile software development. The 
values are: 
- Individuals and interactions over processes and tools 
- working software over comprehensive documentation 
- Customer collaboration over contract negotiation 
- responding to change over following a plan. 

==== Agile software development (ISTQB) ==== 

A group of software development methodologies based on iterative incremental development, where requirements and solutions evolve through collaboration between self-organizing cross-functional teams.

==== Agile testing (ISTQB) ==== 

Testing practice for a project using agile methodologies, such as extreme programming (XP), treating development as the customer of testing and emphasizing the test-first design paradigm. See also test-driven development. 

==== Algorithm test (ISTQB) ==== 

[TMap] See branch testing

==== Alpha testing (ISTQB) ==== 

Simulated or actual operational testing by potential users/customers or an independent test team at the developers’ site, but outside the development organization. 

==== Alpha testing (ISTQB) ==== 

It is often employed for off-the-shelf software as a form of internal 

==== Analyzability (ISTQB) ==== 

The capability of the software product to be diagnosed for deficiencies or causes of failures in the software, or for the parts to be modified to be identified. [ISO 9126] 

See also maintainability. 

==== Analyzer (ISTQB) ==== 

See static analyzer. 

==== Anomaly (ISO 29119) ====

1. Condition that deviates from expectations, based on requirements specifications, design documents, user documents, or standards, or from someone's perceptions or experiences. IEEE Std 1028-2008 IEEE Standard for Software Reviews and Audits.3.1. 
2. Anything observed in the documentation or operation of software or system that deviates from expectations based on previously verified software products, reference documents, or other sources of indicative behavior. IEEE Std 829-2008 IEEE Standard for Software and System Test Documentation.

==== Anomaly (ISTQB) ==== 

Any condition that deviates from expectation based on requirements specifications, design documents, user documents, standards etc. or from someone’s perception or experience. Anomalies may be found during, but not limited to, reviewing, testing, analysis, compilation, or use of software products or applicable documentation. [IEEE 
1044] See also bug, defect, deviation, error, fault, failure, incident, and problem. 

==== American National Standards Institute (ANSI) ====

It is a private non-profit organization that oversees the development of voluntary consensus standards for the products, processes, systems, services, and personnel in the USA. It also coordinates the American standards with the global standards so that the American products can be used internationally. 
Arc testing

See [[:general:glossary#branch testing|Branch Testing]]

==== Arc testing (ISTQB) ====

See branch testing

==== Assessment report (ISTQB) ==== 

A document summarizing the assessment results, e.g. conclusions, recommendations and findings. See also process assessment. 

==== Assessor (ISTQB) ==== 

A person who conducts an assessment; any member of an assessment team. 

==== Attack (ISTQB) ==== 

Directed and focused attempt to evaluate the quality, especially reliability, of a test object by attempting to force specific failures to occur. 

See also negative testing (ISTQB)

==== Attractiveness (ISTQB) ==== 

The capability of the software product to be attractive to the user. [ISO 9126] 

See also usability. 

==== Audit (ISTQB) ==== 

An independent evaluation of software products or processes to ascertain compliance to standards, guidelines, specifications, and/or procedures based on objective criteria, including documents that specify: 

(1) The form or content of the products to be produced 
(2) The process by which the products shall be produced 
(3) How compliance to standards or guidelines shall be measured. [IEEE 1028] 

==== Audit (ISO 29119) ====

An independent evaluation of software products or processes to ascertain compliance to standards, guidelines, specifications, and/or procedures based on objective criteria, including documents that specify:

(1) The form or content of the products to be produced;
(2) The process by which the products shall be produced;
(3) How compliance to standards or guidelines shall be measured. 

[IEEE 1028].

==== Audit trail (ISTQB) ==== 

A path by which the original input to a process (e.g. data) can be traced back through the process, taking the process output as a starting point. This facilitates defect analysis and allows a process audit to be carried out. [After TMap] 


==== Automated test (ISO 29119) ====

Automated testing is the use of software to control the execution of tests, the comparison of actual outcomes to predicted outcomes, the setting up of test preconditions, and/or other test control and test reporting functions: Commonly, test automation involves automating a manual process already in place that uses a formalized testing process

==== Automated test ware (ISTQB) ==== 

Testware used in automated testing, such as tool scripts.

==== Availability (ISTQB) ==== 

The degree to which a component or system is operational and accessible when required for use. Often expressed as a percentage. [IEEE 610]

==== Availability testing (ISO 29119) ====

Testing against an availability requirement.  An example of an availability requirement could be that a website remains available to the public 24 hours a day 7 days a week.

===== B =====

==== Back-up Testing (ISO 29119) ====

Testing that is concerned with the ability to backup a test item, its data, configuration and/or environment, and restore from that backup. It is also used to determine whether the backup and recovery procedures for the system are accurate. This type of testing may be carried out as part of a disaster recovery test. 

See also [[:general:glossary#recovery testing|Recovery Testing]]

==== Back-to-back testing (ISTQB) ==== 

Testing in which two or more variants of a component or system are executed with the same inputs, the outputs compared, and analyzed in cases of discrepancies. [IEEE 610] balanced scorecard: A strategic performance management tool for measuring whether the operational activities of a company are aligned with its objectives in terms of business vision and strategy. 

See also corporate dashboard, scorecard. 

==== Baseline (ISTQB) ==== 

===== A ===== specification or software product that has been formally reviewed or agreed upon that thereafter serves as the basis for further development, and that can be changed only through a formal change control process. [After IEEE 610] 

==== Base Choice Testing (ISO 29119) ====

A form of combinatorial testing in which the test coverage items are parameter value pairs (P-V pairs), where the value in the parameter value pair is the most common (or default) value. 

==== Basic block (ISTQB) ==== 

A sequence of one or more consecutive executable statements containing no branches. 

Note: A node in a control flow graph represents a basic block. 

==== Basis test set (ISTQB) ==== 

A set of test cases derived from the internal structure of a component or specification to ensure that 100% of a specified coverage criterion will be achieved. 


==== Benchmark test (ISO 29119) ====

A test that is be used to compare test objects to each other or to a standard against which measurements or comparisons can be made.

==== Bebugging (ISTQB) ==== 

[Abbott] See fault seeding. 

==== Behavior (ISTQB) ==== 

The response of a component or system to a set of input values and preconditions.  

==== Benchmark test (ISTQB) ==== 

(1) A standard against which measurements or comparisons can be made. 
(2) A test that is be used to compare components or systems to each other or to a standard as in (1). [After IEEE 610] 

==== Bespoke software (ISTQB) ==== 

Software developed specifically for a set of users or customers. The opposite is off-the-shelf software. 

==== Best practice (ISTQB) ==== 

A superior method or innovative practice that contributes to the improved performance of an organization under given context, usually recognized as ‘best’ by other peer organizations. 

==== Beta testing (ISTQB) ==== 

Operational testing by potential and/or existing users/customers at an external site not otherwise involved with the developers, to determine whether or not a component or system satisfies the user/customer needs and fits within the business processes. Beta testing is often employed as a form of external ==== acceptance testing (ISTQB) ==== for off-the-shelf software in order to acquire feedback from the market. 

==== Beta testing (ISO 29119) ====

Testing by potential and/or existing users/customers at an external site not otherwise involved with the developers, to determine whether or not a component or system satisfies their needs and fits within the business processes. Beta testing is often employed as a form of external acceptance testing for off-the-shelf software in order to acquire feedback from the market. 

==== Big-bang testing (ISTQB) ==== 

A type of integration testing in which software elements, hardware elements, or both are combined all at once into a component or an overall system, rather than in stages. [After IEEE 610] ==== See also integration testing (ISTQB) ====

==== Black box technique (ISTQB) ==== 

See black box test design technique. 

==== Black box test design technique (ISTQB) ==== 

Procedure to derive and/or select test cases based on an analysis of the specification, either functional or non-functional, of a component or system without reference to its internal structure. 

==== Black box testing (ISTQB) ==== 

Testing, either functional or non-functional, without reference to the internal structure of the component or system. 

==== Black box testing (ISO 29119) ====

See [[:general:glossary#specification-based testing|Specification-based Testing]]

==== Blocked test case (ISTQB) ==== 

A test case that cannot be executed because the preconditions for its execution are not fulfilled. 

==== Bottom-up testing (ISTQB) ==== 

An incremental approach to ==== integration testing (ISTQB) ==== where the lowest level components are tested first, and then used to facilitate the testing of higher-level components. This process is repeated until the component at the top of the hierarchy is tested. 

See also integration testing

==== Bottom-up testing (ISO 29119) ====

Incremental approach to integration testing where the lowest level components are tested first, and then used To facilitate the testing of higher level components. This process is repeated until the component at the top of the hierarchy is tested. 

See also [[:general:glossary#integration testing|Integration Testing]]

==== Boundary value (ISTQB) ==== 

An input value or output value which is on the edge of an equivalence partition or at the smallest incremental distance on either side of an edge, for example the minimum or maximum value of a range. 
==== Boundary value analysis (ISTQB) ==== 

A black box test design technique in which test cases are designed based on boundary values. See also boundary value.

==== Boundary value analysis (ISO 29119) ====

A specification-based test design technique in which test cases are designed based on the boundary values of equivalence partitions. 


==== Boundary value coverage (ISTQB) ==== 

The percentage of boundary values that have been exercised by a test suite. 


==== Boundary value coverage (ISO 29119) ====

Percentage of boundary values of the component's equivalence classes that have been exercised by a test procedure. 
[BS 7925-1]

==== Boundary value testing (ISTQB) ==== 

See boundary value analysis. 

==== Boundary value testing (ISO 29119) ====

See [[:general:glossary#boundary value analysis|Boundary Value Analysis]]

==== Branch (ISTQB) ==== 

A basic block that can be selected for execution based on a program construct in which one of two or more alternative program paths is available, e.g. case, jump; go to, if-then-else. 

==== Branch condition (ISTQB) ==== 

See condition. 

==== Branch condition combination coverage (ISTQB) ==== 

See multiple condition coverage. 

==== Branch condition combination testing (ISTQB) ====  

See multiple condition testing

==== Branch condition coverage (ISTQB) ==== 

See condition coverage. 

==== Branch coverage (ISTQB) ==== 

The percentage of branches that have been exercised by a test suite. 100% 
Branch coverage implies both 100% decision coverage and 100% statement coverage. 

==== Branch condition testing (ISO 29119) ====

A form of condition testing where the test coverage items are the Boolean operand values (true/false) within conditions.

==== Branch condition combination testing (ISO 29119) ====

A form of condition testing where the test coverage items are the unique combinations of Boolean operand values within decisions.

==== Branch testing (ISO 29119) ====

A structure-based test design technique that uses a control flow model of the source code of the test item, which identifies branches (arcs) in the control flow graph, which are subsequently exercised by test cases.

==== Buffer (ISTQB) ==== 

A device or storage area used to store data temporarily for differences in rates of data flow, time or occurrence of events, or amounts of data that can be handled by the devices or processes involved in the transfer or use of the data. [IEEE 610] 

==== Buffer overflow (ISTQB) ==== 

A memory access failure due to the attempt by a process to store data beyond the boundaries of a fixed length buffer, resulting in overwriting of adjacent memory areas or the raising of an overflow exception. 

==== Buffer overflow (ISO 29119) ====

Memory access defect caused by a process attempting to store data beyond the boundaries of a fixed length buffer, resulting in overwriting of adjacent memory areas or the raising of an overflow exception.

See also buffer. 

==== Bug (ISO 29119) ====

1. See [[:general:glossary#defect|Defect]]
2. See [[:general:glossary#fault|Fault]]
[BS 7925].

==== Bug (ISTQB) ==== 

See defect. 

==== Bug report (ISTQB) ==== 

See defect report. 

==== Bug taxonomy (ISTQB) ==== 

See defect taxonomy.

==== Bug tracking tool (ISTQB) ==== 

See defect management tool. 

==== Business Case (PRINCE2) ====

In the PRINCE2 project management methodology, the Business Case is the 'driver' of the project. It is used to decide from beforehand if the project is a worthwhile investment. The Business Case is used to justify the investment of time, money and resources into a project by highlighting the benefits from the project. The Business Case is made of the eight key sections: Reasons; Options; Benefits; Risks; Costs; Timescale; Investment Appraisal; and Evaluation. 

==== Business Relationship Management (BRM) ====

It is an approach for understanding, defining, and supporting a range of inter-business activities that are related to the provision of knowledge and services via networks, with a focus on the emergence of online networks as the primary medium for conducting business relationships. It is aimed at providing a complete and holistic model of business relationships and business relationship value over time, so as to make the different aspects of business relationships both explicit and measurable. 

===== C =====

==== Call graph ====

 An abstract representation of calling relationships between subroutines in a program. 

==== Capability Maturity Model (CMM) (ISTQB) ==== 

A five level staged framework that describes the key elements of an effective software process. The Capability Maturity Model covers best-practices for planning, engineering and managing software development and maintenance. 
[CMM] 

==== Capability Maturity Model Integration (CMMI) ====

It is a process improvement approach where the goal is to help organizations improve their performance. CMMI can be useful for guiding process improvements across a project, a division, or an entire organization. CMMI can help to integrate the traditionally separate organizational functions with set process improvement goals and priorities, thus providing guidance for quality processes and a point of reference for appraising the current processes. 

==== Capacity testing (ISO 29119) ====

A sub-category of performance testing where testing is aimed at assessing how the test item will perform under conditions that may need to be supported in the future. For example, this may include assessing what level of additional resources (e.g. memory, disk capacity, and network bandwidth) will be required to support anticipated future loads. 

==== Capture/playback tool (ISO 29119) ====

A type of test tool where inputs are recorded during manual testing in order to generate test scripts that can be executed later (i.e. replayed) by the tool. These tools are often used to support automated regression testing.

==== CAST (ISO 29119) ====

Acronym for Computer-Aided Software Testing. 

See also [[:general:glossary#test automation|Test Automation]]

==== CAST (ISTQB) ==== 

Acronym for  Computer Aided Software Testing. See also test automation. 

==== Causal analysis (ISTQB) ==== 

The analysis of defects to determine their root cause. [CMMI] 

==== Cause-effect analysis (ISTQB) ==== 

See cause-effect graphing.

==== Cause-effect graphing (ISO 29119) ====

A specification-based test design technique which uses a model of the logical relationships between causes (e.g. inputs) and effects (e.g. outputs) for the test item, where each cause and each effect is expressed as a Boolean. 

==== Cause-effect decision table (ISTQB) ==== 

See decision table.

==== Cause-effect diagram (ISTQB) ==== 

A graphical representation used to organize and display the interrelationships of various possible root causes of a problem. Possible causes of a real or potential defect or failure are organized in categories and subcategories in a horizontal tree-structure, with the (potential) defect or failure as the root node. [After Juran]

==== Cause-effect graph (ISTQB) ==== 

A graphical representation of inputs and/or stimuli (causes) with their associated outputs (effects), which can be used to design test cases. 

==== Cause-effect graphing (ISTQB) ==== 

A black box test design technique in which test cases are designed from cause-effect graphs. [BS 7925/2] certification: The process of confirming that a component, system or person complies with its specified requirements, e.g. by passing an exam. 
See configuration control. 

==== Change control board(ISTQB) ==== 

See configuration control board. 

==== Change management (ISTQB) ==== 

(1)	A structured approach to transitioning individuals, teams, and organizations from a current state to a desired future state.(2) Controlled way to effect a change, or a proposed change, to a product or service. See also configuration management.
(2)	

==== Changeability (ISTQB) ==== 

The capability of the software product toenable specified modifications to be implemented. [ISO 9126] 

See also maintainability. 

==== Charter (ISTQB) ==== 

See test charter. 

==== Checker (ISTQB) ==== 

See reviewer.

==== Checklist-based testing (ISTQB) ==== 

An experience-based test design technique whereby the experienced tester uses a high-level list of items to be noted, checked, or remembered, or a set of rules or criteria against which a product has to be verified. See also experience-based testing 

==== Chow's coverage metrics (ISTQB) ==== 

See N-switch coverage. [Chow] 

==== Classification tree (ISTQB) ==== 

A tree showing equivalence partitions hierarchically ordered, which is used to design test cases in the classification tree method. See also classification tree method.

==== Classification tree method (ISTQB) ==== 

A black box test design technique in which test cases, described by means of a classification tree, are designed to execute combinations of representatives of input and/or output domains. [Grochtmann] 

==== Classification tree method (ISO 29119) ====

A specification-based test design technique which uses a model of the test item, in the form of a classification tree that partitions the inputs and outputs (i.e. parameters) of the test item, where each partition (also called 

==== Code (ISTQB) ==== 

Computer instructions and data definitions expressed in a programming language or in a form output by an assembler, compiler or other translator. [IEEE 610] 

==== Code analyzer (ISTQB) ==== 

See static code analyzer. 

Code coverage: An analysis method that determines which parts of the software have been executed (covered) by the test suite and which parts have not been executed, e.g. statement coverage, decision coverage or condition coverage.

==== Code analyzer (ISO 29119) ====

A tool that carries out static code analysis. The tool checks source code, for certain properties such as conformance to coding standards, quality metrics or data flow anomalies.==== Code-based testing (ISTQB) ==== 

See white box testing

==== Codependent behavior (ISTQB) ==== 

Excessive emotional or psychological dependence on another person, specifically in trying to change that person’s current (undesirable) behavior while supporting them in continuing that behavior. For example, in ==== software testing (ISTQB) ====, complaining about late delivery to test and yet enjoying the necessary “heroism” working additional hours to make up time when delivery is running late, therefore reinforcing the lateness. 

==== Co-existence (ISTQB) ==== 

The capability of the software product to co-exist with other independent software in a common environment sharing common resources. [ISO 9126] 

==== Combinatorial test techniques (ISO 29119) ====

A class of specification-based test design techniques that use a model defined in terms of test item parameters and the values these parameters can take (P-V pairs). For some test items, a parameter may only be able to take on a small set of possible values, but it is also possible to apply other testing techniques, such as EP and BVA, to reduce a large set of possible values for a parameter to a manageable set.

==== Commercial off-the-shelf software (ISTQB) ==== 

See off-the-shelf software.

==== Community of Practice (ISTQB) ====

« TODO » 

Within this group following roles exist: 

COP Member
COP Lead

==== Compatibility testing (ISTQB) ==== 

See interoperability testing

==== Compatibility testing (ISO 29119) ====

A test technique to determine the degree to which two or more systems or components can exchange Information and/or perform their required functions while sharing the same hardware or software environment.

==== Completion criteria (ISO 29119) ====

See [[:general:glossary#exit criteria|Exit Criteria]]

==== Compliance testing (ISO 29119) ====

Testing to determine the compliance of the component or system.

==== Components (RUP) ====

The components are non-trivial modules and subsystems of software that are required to fulfill a specific function. 

==== Component testing (ISO 29119) ====

Testing of individual software components.  

[IEEE 610.12-1990]

==== Compiler ==== 

A software tool that translates programs expressed in a high order language into their machine language equivalents. [IEEE 610] 

==== Complete testing  ==== 

See exhaustive testing 

==== Component Integration Testing (ISO 29119) ====

Testing performed to expose defects in the interfaces and interaction between integrated components.


==== Completion criteria ==== 

See exit criteria. 

==== Complexity (ISTQB) ==== 

The degree to which a component or system has a design and/or internal structure that is difficult to understand, maintain and verify. 

See also cyclomatic complexity. 

Compliance: The capability of the software product to adhere to standards, conventions or regulations in laws and similar prescriptions. [ISO 9126]

==== Compliance testing (ISTQB) ==== 

The process of testing to determine the compliance of the component or system. 

==== Component (ISTQB) ==== 

A minimal software item that can be tested in isolation. 

==== Component integration testing (ISTQB) ==== 

Testing performed to expose defects in the interfaces and interaction between integrated components. 

=== Component specification (ISTQB) ==== 

A description of a component’s function in terms of its output values for specified input values under specified conditions, and required non-functional behavior (e.g. resource-utilization). 

==== Component testing (ISTQB) ==== 

The testing of individual software components. [After IEEE 610] 

==== Compound condition (ISTQB) ==== 

Two or more single conditions joined by means of a logical operator (AND, OR or XOR), e.g. ‘A>B AND C>1000’. 

==== Concrete test case (ISTQB) ==== 

See low-level test case. 

==== Concurrency testing (ISTQB) ==== 

Testing to determine how the occurrence of two or more activities within the same interval of time, achieved either by interleaving the activities or by simultaneous execution, is handled by the component or system. [After IEEE 610] 

==== Condition (ISTQB) ==== 

A logical expression that can be evaluated as True or False, e.g. A>B. See also test condition.

==== Condition combination coverage (ISTQB) ==== 

See multiple condition coverage. 

==== Condition combination testing (ISTQB) ==== 

See multiple condition testing 

==== Condition coverage (ISTQB) ==== 

The percentage of condition outcomes that have been exercised by a test suite. 100% condition coverage requires each single condition in every decision statement to be tested as True and False. 

==== Condition determination coverage (ISTQB) ==== 

The percentage of all single condition outcomes that independently affect a decision outcome that have been exercised by a test case suite. 100% condition determination coverage implies 100% decision condition coverage.  

==== Condition determination testing (ISTQB) ==== 

A white box test design technique in which test cases are designed to execute single condition outcomes that independently affect a decision outcome.

==== Condition outcome (ISTQB) ==== 

The evaluation of a condition to True or False. 

==== Condition testing (ISTQB) ==== 

A white box test design technique in which test cases are designed to execute condition outcomes. 

==== Condition testing (ISO 29119) ====

Classes of a structure-based test design techniques that use a model of the source code of the test item, which identifies decisions containing two or more conditions. There are a number of forms of condition testing, all based on exercising these conditions, such as branch condition testing, branch condition combination testing, and modified condition decision coverage (MCDC) testing.

==== Concurrency testing (ISO 29119) ====

Testing to determine how the occurrence of two or more activities within the same interval of time, either achieved by interleaving the activities or by simultaneous execution, is handled by the component or system. 

[After IEEE 610].

==== Confidence test (ISTQB) ==== 

See smoke test. 

==== Configuration (ISTQB) ==== 

The composition of a component or system as defined by the number, nature, and interconnections of its constituent parts. 

==== Configuration auditing (ISTQB) ==== 

The function to check on the contents of libraries of configuration items, e.g. for standards compliance. [IEEE 610] 

==== Configuration control (ISTQB) ====  

An element of configuration management, consisting of the evaluation, co-ordination, approval or disapproval, and implementation of changes to Configuration items after formal establishment of their configuration identification. [IEEE 610] 

==== Configuration control board (CCB) (ISTQB) ==== 

A group of people responsible for evaluating and approving or disapproving proposed changes to configuration items, and for ensuring implementation of approved changes. [IEEE 610] 

==== Configuration identification (ISTQB) ==== 

An element of configuration management, consisting of selecting the configuration items for a system and recording their functional and physical characteristics in technical documentation. [IEEE 610] 

==== Configuration item (ISTQB) ==== 

An aggregation of hardware, software or both, that is designated for configuration management and treated as a single entity in the configuration management process. [IEEE 610] 

==== Configuration management (ISTQB) ==== 

A discipline applying technical and administrative direction and surveillance to: identify and document the functional and physical characteristics of a Configuration item, control changes to those characteristics, record and report change processing and implementation status, and verify compliance with specified requirements. [IEEE 610] 

==== Configuration management tool (ISTQB) ==== ===== A ===== tool that provides support for the identification and control of configuration items, their status over changes and versions, and the release of baselines consisting of configuration items. 

==== Configuration testing (ISTQB) ====

See portability testing

==== Confirmation testing (ISTQB) ==== 

See re-testing 

==== Configuration testing (ISO 29119) ====

Testing to determine the extent to which the test item fulfils specified behavior in different configurations (the arrangement of a computer system or component as defined by the number, nature, and interconnections of its constituent parts). 

==== Conformance testing (ISTQB) ==== 

See compliance testing 

==== Conformance testing (ISO 29119) ====

See [[:general:glossary#compliance testing|Compilance Testing]]

==== Consistency (ISTQB) ==== 

The degree of uniformity, standardization, and freedom from contradiction among the documents or parts of a component or system. [IEEE 610] 

==== Content-based model (ISTQB) ==== 

A process model providing a detailed description of good engineering practices, e.g. test practices. 

==== Continuous representation(ISTQB) ==== 

A capability maturity model structure wherein capability levels provide a recommended order for approaching process improvement within specified process areas. [CMMI] 

==== Contract Administration ====

It relates to the management of the relationship with the seller. 

==== Contract Close-Out ====

It pertains to the completion and the settlement of a contract with the resolution of all outstanding issues. 

==== Control flow (ISTQB) ==== 

A sequence of events (paths) in the execution through a component or system. 

==== Control flow analysis (ISTQB) ==== 

A form of static analysis based on a representation of unique paths (sequences of events) in the execution through a component or system. Control flow analysis evaluates the integrity of control flow structures, looking for possible control flow anomalies such as closed loops or logically unreachable process steps. 

==== Control flow analysis (ISO 29119) ====

A form of static analysis based on a representation of sequences of events in the execution through a component or system.

==== Control flow graph (ISTQB) ==== 

An abstract representation of all possible sequences of events (paths) in the execution through a component or system. 

==== Control flow path (ISTQB) ==== 

See path. 

==== Conversion testing (ISTQB) ==== 

Testing of software used to convert data from existing systems for use in replacement systems. 

==== Conversion testing (ISO 29119) ====

A test technique aimed at determining whether data can be transferred from an existing test item to a new (replacement) test item. For example, this could include assessing the ability to transfer data from one database to another.

==== Corporate dashboard (ISTQB) ====  

A dashboard-style representation of the status of corporate performance data. See also balanced scorecard, dashboard.

==== Cost of quality (ISTQB) ==== 

The total costs incurred on quality activities and issues and often split into prevention costs, appraisal costs, internal failure costs and external failure costs. 

==== COTS (ISTQB) ==== 

Acronym for Commercial Off-The-Shelf software. 

See off-the-shelf software. 

==== Coverage (ISTQB) ==== 

The degree, expressed as a percentage, to which a specified coverage item has been exercised by a test suite. 

==== Coverage analysis (ISTQB) ==== 

Measurement of achieved coverage to a specified coverage item during test execution referring to predetermined criteria to determine whether ==== additional testing (ISTQB) ==== is required and if so, which test cases are needed. 

==== Coverage item (ISTQB) ==== 

An entity or property used as a basis for test coverage, e.g. equivalence partitions or code statements. 

==== Coverage tool (ISTQB) ==== 

A tool that provides objective measures of what structural elements, e.g. statements, branches have been exercised by a test suite. 

==== COP ====

See [[:general:glossary#community of practice|Community of Practice]] 

==== Coverage measurement tool ====

A tool that provides objective measures of what structural elements, e.g. statements, branches have been exercised by a test.

==== Coverage measurement tool (ISTQB) ==== 

See coverage tool.

==== Critical success factor (ISTQB) ==== 

An element which is necessary for an organization or project to achieve its mission. They are the critical factors or activities required for ensuring the success. 

See also content-based model. 

==== Critical Testing Processes (ISTQB) ==== 

A content-based model for test process improvement built around twelve critical processes. These include highly visible processes, by which peers and management judge competence and mission-critical processes in which performance affects the company's profits and reputation. 

==== CTP (ISTQB) ==== 

See Critical Testing (ISTQB) 

==== Custom software (ISTQB) ====  

See bespoke software. 

==== Cyclomatic complexity (ISTQB) ====

The number of independent paths through a program. 

Cyclomatic complexity is defined as: L – N + 2P, where 

- L = the number of edges/links in a graph 
- N = the number of nodes in a graph 
- P = the number of disconnected parts of the graph (e.g. a called graph or subroutine) 
[After McCabe] 

Cyclomatic number: See cyclomatic complexity. 

===== D =====

==== Daily build (ISTQB) ====

A development activity where a complete system is compiled and linked every day (usually overnight), so that a consistent system is available at any time including all latest changes. 

Dashboard: A representation of dynamic measurements of operational performance for some organization or activity, using metrics represented via metaphores such as visual “dials”, “counters”, and other devices resembling those on the dashboard of an automobile, so that the effects of events or activities can be easily understood and related to operational goals. 

See also corporate dashboard, scorecard. 

==== Data definition (ISTQB) ==== 

An executable statement where a variable is assigned a value.

==== Data driven testing (ISTQB) ==== 

A scripting technique that stores test input and expected results in a table or spreadsheet, so that a single control script can execute all of the tests in the table. Data Driven testing is often used to support the application of test execution tools such as capture/playback tools. [Fewster and Graham] 

See also keyword driven testing 

==== Data-driven testing (ISO 29119) ====

A scripting technique that stores test input and expected results in a table or spreadsheet, so that a single control script can execute all of the tests in the table. Data driven testing is often used to support the application of test execution tools such as capture/playback tools. [Fewster and Graham].

==== Data flow (ISTQB) ====

An abstract representation of the sequence and possible changes of the state of data objects, where the state of an object is any of: creation, usage, or destruction. [Beizer] 

====Data flow analysis (ISTQB) ==== 

A form of static analysis based on the definition and usage of variables. 

====Data flow coverage (ISTQB) ====

The percentage of definition-use pairs that have been exercised by a test suite. 

==== Data flow testing (ISTQB) ==== 

A white box test design technique in which test cases are designed to execute definition and use pairs of variables. 

==== Data flow testing (ISO 29119) ====

A class of structure-based test design techniques that use a model of the test item which identifies control flow sub paths through the program that link the definition and subsequent use of individual program variables. There are a number of forms of data flow testing, including all-definitions testing, all-c-uses testing, all-p-uses testing, all-uses testing, and all-du-paths testing.

==== Data integrity testing (ISTQB) ====

See database integrity testing 

==== Database integrity testing (ISTQB) ==== 

Testing the methods and processes used to access and manage the data(base), to ensure access methods, processes and data rules function as expected and that during access to the database, data is not corrupted or unexpectedly deleted, updated or created. 

==== Dd-path (ISTQB) ====  

A path of execution (usually through a graph representing a program, such as a flow-chart) that does not include any conditional nodes such as the path of execution between two decisions.

====Dead code (ISTQB) ====

See unreachable code. 

==== Debugger (ISTQB) ====  

See debugging tool. 

==== Debugging (ISTQB) ====  

The process of finding, analyzing and removing the causes of failures in software. 

==== Debugging tool (ISTQB) ====  

A tool used by programmers to reproduce failures, investigate the state of programs and find the corresponding defect. Debuggers enable programmers to execute programs step by step, to halt a program at any program statement and to set and examine program variables. 

==== Decision (ISTQB) ====  

A program point at which the control flow has two or more alternative routes. A node with two or more links to separate branches.

==== Decision condition coverage (ISTQB) ====

The percentage of all condition outcomes and decision outcomes that have been exercised by a test suite. 100% decision condition coverage implies both 100% condition coverage and 100% decision coverage.  

==== Decision condition testing (ISTQB) ==== 

A white box test design technique in which test cases are designed to execute condition outcomes and decision outcomes. decision coverage: The percentage of decision outcomes that have been exercised by a test suite. 100% decision coverage implies both 100% branch coverage and 100% statement coverage. 
Decision outcome: The result of a decision (which therefore determines the branches to be taken). 

==== Decision coverage (ISO 29119) ====

The percentage of decision outcomes that have been exercised by testing. [BS 7925-1]

==== Decision statement (ISO 29119) ====

Decisions correspond to statements in the source code where two (or more) possible outcomes (and hence sub paths) may be taken by the control flow. Typical decisions are used for simple selections (e.g. if-then-else), to decide when to exit loops (e.g. while-loop), and in case (switch) statements (e.g. case-1-2-3-..-N).

See also [[:general:glossary#decision testing|Decision Testing]]

==== Decision table (ISTQB) ====

A table showing combinations of inputs and/or stimuli (causes) with their 
associated outputs and/or actions (effects), which can be used to design test cases. 

==== Decision table testing (ISTQB) ====

A black box test design technique in which test cases are designed to 
execute the combinations of inputs and/or stimuli (causes) shown in a decision table. 
[Veenendaal04] See also decision table. 

==== Decision table testing (ISO 29119) ====

A specification-based test design technique that uses a model in the form of a decision table of the logical relationships between conditions (causes) and actions (effects) for the test item expressed as Booleans. 

==== Decision testing (ISTQB) ==== 
A white box test design technique in which test cases are designed to execute decision outcomes. 

==== Decision testing (ISO 29119) ====

A structure-based test design technique that uses a model of the source code of the test item which identifies decision statements in the source code, where a decision statement is an executable statement that many transfer control to another statement depending upon the logic of the decision statement.

==== Defect  (ISTQB) ====

A flaw in a component or system that can cause the component or system to fail to perform its required function, e.g. an incorrect statement or data definition. A, if  encountered during execution, may cause a failure of the component or system. 

==== Defect (ISO 29119) ====

(1) A flaw in a component or system that can cause it to fail to perform its required function.
(2) Any condition that deviates from expectation based on requirements specifications, design documents, 

NOTE: Defects may be found during, but not limited to, reviewing, testing, analysis, compilation, or use of software products or applicable documentation

==== Defect based technique (ISTQB) ====  

See defect based test design technique. 

==== Defect based test design technique (ISTQB) ====  

A procedure to derive and/or select test cases targeted at one or more defect categories, with tests being developed from what is known about the specific defect category. See also defect taxonomy. 

==== Defect density (ISTQB) ====

The number of defects identified in a component or system divided by the 
size of the component or system (expressed in standard measurement terms, e.g. lines-of-code, number of classes or function points). 

==== Defect density (ISO 29119) ====

The number of defects identified in a component or system divided by the size of the component or system (expressed in standard measurement terms, e.g. lines of code, number of classes or function points).

==== Defect Detection Percentage (DDP)  (ISTQB) ====

The number of defects found by a test phase, divided by the number found by that test phase and any other means afterwards. 

==== Defect detection percentage (DDP) (ISO 29119) ====

The number of defects found by a test phase, divided by the number found by that test phase and any other means afterwards.

==== Defect management (ISTQB) ==== 

The process of recognizing, investigating, taking action and disposing of defects. It involves recording defects, classifying them and identifying the impact. 
[After IEEE 1044] 

==== Defect management tool (ISTQB) ====

A tool that facilitates the recording and status tracking of defects and changes. They often have workflow-oriented facilities to track and control the allocation, correction and re-testing of defects and provide reporting facilities. 

See also incident management tool. 

==== Defect masking (ISTQB) ==== 

An occurrence in which one defect prevents the detection of another. [After IEEE 610] 

==== Defect report (ISTQB) ==== 

A document reporting on any flaw in a component or system that can cause the component or system to fail to perform its required function. [After IEEE 829] 

==== Defect report (ISO 29119) ====

A document reporting on any flaw in a component or system that can cause the component or system to fail to perform its required function. [After IEEE 829].

==== Defect seeding (ISO 29119) ====

The process of intentionally adding known defects to those already in the component or system for the purpose of monitoring the rate of detection and removal, and estimating the number of remaining defects. [IEEE 610].

==== Defect taxonomy (ISO 29119) ====

A system of (hierarchical) categories designed to be a useful aid for reproducibly classifying defects.

==== Defect taxonomy (ISTQB) ====

A system of (hierarchical) categories designed to be a useful aid for reproducibly classifying defects. 

==== Defect tracking tool (ISTQB) ==== 

See defect management tool. 

==== Definition-use pair (ISTQB) ==== 

The association of the definition of a variable with the use of that variable. Variable uses include computational (e.g. multiplication) or to direct the execution of a path (“predicate” use). 

==== Deliverable (ISTQB) ====

Any (work) product that must be delivered to someone other than the (work) product’s author.

==== Deming cycle (ISTQB) ====

An iterative four-step problem-solving process, (plan-do-check-act), typically used in process improvement. [After Deming]

==== Design-based testing (ISTQB) ==== An approach to testing in which test cases are designed based on the architecture and/or detailed design of a component or system (e.g. tests of interfaces between components or systems). 

==== Desk checking (ISTQB) ==== 

Testing of software or a specification by manual simulation of its execution. 

See also static testing 

==== Desk checking (ISO 29119) ====

(1) Testing of software or specification by manual simulation of its execution. 

See also [[:general:glossary#static analysis|Static Analysis]]

(2) Testing of software by the manual simulation of its execution [BS 7925].

==== Development testing (ISTQB) ====: 

Formal or informal testing conducted during the implementation of a component or system, usually in the development environment by developers. [After IEEE 
610] 

==== Deviation (ISTQB) ====

See incident. 

==== Deviation report (ISTQB) ====

See incident report. 

==== Diagnosing (IDEAL) (ISTQB) ==== 

The phase within the IDEAL model where it is determined where one is, relative to where one wants to be. The diagnosing phase consists of the activities: characterize current and desired states and develop recommendations. 

See also IDEAL.

==== Dirty testing (ISTQB) ==== 

See negative testing 

==== Disaster recovery testing (ISO 29119) ====

A category of testing concerned with the ability to recover the test item in the event of failure. This can include assessing the ability to transfer the operation of the test item to and from a remote disaster recovery facility at a different operating site.

==== Documentation testing (ISTQB) ==== 

Testing the quality of the documentation, e.g. user guide or installation guide. 
domain: The set from which valid input and/or output values can be selected. 

==== Driver (ISTQB) ==== 

A software component or test tool that replaces a component that takes care of the control and/or the calling of a component or system. [After TMap] 

==== Dynamic analysis (ISTQB) ==== 

The process of evaluating behavior, e.g. memory performance, CPU usage, of a system or component during execution. [After IEEE 610] 

==== Dynamic analysis tool (ISTQB) ==== 

A tool that provides run-time information on the state of the software code. These tools are most commonly used to identify unassigned pointers, check pointer arithmetic and to monitor the allocation, use and de-allocation of memory and to flag memory leaks. 

==== Dynamic comparison (ISTQB) ==== 

Comparison of actual and expected results, performed while the software is being executed, for example by a test execution tool. 

==== Dynamic testing (ISTQB) ==== 

Testing that involves the execution of the software of a component or system. 

==== Dynamic testing (ISO 29119) ====

Testing that involves the execution of the software of a component or system.

===== E =====

==== Each choice testing (ISO 29119) ====

A form of combinatorial testing in which the test coverage items are the set of values for each of the P-V pairs. 

==== Eclipse Process Framework (OpenUP) ====

It is an open source project that is managed by the Eclipse Foundation. It has the two goals: to provide an extensible framework and exemplary tools for software process engineering; and to provide exemplary and extensible process content for a range of software development and management processes supporting iterative, incremental development, and agile methods and applicable to a broad set of development platforms and applications. 

==== Efficiency (ISTQB) ==== 

The capability of the software product to provide appropriate performance, relative to the amount of resources used under stated conditions. [ISO 9126] 

==== Efficiency testing (ISTQB) ==== the process of testing to determine the efficiency of a software product. 

==== EFQM (European Foundation for Quality Management) excellence model (ISTQB) ==== 

A non-prescriptive framework for an organization’s quality management system, defined and owned by the European Foundation for Quality Management, based on five 'Enabling' criteria (covering what an organization does), and four 'Results' criteria (covering what an organization achieves). 

==== Elementary comparison testing (ISTQB) ==== 

A black box test design technique in which test cases are designed to execute combinations of inputs using the concept of condition determination coverage. [TMap] 

==== Emotional intelligence (ISTQB) ====  
The ability, capacity, and skill to identify, assess, and manage the emotions of one's self, of others, and of groups.

==== Emulator (ISTQB) ====  

A device, computer program, or system that accepts the same inputs and produces the same outputs as a given system. [IEEE 610] See also simulator.

==== Endurance testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing whether the test item can sustain a specified required load for a continuous period of time.

==== Entry criteria (ISTQB) ====  

The set of generic and specific conditions for permitting a process to go forward with a defined task, e.g. test phase. The purpose of entry criteria is to prevent a task from starting which would entail more (wasted) effort compared to the effort needed to remove the failed entry criteria. [Gilb and Graham] 

==== Entry criteria (ISO 29119) ====

The set of generic and specific conditions for permitting a process to go forward with a defined task, e.g. test phase.

==== Equivalence class (ISO 29119) ====

See [[:general:glossary#equivalence partitioning|Equivalence Partitioning]]

==== Entry point (ISTQB) ====  

An executable statement or process step which defines a point at which a given process is intended to begin.

==== Equivalence class (ISTQB) ====  

See equivalence partition. 

==== Equivalence class coverage (ISO 29119) ====

See [[:general:glossary#equivalence partition coverage|Equivalence Partition Coverage]]

==== Equivalence partition (ISTQB) ====

A portion of an input or output domain for which the behavior of a component or system is assumed to be the same, based on the specification.

==== Equivalence partition (ISO 29119) ====

A partition of the inputs or outputs (i.e. parameters) of the test item, such that all the values in the partition can reasonably be expected to be treated similarly (i.e. they may be considered "equivalent"). Equivalence partitions are typically derived for both valid and invalid input and output data (i.e. an invalid input value would be rejected by the test item, and an invalid output value should never be generated).

==== Equivalence partitioning (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute representative values from equivalence partitions, i.e. portions of an input or output domain for which the behavior of a component or system is assumed to be the same, based on the specification.

==== Equivalence partitioning (ISTQB) ====  

A black box test design technique in which test cases are designed to execute representatives from equivalence partitions. In principle test cases are designed to cover each partition at least once.

==== Equivalence partition coverage (ISTQB) ====  

The percentage of equivalence partitions that have been exercised by a test suite. 

==== Equivalence partition coverage (ISO 29119) ====

Percentage of equivalence partitions that have been executed by testing.

==== Error (ISTQB) ====  

A human action that produces an incorrect result. [After IEEE 610] 


==== Error (ISO 29119) ====

A human action that produces an incorrect result.  [IEEE 610.12-1990]

==== Error guessing (ISO 29119) ====

A test design technique where the experience of the tester is used to anticipate what defects might be present in the component or system under test as a result of errors made, and to design tests specifically to expose them. [BS 7925-1]

==== Error guessing (ISTQB) ====  

A test design technique where the experience of the tester is used to anticipate what defects might be present in the component or system under test as a result of errors made, and to design tests specifically to expose them. 

==== Error seeding (ISTQB) ====  

See fault seeding. 

==== Error seeding tool (ISTQB) ====

See fault seeding tool.

==== Error tolerance (ISTQB) ====  

The ability of a system or component to continue normal operation despite the presence of erroneous inputs. [After IEEE 610].

==== Establishing (IDEAL) (ISTQB) ====

The phase within the IDEAL model where the specifics of how an organization will reach its destination are planned. The establishing phase consists of the activities: set priorities, develop approach and plan actions. 

See also IDEAL.

==== Evaluation (ISTQB) ====

See testing 

==== Exception handling (ISTQB) ====  

Behavior of a component or system in response to erroneous input, from either a human user or from another component or system, or to an internal failure. 

==== Executable statement (ISTQB) ==== ===== A ===== statement which, when compiled, is translated into object code, and which will be executed procedurally when the program is running and may perform an action on data. 

==== Exercised (ISTQB) ====  

A program element is said to be exercised by a test case when the input value causes the execution of that element, such as a statement, decision, or other structural element.  

==== Exhaustive testing (ISTQB) ==== 

A test approach in which the test suite comprises all combinations of input values and preconditions. 

==== Exit criteria (ISTQB) ====

The set of generic and specific conditions, agreed upon with the stakeholders, for permitting a process to be officially completed. The purpose of exit criteria is to prevent a task from being considered completed when there are still outstanding parts of the task which have not been finished. Exit criteria are used to report against and to plan when to stop testing. [After Gilb and Graham] 

==== Exit criteria (ISO 29119) ====

The set of generic and specific conditions, agreed upon with the stakeholders, for permitting a process to be officially completed.

==== Exit point (ISTQB) ====  

An executable statement or process step which defines a point at which a given process is intended to cease.

==== Expected outcome (ISTQB) ====  

See expected result. 

==== Expected outcome (ISO 29119) ====

The behavior predicted by the specification, or another source, of the component or system under specified conditions. 

==== Expected result (ISTQB) ====  

The behavior predicted by the specification, or another source, of the component or system under specified conditions. 

==== Experience-based technique (ISTQB) ====  

See experience-based test design technique. 

==== Experience-based test design technique (ISTQB) ====

Procedure to derive and/or select test cases based on the tester’s experience, knowledge and intuition. 

==== Experience-based testing (ISO 29119) ====

A class of test design techniques where the experience of the tester is used to anticipate what defects might be present in the test item as a result of errors made, and to design tests specifically to expose them.

==== Exploratory testing (ISO 29119) ====

A testing approach where the tester actively controls the design of the tests as those tests are performed and uses information gained while testing to design new and better tests.

==== Exploratory testing (ISTQB) ==== 

An informal test design technique where the tester actively controls the design of the tests as those tests are performed and uses information gained while testing to design new and better tests. [After Bach] 

==== Extreme programming (ISTQB) ====  

A software engineering methodology used within agile software development whereby core practices are programming in pairs, doing extensive code review, ==== unit testing (ISTQB) ==== of all code, and simplicity and clarity in code. See also agile software development. 

===== F =====

==== Fail (ISTQB) ====  

A test is deemed to fail if its actual result does not match its expected result. 

==== Failure (ISTQB) ====  

Deviation of the component or system from its expected delivery, service or result. 
[After Fenton] 

==== Failure (ISO 29119) ====

A deviation of the component or system from its expected delivery, service or result.

==== Failure mode (ISTQB) ====  

The physical or functional manifestation of a failure. For example, a system in 
Failure mode may be characterized by slow operation, incorrect outputs, or complete termination of execution. [IEEE 610] 

==== Failure Mode and Effect Analysis (FMEA) (ISTQB) ====  

A systematic approach to risk identification and analysis of identifying possible modes of failure and attempting to prevent their occurrence. 

See also Failure Mode, Effect and Criticality Analysis (FMECA). 

==== Failure Mode, Effects, and Criticality Analysis (FMECA) (ISTQB) ====  

An extension of FMEA, as in addition to the basic FMEA, it includes a criticality analysis, which is used to chart the probability of failure modes against the severity of their consequences. The result highlights failure modes with relatively high probability and severity of consequences, allowing remedial effort to be directed where it will produce the greatest value. 

See also Failure Mode and Effect Analysis (FMEA). 

==== Failure rate (ISTQB) ====

The ratio of the number of failures of a given category to a given unit of measure, e.g. failures per unit of time, failures per number of transactions, failures per number of computer runs. [IEEE 610]

==== False-fail result (ISTQB) ====  

A test result in which a defect is reported although no such defect actually exists in the test object. 

=== False-pass result (ISTQB) ====  

A test result which fails to identify the presence of a defect that is actually present in the test object. 

==== False-positive result (ISTQB) ====  

See false-fail result. 

==== False-negative result (ISTQB) ====  

See false-pass result. 

Fault: See defect. 

==== Fault (ISO 29119) ====

See [[:general:glossary#defect|Defect]]

==== Fault attack (ISTQB) ====  

See attack.

==== Fault density (ISTQB) ====  

See defect density. 

==== Fault Detection Percentage (FDP) (ISTQB) ====  

See Defect Detection Percentage (DDP).

==== Fault masking (ISTQB) ====  

See defect masking.

==== Fault seeding (ISTQB) ====

The process of intentionally adding known defects to those already in the component or system for the purpose of monitoring the rate of detection and removal, and estimating the number of remaining defects. [IEEE 610] 

==== Fault seeding tool (ISTQB) ====  

A tool for seeding (i.e. intentionally inserting) faults in a component or `system. 

==== Fault tolerance (ISTQB) ====  

The capability of the software product to maintain a specified level of performance in cases of software faults (defects) or of infringement of its specified interface. [ISO 9126] 

See also reliability, robustness.

==== Fault Tree Analysis (FTA) (ISTQB) ====

A technique used to analyze the causes of faults (defects). The technique visually models how logical relationships between failures, human errors, and external events can combine to cause specific faults to disclose.

==== Feasible path (ISTQB) ====  

A path for which a set of input values and preconditions exists which causes it to be executed. 

==== Feature (ISTQB) ====

An attribute of a component or system specified or implied by requirements documentation (for example reliability, usability or design constraints). [After IEEE 1008] 

==== Feature set (ISO 29119) ====

A collection of related features to be tested. A feature set may be treated independently of other feature sets in the subsequent test design activities and tasks. The feature sets for a test constitute the test architecture; the test architecture may be similar to the architecture of the test item(s), or it may be different if this facilitates a more efficient test. 

==== Field-testing (ISTQB) ==== 

See beta testing 

==== Financial Management of IT Services (ITIL) ====

It is aimed at helping an IT service provider in effectively managing its budgeting, accounting and charging requirements. The ITIL Financial Management has the following sub-processes: ‘Financial Management Support’; ‘Financial Planning’; ‘Financial Analysis and Reporting’; and ‘Service Invoicing’. 

==== Finite state machine (ISTQB) ==== 

A computational model consisting of a finite number of states and transitions between those states, possibly with accompanying actions. [IEEE 610] 

==== Finite state testing (ISTQB) ==== 

See state transition testing

==== Finite state testing (ISO 29119) ====

See [[:general:glossary#state transition testing|State Transition Testing]]

==== Fishbone diagram (ISTQB) ====

See cause-effect diagram.

==== Formal review (ISTQB) ====

A review characterized by documented procedures and requirements, e.g. inspection. 

==== Frozen test basis (ISTQB) ====  

A test basis document that can only be amended by a formal change control process. 

See also baseline.

==== Function Point Analysis (FPA) (ISTQB) ====  

Method aiming to measure the size of the functionality of an information system. The measurement is independent of the technology. This measurement may be used as a basis for the measurement of productivity, the estimation of the needed resources, and project control. 

==== Functional integration (ISTQB) ====  

An integration approach that combines the components or systems for the purpose of getting a basic functionality working early. ==== See also integration testing (ISTQB) ==== 

==== Functional requirement (ISTQB) ====  

A requirement that specifies a function that a component or system must perform. [IEEE 610]  

==== Functional requirement (ISO 29119) ====

A requirement that specifies a function that a system or system component must be able to perform. Typically needs to be supplemented by corresponding non-functional requirements, such as performance, usability, security and availability.

==== Functional test design technique (ISTQB) ====  

Procedure to derive and/or select test cases based on an analysis of the specification of the functionality of a component or system without reference to its internal structure. See also black box test design technique. 

====Functional testing (ISTQB) ==== 

Testing based on an analysis of the specification of the functionality of a component or system. 

See also black box testing 

==== Functional testing (ISO 29119) ====

1. Testing to determine the degree to which the product provides functions that meet stated and implied needs when the product is used under specified conditions. [based on 25010] 
2. Testing that ignores the internal mechanism of a system or component and focuses solely on the outputs generated in response to selected inputs and execution conditions.
3. Testing conducted to evaluate the compliance of a system or component with specified functional requirements. [ISO/IEC 24765]

===== G =====

==== Glass box testing (ISTQB) ==== 

See white box testing 

==== Glass box testing (ISO 29119) ====

See [[:general:glossary#structure-based testing|Structure-based Testing]]

==== Global ALM Community ====

The collection of communities across the globe that work on Software Process Improvements using the Global SPII.

==== Goal Question Metric (ISTQB) ====  

An approach to software measurement using a three-level model: 

Conceptual level (goal), operational level (question) and quantitative level (metric). 
GQM

See Goal Question Metric. 

===== H =====

==== Hazard analysis (ISTQB) ==== ===== A ===== technique used to characterize the elements of risk. The result of a hazard analysis will drive the methods used for ==== development and testing (ISTQB) ==== of a system. See also risk analysis. 

==== Heuristic evaluation (ISTQB) ====  

A static usability test technique to determine the compliance of a user interface with recognized usability principles (the so-called “heuristics”). 


==== High-level test case (ISTQB) ====  

A test case without concrete (implementation level) values for input data and expected results. Logical operators are used; instances of the actual values are not yet defined and/or available. See also low-level test case. 

==== High-level test case (ISO 29119) ====

A test case without concrete (implementation level) values for input data and expected results. Logical operators are used; instances of the actual values are not yet defined and/or available. 

==== Horizontal traceability (ISTQB) ====  

The tracing of requirements for a test level through the layers of test documentation (e.g. test plan, test design specification, test case specification and test procedure specification or test script). 

==== Horizontal traceability (ISO 29119) ====

The tracing of requirements for a test level through the layers of test documentation (e.g. test plan, test design specification, test case specification and test procedure specification or test script).

==== Hyperlink (ISTQB) ====

A pointer within a web page that leads to other web pages. 

==== Hyperlink test tool (ISTQB) ==== 

A tool used to check that no broken hyperlinks are present on a web site. 

===== I =====

==== IDEAL (ISTQB) ====

An organizational improvement model that serves as a roadmap for initiating, planning, and implementing improvement actions. The IDEAL model is named for the five phases it describes: initiating, diagnosing, establishing, acting, and learning 

==== Impact analysis (ISTQB) ====  

The assessment of change to the layers of development documentation, test documentation and components, in order to implement a given change to specified requirements. 

==== Improvement Proposal ====

« TODO » 

==== Incident (ISO 29119) ====

An event occurring during the use of a software work product or software system that requires investigation.
NOTE: Incidents may be found during, but not limited to analysis, reviewing, testing, compilation, or use of software products or applicable documentation.

==== Incident (ISTQB) ====  

Any event occurring that requires investigation. [After IEEE 1008] 

==== Incident logging (ISTQB) ====

Recording the details of any incident that occurred, e.g. during testing 

==== Incident management (ISTQB) ====  

The process of recognizing, investigating, taking action and disposing of incidents. It involves logging incidents, classifying them and identifying the impact. [After IEEE 1044]  


==== Incident management tool (ISTQB) ====  

A tool that facilitates the recording and status tracking of Incidents. They often have workflow-oriented facilities to track and control the allocation, ==== correction and re-testing (ISTQB) ==== of incidents and provide reporting facilities. 

See also defect management tool. 

==== Incident report (ISTQB) ====  

A document reporting on any event that occurred, e.g. during the testing which requires investigation. [After IEEE 829]

==== Incident report (ISO 29119) ====

A report that documents any event that occurs during the testing process that requires investigation. This report may be called a problem, test incident, defect, trouble, issue, anomaly, bug or error report. The contents of an incident report may be defined elsewhere in an organization, for example as part of the definition of the Configuration Management Processes, in which case that definition should be used.

NOTE: The information given here is only the information needed when an incident report is first raised. More information may be added to the incident report as it is passing through the related change control process.

==== Incremental development model (ISTQB) ====  

A development lifecycle where a project is broken into a series of increments, each of which delivers a portion of the functionality in the overall project requirements. The requirements are prioritized and delivered in priority order in the appropriate increment. In some (but not all) versions of this lifecycle model, each subproject follows a ‘mini V-model’ with its own design, coding and testing phases. 

==== Incremental testing (ISTQB) ==== Testing where components or systems are integrated and tested one or some at a time, until all the components or systems are integrated and tested. 

==== Independence of testing (ISTQB) ====  Separation of responsibilities, which encourages the accomplishment of ==== objective testing (ISTQB) ==== [After DO-178b]

==== Indicator (ISTQB) ====  

A measure that can be used to estimate or predict another measure. [ISO 14598]

==== Infeasible path (ISTQB) ====  

A path that cannot be exercised by any set of possible input values. 

==== Informal review (ISTQB) ====   

A review not based on a formal (documented) procedure. 

==== Initiating (IDEAL) (ISTQB) ====

The phase within the IDEAL model where the groundwork is laid for a successful improvement effort. The initiating phase consists of the activities: set context, build sponsorship and charter infrastructure. 

See also IDEAL. 

==== Input (ISTQB) ====   

A variable (whether stored within a component or outside) that is read by a component. 

==== Input domain (ISTQB) ====

The set from which valid input values can be selected. See also domain.

Input value: An instance of an input. 

See also input.

==== Inspection (ISTQB) ====  

A type of peer review that relies on visual examination of documents to detect defects, e.g. violations of development standards and non-conformance to higher level documentation. The most formal review technique and therefore always based on a documented procedure. [After IEEE 610, IEEE 1028] 

See also peer review.

==== Inspection leader (ISTQB) ====  

See moderator. 

==== Inspector: (ISTQB) ====

See reviewer.

==== Install ability (ISTQB) ====   

The capability of the software product to be installed in a specified environment [ISO 9126]. 

See also portability.

==== Install ability testing (ISTQB) ==== 

The process of testing the install ability of a software product. 

==== See also portability testing (ISTQB) ====. 

==== Installation guide (ISTQB) ====  

Supplied instructions on any suitable media, which guides the installer through the installation process. This may be a manual guide, step-by-step procedure, Installation wizard, or any other similar process description. 

==== Installation wizard (ISTQB) ====  

Supplied software on any suitable media, which leads the installer through the installation process. It normally runs the installation process, provides feedback on installation results, and prompts for options.  

==== Institute of Electrical and Electronics Engineers (IEEE) (ISTQB) ====

It is a non-profit association that is dedicated to advancing technological innovation and excellence. IEEE is one of the leading standards making organizations and its standards relate to a broad range of industries such as, power and energy, Information Technology, biomedical and healthcare, transportation, nanotechnology, telecommunications and information assurance. 

==== Instrumentation (ISTQB) ====  

The insertion of additional code into the program in order to collect information about program behavior during execution, e.g. for measuring code coverage. 

==== Instrumented (ISTQB) ====  

A software tool used to carry out instrumentation. 

==== Inspection (ISO 29119) ====

1. A type of peer review that relies on visual examination of documents to detect defects, e.g. violations of development standards and non-conformance to higher-level documentation. The most formal review technique and therefore always based on a documented procedure. 

[After IEEE 610, IEEE 1028] 

See also [[:general:glossary#peer review|Peer Review]]

2. Group review quality improvement process for written material, consisting of two aspects: product 
(Document itself) improvement and process improvement (of both document production and inspection) 

[BS 7925]

3. A visual examination of a software product to detect and identify software anomalies, including errors and deviations from standards and specifications [IEEE 1028-2008 IEEE Standard for Software Reviews] 

4. A static analysis technique that relies on visual examination of development products to detect errors, violations of development standards, and other problems. [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

Note: Inspections are peer examinations led by impartial facilitators who are trained in inspection techniques. Determination of remedial or investigative action for an anomaly is a mandatory element of a software inspection, although the solution should not be determined in the inspection meeting. Types include code inspection; design inspection.

==== Install ability testing (ISO 29119) ====

Tests aimed at the installation process (as described in the installation manual or guidelines), the people who will carry out the installation, the target platform(s) and the test item(s) to be installed.

==== Intake test (ISTQB) ====  

A special instance of a smoke test to decide if the component or system is ready for detailed and ==== further testing (ISTQB) ==== An intake test is typically carried out at the start of the test 
execution phase. 

See also smoke test.

==== Integration (ISTQB) ====  

The process of combining components or systems into larger assemblies. 

==== Integration testing (ISTQB) ====  

Testing performed to expose defects in the interfaces and in the interactions between integrated components or systems. 

See also component integration testing, system integration testing.

==== Integration testing (ISO 29119) ====

Testing performed to expose defects in the interfaces and in the interactions between integrated components or systems.

==== Interface testing (ISO 29119) ====

(1) An integration test type that is concerned with testing the interfaces between components or systems.
(2) Integration testing where the interfaces between system components are tested. 
[BS 7925] 
(3) Testing conducted to evaluate whether systems or components pass data and control correctly to one another [ISO/IEC 24765, Systems and Software Engineering Vocabulary]. 

See also [[:general:glossary#component testing, integration testing, system testing, unit test|Component Testing, Integration Testing, System Testing, Unit Test]]

==== Interface testing (ISTQB) ==== 

An integration test type that is concerned with testing the interfaces between components or systems. 

==== International Organization for Standardization (ISO) 9000 standards ====

The ISO 9000 family of standards pertain to quality management systems and they are designed in order to help the organizations ensure that they meet the needs of customers and other stakeholders. 

==== Interoperability (ISTQB) ====  

The capability of the software product to interact with one or more specified components or systems. [After ISO 9126] See also functionality.

==== Interoperability testing (ISO 29119) ====

Testing to determine the interoperability of a software product.

==== Interoperability testing (ISTQB) ====  

The process of testing to determine the interoperability of a software product. See also functionality testing. 

==== Interoperability testing (ISTQB) ====  

The process of testing to determine the interoperability of a software product. See also functionality testing. 

==== Invalid testing (ISTQB) ==== 

Testing using input values that should be rejected by the component or system. See also error tolerance, ==== negative testing (ISTQB) ==== 

==== IP ====

See Improvement Proposal 

==== Ishikawa diagram (ISTQB) ====  

See cause-effect diagram. 

==== ISO  ====

See International Organization for Standardization 

==== Isolation testing (ISTQB) ==== 

Testing of individual components in isolation from surrounding components, with surrounding components being simulated by stubs and drivers, if needed. 

==== Item transmittal report (ISTQB) ====  

See release note. 

==== Iterative development model (ISTQB) ====  

A development lifecycle where a project is broken into a usually large number of iterations. Iteration is a complete development loop resulting in a release (internal or external) of an executable product, a subset of the final product under development, which grows from iteration to iteration to become the final product. 

==== Iterative Software Development Process (as in RUP) ====

It is a software development process that prescribes the development of initially small but ever-larger portions of a software project for helping those who are involved in the discovery of important issues early before the problems or faulty assumptions can lead to disaster. It commences with an initial planning stage and it ends with the deployment of the cyclic interactions in between the stages. 

==== IT Service Management (ITSM) ====

It is a discipline for managing the Information Technology systems that are based on the customer's perspective of the contribution of IT to business. ITSM is process-focused and it thus it is aligned with the process improvement frameworks (such as, TQM, Six Sigma, business process management, CMMI). 

==== ITSM ====

See IT Service Management 

===== K =====

==== Key performance indicator (ISTQB) ====

See performance indicator. 

==== Keyword driven testing (ISTQB) ====

A scripting technique that uses data files to contain not only test data and expected results, but also keywords related to the application being tested. The keywords are interpreted by special supporting scripts that are called by the control script for the test. See also data driven testing. 

===== L =====

==== LCSAJ (ISTQB) ==== 

A Linear Code Sequence and Jump, consists of the following three items (conventionally identified by line numbers in a source code listing): the start of the linear sequence of executable statements, the end of the linear sequence, and the target line to which control flow is transferred at the end of the linear sequence. 

==== LCSAJ coverage (ISTQB) ==== 

The percentage of LCSAJs of a component that have been exercised by a test suite. 100% LCSAJ coverage implies 100% decision coverage. 

==== LCSAJ testing (ISTQB) ==== 

A white box test design technique in which test cases are designed to execute LCSAJs. 

==== Lead assessor (ISTQB) ==== 

The person who leads an assessment. In some cases, for instance CMMi and 
TMMi when formal assessments are conducted, the lead-assessor must be accredited and formally trained. 

==== Learn ability (ISTQB) ==== 

The capability of the software product to enable the user to learn its application. 
[ISO 9126] See also usability. 

==== Learning (IDEAL) (ISTQB) ==== 

The phase within the IDEAL model where one learns from experiences and improves one’s ability to adopt new processes and technologies in the future. The Learning phase consists of the activities: analyze and validate, and propose future actions. 

See also IDEAL.

==== Level test plan (ISTQB) ====

A test plan that typically addresses one test level. 

See also test plan. 

==== Level test plan (ISO 29119) ====

A test plan that specifically addresses one test level. 

See also [[:general:glossary#test plan|Test Plan]]

==== Lifecycle model (ISTQB) ==== 

A partitioning of the life of a product or project into phases. 

==== [CMMI] ==== 

See also software lifecycle.

==== Link testing (ISTQB) ==== 

See component integration testing. 

==== Load profile (ISTQB) ==== 

A specification of the activity which a component or system being tested may experience in production. A load profile consists of a designated number of virtual users who process a defined set of transactions in a specified time period and according to a predefined operational profile. 

See also operational profile.

==== Load testing (ISTQB) ==== 

A type of performance testing conducted to evaluate the behavior of a component or system with increasing load, e.g. numbers of parallel users and/or numbers of transactions, to determine what load can be handled by the component or system. 

See also performance testing, stress testing.

==== Load testing (ISO 29119) ====

A sub-category of performance testing where testing is aimed at assessing the performance of the system when it is placed under specifically increasing loads, usually from low usage conditions, through to typical and peak load conditions.

==== Logic-coverage testing (ISTQB) ====

See white box testing. [Myers] 
Logic-driven testing: 

See white box testing. 

==== Logical test case (ISTQB) ====

See high-level test case. 

==== Low level test case (ISTQB) ====

A test case with concrete (implementation level) values for input data and expected results. Logical operators from high-level test cases are replaced by actual values that correspond to the objectives of the logical operators. See also high-level test case.

===== M =====


==== Maintainability (ISTQB) ==== The ease with which a software product can be modified to correct defects, modified to meet new requirements, modified to make future maintenance easier, or adapted to a changed environment. [ISO 9126] 

==== Maintainability testing (ISTQB) ====

The process of testing to determine the maintainability of a software product. 
Maintenance: Modification of a software product after delivery to correct defects, to improve performance or other attributes, or to adapt the product to a modified environment. [IEEE 1219] 

==== Maintenance testing (ISTQB) ====

Testing the changes to an operational system or the impact of a changed environment to an operational system. 

==== Maintainability testing (ISO 29119) ====

Testing to determine the degree of effectiveness and efficiency with which the product can be modified.

==== Maintenance testing (ISO 29119) ====

Testing the changes to an operational system or the impact of a changed environment to an operational System

==== Management review (ISTQB) ====

A systematic evaluation of software acquisition, supply, development, operation, or maintenance process, performed by or on behalf of management that monitors progress, determines the status of plans and schedules, confirms requirements and their system allocation, or evaluates the effectiveness of management approaches to achieve fitness for purpose. [After IEEE 610, IEEE 1028] 

==== Manufacturing-based quality (ISTQB) ====

A view of quality, whereby quality is measured by the degree to which a product or service conforms to its intended design and requirements. Quality arises from the rocess(es)  used. [After Garvin] See also product-based quality, transcendent-based quality, user-based quality, value-based quality. 

==== Master test plan (ISTQB) ====

A test plan that typically addresses multiple test levels. 

See also test plan.

==== Maturity (ISTQB) ====

(1) The capability of an organization with respect to the effectiveness and efficiency of its processes and work practices. See also Capability Maturity Model, Test 
Maturity Model. 
(2) The capability of the software product to avoid failure as a result of defects in the software. [ISO 9126] 

See also reliability. 

==== Maturity level (ISTQB) ==== Degree of process improvement across a predefined set of process areas in which all goals in the set are attained. [TMMi] 

==== Maturity model (ISTQB) ====

A structured collection of elements that describe certain aspects of maturity in an organization, and aid in the definition and understanding of an organization's processes. A maturity model often provides a common language, shared vision and framework for prioritizing improvement actions. 

==== Mean Time between Failures (ISTQB) ====

The arithmetic mean (average) time between failures of a system. The MTBF is typically part of a reliability growth model that assumes the failed system is immediately repaired, as a part of a defect fixing process. 

See also reliability growth model. 

==== Mean Time To Repair (ISTQB) ====

The arithmetic mean (average) time a system will take to recover from any failure. This typically includes testing to insure that the defect has been resolved.

==== Measure (ISTQB) ==== The number or category assigned to an attribute of an entity by making a measurement. [ISO 14598] 

==== Measurement (ISTQB) ====

The process of assigning a number or category to an entity to describe an attribute of that entity. [ISO 14598] 

==== Measurement scale (ISTQB) ====

A scale that constrains the type of data analysis that can be performed on it. [ISO 14598] 

==== Memory leak (ISTQB) ==== A memory access failure due to a defect in a program's dynamic store allocation logic that causes it to fail to release memory after it has finished using it, eventually causing the program and/or other concurrent processes to fail due to lack of memory. 

==== Memory management testing (ISO 29119) ====

Testing aimed at determining the amount (normally maximum) of memory to be used (e.g. hard disk memory, RAM and ROM) and/or defined levels of memory leakage under specific operating conditions.

==== Management Steering Group (PII) (ISO 29119) ====

« TODO » 

==== Metric (ISO 29119) ====

A measurement scale and the method used for measurement. [ISO 14598].

Modified condition decision coverage percentage of all branch condition outcomes that independently affect a decision outcome that have been exercised by testing. [BS 7925-1]

Modified condition decision testing test case design technique in which test cases are designed to execute branch condition outcomes that independently affect a decision outcome. [BS 7925-1]

==== Metric (ISTQB) ==== 

A measurement scale and the method used for measurement. [ISO 14598]

==== Migration testing (ISTQB) ====

See conversion testing. 

==== Milestone (ISTQB) ====

A point in time in a project at which defined (intermediate) deliverables and results should be ready. 

==== Mind-map (ISTQB) ==== A diagram used to represent words, ideas, tasks, or other items linked to and arranged around a central key word or idea. Mind maps are used to generate, visualize, structure, classify ideas, and as an aid in study, organization, problem solving, decision making, and writing. 

==== Mistake (ISTQB) ====

See error. 

==== Modeling tool (ISTQB) ====

A tool that supports the creation, amendment and verification of models of the software or system [Graham]. 

Moderator: The leader and main person responsible for an inspection or other review process. 

==== Modified condition decision coverage (ISTQB) ====

See condition determination coverage.

==== Modified condition decision testing (ISTQB) ====

See condition determination testing. 

==== Modified multiple condition coverage (ISTQB) ====

See condition determination coverage. 

==== Modified multiple condition testing (ISTQB) ====

See condition determination testing.

==== Module (ISTQB) ====

See component. 

==== Module testing (ISTQB) ====

See component testing. 

==== Module testing (ISO 29119) ====

See [[:general:glossary#component testing|Component Testing]]

==== Monitor (ISTQB) ====

A software tool or hardware device that runs concurrently with the component or system under test and supervises, records and/or analyses the behavior of the component or system. [After IEEE 610] 

==== Monitoring tool (ISTQB) ====

See monitor. 

==== Monkey testing (ISTQB) ====

Testing by means of a random selection from a large range of inputs and by randomly pushing buttons, ignorant of how the product is being used. 

==== MoSCoW (BABOK) ====

According to wikipedia: http://en.wikipedia.org/wiki/MoSCoW_Method

MoSCoW is a technique used in business analysis and software development to reach a common understanding with stakeholders on the importance they place on the delivery of each requirement - also known as MoSCoW prioritisation or MoSCoW analysis.

    M - MUST: Describes a requirement that must be satisfied in the final solution for the solution to be considered a success.
    S - SHOULD: Represents a high-priority item that should be included in the solution if it is possible. This is often a critical requirement but one which can be satisfied in other ways if strictly necessary.
    C - COULD: Describes a requirement which is considered desirable but not necessary. This will be included if time and resources permit.
    W - WON'T: Represents a requirement that stakeholders have agreed will not be implemented in a given release, but may be considered for the future.


==== MSG ====

See Management Steering Group 

==== MTBF (ISTQB) ==== 

See Mean Time Between Failures. 

==== MTTR (ISTQB) ==== 

See Mean Time To Repair. 

==== Multiple conditions (ISTQB) ==== 

See compound condition. 

==== Multiple condition coverage (ISTQB) ==== 

The percentage of combinations of all single condition outcomes within one statement that have been exercised by a test suite. 100% multiple condition coverage implies 100% condition determination coverage. 

==== Multiple condition coverage (ISO 29119) ====

Percentage of combinations of all single condition outcomes within one statement that have been exercised by a test procedure.  

==== Multiple condition testing (ISTQB) ==== 

A white box test design technique in which test cases are designed to execute combinations of single condition outcomes (within one statement). 

==== Multiple condition testing (ISO 29119) ====

A test design technique in which test cases are designed to execute combinations of condition outcomes within a decision.

==== Mutation analysis (ISTQB) ==== 

A method to determine test suite thoroughness by measuring the extent to which a test suite can discriminate the program from slight variants (mutants) of the program. 

==== Mutation testing (ISTQB) ==== 

See back-to-back testing. 

===== N =====

==== N-switch coverage (ISTQB) ====

The percentage of sequences of N+1 transitions that have been exercised by a test suite. [Chow]

==== N-switch testing (ISTQB) ====

A form of state transition testing in which test cases are designed to execute all valid sequences of N+1 transitions. [Chow] 

See also state transition testing.

==== Negative testing (ISTQB) ====

Tests aimed at showing that a component or system does not work. Negative testing is related to the testers’ attitude rather than a specific test approach or test design technique, e.g. testing with invalid input values or exceptions. [After Beizer].

==== Negative testing (ISO 29119) ====

Attitude rather than a specific test approach or test design technique, e.g. testing with invalid input values or exceptions. [After Beizer].

==== Non-conformity (ISTQB) ====

Non-fulfillment of a specified requirement. [ISO 9000] 

==== Non-functional requirement (ISTQB) ==== A requirement that does not relate to functionality, but to attributes such as reliability, efficiency, usability, maintainability and portability. 

==== Non-functional test design technique (ISTQB) ==== Procedure to derive and/or select test cases for non-functional testing based on an analysis of the specification of a component or system without reference to its internal structure. See also black box test design technique. 

==== Non-functional testing (ISTQB) ====

Testing the attributes of a component or system that do not relate to functionality, e.g. reliability, efficiency, usability, maintainability and portability. 

==== Non-functional testing (ISO 29119) ====

Testing the attributes of a component or system that do not relate to functionality.
NOTE e.g. reliability, efficiency, usability, maintainability and portability.

===== O =====

==== Off-the-shelf software (ISTQB) ====

A software product that is developed for the general market, i.e. for a large number of customers, and that is delivered to many customers in identical format. 

==== Operability (ISTQB) ====

The capability of the software product to enable the user to operate and control it. 
[ISO 9126] See also usability. 

==== Operability (ISO 29119) ====

The capability of the software product to enable the user to operate and control it. [ISO 9126] 

See also [[:general:glossary#usability|Usability]]

==== Operational acceptance testing (ISO 29119) ====

Operational testing in the acceptance test phase typically performed in a simulated real-life operational environment by operator and/or administrator focusing on operational aspects, e.g. recoverability, resource-behavior, install ability and technical compliance.

==== Operational acceptance testing (ISTQB) ==== 

Operational testing in the acceptance test phase, typically performed in a (simulated) operational environment by operations and/or systems administration staff focusing on operational aspects, e.g. recoverability, resource-behavior, install ability and technical compliance. See also operational testing. 

==== Operational environment (ISTQB) ====

Hardware and software products installed at users or customers’ sites where the component or system under test will be used. The software may include Operating systems, database management systems, and other applications. 

==== Operational profile (ISTQB) ==== 

The representation of a distinct set of tasks performed by the component or system, possibly based on user behavior when interacting with the component or system, and their probabilities of occurrence. A task is logical rather that physical and can 
be executed over several machines or be executed in non-contiguous time segments. 

==== Operational profile testing (ISTQB) ==== 

Statistical testing using a model of system operations (short duration tasks) and their probability of typical use. [Musa]

==== Organizational test specification (ISO 29119) ====

A document that provides information about testing for an organization, i.e. information that is not project dependent. The most common examples of organizational test specifications are Test Policy and Organizational Test Strategy. 

==== Operational testing (ISTQB) ==== 

Testing conducted to evaluate a component or system in its operational environment. [IEEE 610] 

==== Oracle (ISTQB) ====

See test oracle. 

==== Organizational Test Strategy (ISO 29119) ====

A document that is aligned with the test policy. The strategy is defined at an organizational level and applies to all testing within its scope.

==== Orthogonal array (ISO 29119) ====

A matrix with specific properties that can be used to identify a near optimal pair-wise set of test cases in combinatorial testing.

==== Orthogonal array (ISTQB) ====

A 2-dimensional array constructed with special mathematical properties, such that choosing any two columns in the array provides every pair combination of each number in the array. 

==== Orthogonal array testing (ISTQB) ====

A systematic way of testing all-pair combinations of variables using orthogonal arrays. It significantly reduces the number of all combinations of variables to test all pair combinations. 

See also pair wise testing. 

==== Outcome (ISTQB) ====

See result. 

==== Output (ISTQB) ====

A variable (whether stored within a component or outside) that is written by a component. 

==== Output domain (ISTQB) ====

The set from which valid output values can be selected. 

See also domain.

==== Output value (ISTQB) ====

An instance of an output. 

See also output.  

===== P =====

==== P-V Pair (ISO 29119) ====

The test conditions for all combinatorial testing techniques; the P-V pair corresponds to a chosen test item parameter taking on a specific value.

==== Pair programming (ISTQB) ====

A software development approach whereby lines of code (production and/or test) of a component are written by two programmers sitting at a single computer. This implicitly means ongoing real-time code reviews are performed.

==== Pair testing (ISTQB) ====

Two persons, e.g. two testers, a developer and a tester, or an end-user and a tester, working together to find defects. Typically, they share one computer and trade control of it while testing. 

==== Pair wise testing (ISTQB) ====

A black box test design technique in which test cases are designed to execute all possible discrete combinations of each pair of input parameters. See also orthogonal array testing. 

==== Pair-wise testing (ISO 29119) ====

A form of combinatorial testing in which the test coverage items are pairs of P-V pairs, where each P-V pair is for a different test item parameter.

==== Pareto analysis (ISTQB) ====

A statistical technique in decision making that is used for selection of a limited number of factors that produce significant overall effects. In terms of quality improvement, a large majority of problems (80%) are produced by a few key causes (20%).

==== Partition testing (ISTQB) ====

See equivalence partitioning. [Beizer]

==== Partition testing (ISO 29119) ====

Inputs within a partition are expected to exercise the same test coverage item (e.g. equivalence partitions, boundary values, decision outcomes, state transitions). Most test design techniques, both specification-based and structure-based, fall into the category of partition testing techniques. 

==== Pass (ISTQB) ====

A test is deemed to pass if its actual result matches its expected result. 

==== Pass/fail criteria (ISTQB) ====

Decision rules used to determine whether a test item (function) or feature has passed or failed a test. [IEEE 829] 

==== Pass/fail criteria (ISO 29119) ====

Decision rules used to determine whether a test item (function) or feature has passed or failed a test. [IEEE 829].

==== Path (ISTQB) ====

A sequence of events, e.g. executable statements, of a component or system from an entry point to an exit point. 

==== Path coverage (ISTQB) ====

The percentage of paths that have been exercised by a test suite. 100% path coverage implies 100% LCSAJ coverage. 

==== Path coverage (ISO 29119) ====

Percentage of paths in a component executed by testing. [BS 7925-1]

==== Path sensitizing (ISTQB) ====

Choosing a set of input values to force the execution of a given path. 

==== Path testing (ISTQB) ====

A white box test design technique in which test cases are designed to execute paths. 

==== Path testing (ISO 29119) ====

A structure-based test design technique in which test cases are designed to execute all or selected paths of a component.

==== Peer review (ISTQB) ==== 

A review of a software work product by colleagues of the producer of the product for the purpose of identifying defects and improvements. Examples are inspection, technical review and walkthrough. 

==== Performance (ISTQB) ====

The degree to which a system or component accomplishes its designated functions within given constraints regarding processing time and throughput rate. [After IEEE 610] See also efficiency. 

==== Performance indicator (ISTQB) ====

A high level metric of effectiveness and/or efficiency used to guide and control progressive development, e.g. lead-time slip for software development. [CMMI] 

==== Performance profiling (ISTQB) ====

Definition of user profiles in performance, load and/or stress testing. Profiles should reflect anticipated or actual usage based on an operational profile of a component or system, and hence the expected workload. See also load profile, operational profile. 

==== Performance testing (ISTQB) ====

The process of testing to determine the performance of a software product. See also efficiency testing.

==== Performance testing (ISO 29119) ====

This may include assessing the performance of the test item in terms of transactions per second, throughput per second, response times, round trip time and resource utilization levels.

==== Performance testing tool (ISTQB) ====

A tool to support performance testing that usually has two main facilities; load generation and test transaction measurement. Load generation can simulate either multiple users or high volumes of input data. During execution, response time measurements are taken from selected transactions and these are logged. Performance testing tools normally provide reports based on test logs and graphs of load against response times. 

==== Phase test plan (ISTQB) ====

A test plan that typically addresses one test phase. 

See also test plan.

==== PII ====

« TODO » 

==== PIT ====

See Process Improvement Team 

==== Pointer (ISTQB) ====

A data item that specifies the location of another data item; for example, a data item that specifies the address of the next employee record to be processed. [IEEE 610] 

==== Portability (ISTQB) ====

The ease with which the software product can be transferred from one hardware or software environment to another. [ISO 9126]

==== Portability testing (ISTQB) ====

The process of testing to determine the portability of a software product.

==== Portability testing (ISO 29119) ====

Testing to determine the degree to which a system or component can be effectively and efficiently transferred from one hardware, software or other operational or usage environment to another.

==== Post-execution comparison (ISTQB) ====

Comparison of actual and expected results, performed after the software has finished running. 

==== Post-project meeting (ISTQB) ====

See retrospective meeting. 

==== Precondition (ISTQB) ====

Environmental and state conditions that must be fulfilled before the component or system can be executed with a particular test or test procedure. 

==== Precondition (ISO 29119) ====

Environmental and state conditions that must be fulfilled before the component or system can be executed with a particular test or test procedure.

==== Probe effect (ISTQB) ====

The effect on the component or system by the measurement instrument when the component or system is being measured, e.g. by a performance testing tool or monitor. 
For example performance may be slightly worse when performance testing tools are being used.

==== Problem (ISTQB) ==== See defect.

==== Problem management (ISTQB) ====

See defect management. 

==== Problem report (ISTQB) ====

See defect report. 

==== Procedure testing (ISTQB) ====

Testing aimed at ensuring that the component or system can operate in conjunction with new or existing users’ business procedures or operational procedures. 

==== Procedure testing (ISO 29119) ====

Testing of procedural documentation written in the form of procedural instructions. These procedural instructions will normally come in the form of one of the following documents:
 User guide;
 Instruction manual;
 User reference manual.

==== Process (ISTQB) ====

A set of interrelated activities, which transform inputs into outputs. [ISO 12207] 
==== Process assessment (ISTQB) ==== A disciplined evaluation of an organization’s software processes against a reference model. [after ISO 15504]

==== Process cycle test (ISTQB) ====

A black box test design technique in which test cases are designed to execute business procedures and processes. [TMap] 

See also procedure testing. 

==== Process improvement (ISTQB) ====

A program of activities designed to improve the performance and maturity of the organization’s processes, and the result of such a program. [CMMI] 

==== Process Improvement Team (PII) ====

« TODO » 

Within this group following roles exist: 

PIT Member
PIT Lead

==== Process model (ISTQB) ====

A framework wherein processes of the same nature are classified into a overall model, e.g. a test improvement model. 

==== Product-based quality (ISTQB) ====

A view of quality, wherein quality is based on a well-defined set of quality attributes. These attributes must be measured in an objective and quantitative way. Differences in the quality of products of the same type can be traced back to the way the specific quality attributes have been implemented. [After Garvin] 

See also manufacturing-based quality, quality attribute, transcendent-based quality, user-based quality, value-based quality.

==== Product risk (ISTQB) ====

A risk directly related to the test object. 

See also risk. 

==== Production acceptance testing (ISTQB) ====

See operational acceptance testing. 

==== Production acceptance testing (ISO 29119) ====

See [[:general:glossary#operational acceptance testing|Operational Acceptance Testing]]

==== Program instrumenter (ISTQB) ====

See instrumenter.

==== Program testing (ISTQB) ====

See component testing. 

==== Project (ISTQB) ====

A project is a unique set of coordinated and controlled activities with start and finish dates undertaken to achieve an objective conforming to specific requirements, including the constraints of time, cost and resources. [ISO 9000] 

==== Project Brief (PRINCE2) ====

It is a description and an outline for what the project is attempting to achieve and the business justifications behind a project implementation 

==== Project Initiation Documentation (PRINCE2) ====

It bundles the information that was acquired throughout the Starting up a Project and Initiating a Project processes in a PRINCE2 controlled project environment. The Project Initiation Document, or PID, is a PRINCE2 term that means the plan of the overall approach in project management. 

==== Project retrospective (ISTQB) ====

A structured way to capture lessons learned and to create specific action plans for improving on the nextproject or nextproject phase. 

==== Project risk (ISTQB) ====

A risk related to management and control of the (test) project, e.g. lack of staffing, strict deadlines, changing requirements, etc. 

See also risk. 

==== Project test plan (ISTQB) ====
See master test plan.

==== Pseudo-random (ISTQB) ====

A series which appears to be random but is in fact generated according to some prearranged sequence. 

===== Q =====

==== Qualification (ISTQB) ====

The process of demonstrating the ability to fulfill specified requirements. Note the term ‘qualified’ is used to designate the corresponding status. [ISO 9000] 

==== Quality (ISTQB) ====

The degree to which a component, system or process meets specified requirements and/or user/customer needs and expectations. [After IEEE 610] 

==== Quality assurance (ISTQB) ====

Part of quality management focused on providing confidence that quality requirements will be fulfilled. [ISO 9000] 

==== Quality assurance (ISO 29119) ====

Part of quality management focused on providing confidence that quality requirements will be fulfilled. [ISO 9000].

==== Quality attribute (ISTQB) ====

A feature or characteristic that affects an item’s quality. [IEEE 610] 

==== Quality characteristic (ISTQB) ====

See quality attribute. 

==== Quality control (ISO 29119) ====
A set of activities designed to evaluate the quality of developed or manufactured products. [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

==== Quality gate (ISTQB) ====

A special milestone in a project. Quality gates are located between those phases of a project strongly depending on the outcome of a previous phase. A quality gate includes a formal check of the documents of the previous phase. 

==== Quality management (ISTQB) ====

Coordinated activities to direct and control an organization with regard to quality. Direction and control with regard to quality generally includes the establishment of the quality policy and quality objectives, quality planning, quality control, quality assurance and quality improvement. [ISO 9000] 

==== Quality management (ISO 29119) ====

Coordinated activities to direct and control an organization with regard to quality [ISO/IEC TR 19759:2005 Software Engineering ² Guide to the Software Engineering Body of Knowledge (SWEBOK)].

===== R =====

==== Random testing (ISTQB) ==== 

A black box test design technique where test cases are selected, possibly using a pseudo-random generation algorithm, to match an operational profile. This technique can be used for testing non-functional attributes such as reliability and performance. 

==== Random testing (ISO 29119) ====

A specification-based test design technique where test cases are randomly selected from the input domain of the test item. Where available, the expected operational distribution of inputs may be used to generate the random inputs.

==== Rational Method Composer (RUP) ====

A flexible process management platform having a set of comprehensive tooling and rich process libraries to help the companies implement effective processes for successful software and IT projects. It features more than 100 selectable and customizable process guidance, (including RUP), for solving the common problems in business, management or software development. 

==== Rational Process Library (RUP) ====

It is a diverse collection of method content, guidance, templates, and processes having more than 100 selectable and customizable process best practices that can be applied to a large number of processes and domains. It offers a robust collection of best practices guidance for software and system development, management, and governance and it is included in IBM Rational Method Composer. 
==== Rational Unified Process (ISTQB) ==== 

A proprietary adaptable iterative software development process framework consisting of four project lifecycle phases: inception, elaboration, construction and transition. 

==== Recorder (ISTQB) ====

See scribe. 

==== Record/playback tool (ISTQB) ====

See capture/playback tool. 

==== Recoverability (ISTQB) ====

The capability of the software product to re-establish a specified level of performance and recover the data directly affected in case of failure. [ISO 9126] 

See also reliability.

==== Recoverability testing (ISTQB) ====

The process of testing to determine the recoverability of a software product. See also reliability testing.

==== Recoverability testing (ISO 29119) ====

The process of testing to determine the recoverability of a software product. 

See also [[:general:glossary#reliability testing|Reliability Testing]]

==== Recovery testing (ISTQB) ====

See recoverability testing. 

==== Recovery testing (ISO 29119) ====

Testing that is concerned with the ability to recover a test item, its data, configuration and/or environment from a backup. It is also used to determine whether the backup and recovery procedures for the system are accurate. This type of testing may be carried out as part of a disaster recovery test.

==== Regression testing (ISTQB) ====

Testing of a previously tested program following modification to ensure that defects have not been introduced or uncovered in unchanged areas of the software, as a result of the changes made. It is performed when the software or its environment is changed. 

==== Regression testing (ISO 29119) ====

Selective retesting of a system or component to verify that modifications have not caused unintended effects and that the system or component still complies with its specified requirements. 

==== Regulation testing (ISTQB) ====

See compliance testing. 

==== Release note (ISTQB) ====

A document identifying test items, their configuration, current status and other delivery information delivered by development to testing, and possibly other stakeholders, at the start of a test execution phase. [After IEEE 829]

==== Reliability (ISTQB) ==== 

The ability of the software product to perform its required functions under stated conditions for a specified period of time, or for a specified number of operations. [ISO 9126] 

==== Reliability growth model (ISTQB) ====

A model that shows the growth in reliability over time during continuous testing of a component or system as a result of the removal of defects that result in reliability failures. 

==== Reliability testing (ISTQB) ====

The process of testing to determine the reliability of a software product.


==== Reliability testing (ISO 29119) ====

Testing to determine the degree to which a system or component performs specified functions under specified conditions for a specified period of time.

==== Replaceability (ISTQB) ==== The capability of the software product to be used in place of another specified software product for the same purpose in the same environment. [ISO 9126] 

See also portability requirement
==== Resource utilization testing (ISO 29119) ====

The process of testing to determine the resource-utilization of a software product.

==== Resource utilization testing (ISTQB) ==== 

The process of testing to determine the resource-utilization of a software product. See also efficiency testing.

==== Result (ISTQB) ====

The consequence/outcome of the execution of a test. It includes outputs to screens, changes to data, reports, and communication messages sent out. 

See also actual result, expected result. 

==== Resumption criteria (ISTQB) ====

The testing activities that must be repeated when testing is re-started after a suspension. [After IEEE 829] 

==== Resumption criteria (ISO 29119) ====

The testing activities that must be repeated when testing is re-started after a suspension. [After IEEE 829]

==== Re-testing (ISTQB) ====

Testing that runs test cases that failed the last time they were run, in order to verify the success of corrective actions. 

==== Retesting (ISO 29119) ====

Testing that runs test cases that failed previously in order to verify the success of corrective actions.

==== Retrospective meeting (ISTQB) ====

A meeting at the end of a project during which the project team members evaluate the project and learn lessons that can be applied to the next project. 

==== Requirements-based testing (ISTQB) ==== 

An approach to testing in which test cases are designed based on test objectives and test conditions derived from requirements, e.g. tests that exercise specific functions or probe non-functional attributes such as reliability or usability. 

==== Requirements management tool (ISTQB) ====

A tool that supports the recording of requirements, Requirements attributes (e.g. priority, knowledge responsible) and annotation, and facilitates traceability through layers of requirements change management. Some requirements management tools also provide facilities for static analysis, such as consistency checking and violations to pre-defined requirements rules. 

==== Requirements phase (ISTQB) ====

The period of time in the software lifecycle during which the requirements for a software product are defined and documented. ==== [IEEE 610] resource utilization (ISTQB) ==== The capability of the software product to use appropriate amounts and types of resources, for example the amounts of main and secondary memory used by the program and the sizes of required temporary or overflow files, when the software performs its function under stated conditions. [After ISO 9126] 

See also efficiency. 

==== Review (ISO 29119) ====

An evaluation of a product or project status to ascertain discrepancies from planned results and to recommend improvements.  [IEEE 1028-2008]

==== Review (ISTQB) ====

An evaluation of a product or project status to ascertain discrepancies from planned results and to recommend improvements. Examples include management review, informal review, technical review, inspection, and walkthrough. [After IEEE 1028] 

==== Review checklist (ISO 29119) ====

A checklist that specifies the points to be checked for the test item during a review. 
NOTE e.g. The review checklist may be an organizational asset, and hence maintained centrally, or it may be local to a specific project, possibly getting inspiration from a general checklist. Checklists for specific types of test items, e.g. requirements specification or test specifications, may be needed. 

==== Review tool (ISTQB) ====

A tool that provides support to the review process. Typical features include review planning and tracking support, communication support, collaborative reviews and a repository for collecting and reporting of metrics. 

==== Reviewer (ISTQB) ====

The person involved in the review that identifies and describes anomalies in the product or project under review. Reviewers can be chosen to represent different viewpoints and roles in the review process. 

==== Risk (ISO 29119) ====

Effect of uncertainty on objectives

NOTE 1: An effect is a deviation from the expected outcome - positive and/or negative.
NOTE 2: Objectives can have different aspects, such as financial, health and safety, and environmental goals, and can apply at different levels, such as strategic, organization-wide, project, product and process.
NOTE 3: Risk is often characterized by reference to potential events, a consequence, or a combination of these and how they can affect the achievement of objectives.
NOTE 4: Risk is often expressed in terms of a combination of the consequences of an event or a change in circumstances, and the associated likelihood of occurrence.

==== Risk (ISTQB) ==== 

A factor that could result in future negative consequences; usually expressed as impact and likelihood. 

==== Risk analysis (ISTQB) ====

The process of assessing identified risks to estimate their impact and probability of occurrence (likelihood). 

==== Risk-based testing (ISO 29119) ====

An approach to testing whereby the selection and prioritization of testing is based on the corresponding type and level of perceived risk.

==== Risk-based testing (ISTQB) ====

An approach to testing to reduce the level of product risks and inform stakeholders of their status, starting in the initial stages of a project. It involves the identification of product risks and the use of risk levels to guide the test process. 

==== Risk category (ISTQB) ====

See risk type. 

==== Risk control (ISTQB) ==== The process through which decisions are reached and protective measures are implemented for reducing risks to, or maintaining risks within, specified levels. 
==== Risk identification (ISTQB) ==== The process of identifying risks using techniques such as brainstorming, checklists and failure history. 

==== Risk level (ISTQB) ====

The importance of a risk as defined by its characteristics impact and likelihood. 
The level of risk can be used to determine the intensity of testing to be performed. A risk level can be expressed either qualitatively (e.g. high, medium, low) or quantitatively. 

==== Risk management (ISTQB) ==== 

Systematic application of procedures and practices to the tasks of identifying, analyzing, prioritizing, and controlling risk. 

==== Risk mitigation (ISTQB) ====

See risk control. 

==== Risk type (ISTQB) ====

A set of risks grouped by one or more common factors such as a quality attribute, cause, location, or potential effect of risk;. A specific set of product risk types is related to the type of testing that can mitigate (control) that risk type. For example, the risk of user-interactions being misunderstood can be mitigated by usability testing. 

==== Robustness (ISTQB) ====

The degree to which a component or system can function correctly in the presence of invalid inputs or stressful environmental conditions. [IEEE 610] 

See also error-tolerance, fault-tolerance. 

==== Robustness testing (ISTQB) ==== 

Testing to determine the robustness of the software product. 

==== Root cause (ISTQB) ====

A source of a defect such that if it is removed, the occurrence of the defect type is decreased or removed. [CMMI] 

==== Root cause analysis (ISTQB) ====

An analysis technique aimed at identifying the root causes of defects. By directing corrective measures at root causes, it is hoped that the likelihood of defect Recurrence will be minimized. 

==== RUP (ISTQB) ====

See Rational Unified Process. 

===== S (ISO 29119) =====

==== Safety (ISTQB) ==== The capability of the software product to achieve acceptable levels ofrisk of harm to people, business, software, property or the environment in a specified context of use. [ISO 9126] 

==== Safety critical system (ISTQB) ====

A system whose failure or malfunction may result in death or serious injury to people, or loss or severe damage to equipment, or environmental harm. 

==== Safety testing (ISTQB) ====

Testing to determine the safety of a software product. 

==== Sanity test (ISTQB) ====

See smoke test. 

==== Satellite Communities / SPII / SEPG ====

These are the communities that have implemented parts of “Share” and are using it to improve their software delivery processes. They can both be collaborating with the Global ALM Community to contribute to the Global ALM Standards Library, or they can download a local clone of the Global ALM Standards Libraries and tailor it for their own use without contributing back to the global community. The communities can be within an organization or across in the form of after-hour sessions for instance. 

==== Scalability (ISTQB) ====

The capability of the software product to be upgraded to accommodate increased loads. [After Gerrard] 

==== Scalability testing (ISTQB) ====

Testing to determine the scalability of the software product. 

==== Scalability testing (ISO 29119) ====

Testing to determine the ease with which the test item can be modified to cope with changing (normally increasing) loads (e.g. increased number of users and/or volume of input data).

==== Scenario testing (ISTQB) ====

See use case testing.

==== Scenario testing (ISO 29119) ====

A specification-based test design technique that uses a model of the sequences of interactions between a user and a test item for the purpose of testing workflows within the test item.

==== Scorecard (ISTQB) ====

A representation of summarized performance measurements representing progress towards the implementation of long-term goals. A scorecard provides static measurements of performance over or at the end of a defined interval. See also balanced scorecard, dashboard. 

==== Scribe (ISTQB) ====

The person who records each defect mentioned and any suggestions for process improvement during a review meeting, on a logging form. The scribe should ensure that the logging form is readable and understandable. 

==== Scripted testing (ISTQB) ====

Test execution carried out by following a previously documented sequence of tests. 

==== Scripted testing (ISO 29119) ====

Test execution carried out by following a previously documented sequence of tests.

==== Scripting language (ISTQB) ====

A programming language in which executable test scripts are written, used by a test execution tool (e.g. a capture/playback tool). 

==== SCRUM (ISTQB) ==== 

An iterative incremental framework for managing projects commonly used with agile software development. See also agile software development.

==== Security (ISTQB) ==== 

Attributes of software products that bear on its ability to prevent unauthorized access, whether accidental or deliberate, to programs and data. [ISO 9126] 

See also functionality.

==== Security testing (ISTQB) ==== 

Testing to determine the security of the software product. See also functionality testing. 

==== Security testing (ISO 29119) ====

Testing to determine the degree to which information and data are protected so that unauthorized persons or systems cannot read or modify them and authorized persons or systems are not denied access to them.

==== SEPG ====

See Software Engineering Process Group 

==== Serviceability testing ====

See [[:general:glossary#maintainability testing|Maintainability Testing]]

==== Service Catalogue (ITIL) ====

It is a list of services provided by an organization to its employees or its customers. Each of the service within the catalogue normally includes: A description of the service; Timeframes or service level agreement for fulfilling the service; Who is entitled to request/view the service; Costs (if any); and How to fulfill the service. 

==== Service Oriented Architecture (SOA) ====

It is a set of principles and methodologies that are needed for the design and development of software in the form of interoperable services. These services are well-defined business functionalities built as software components (i.e. snippets of code or data structures) that can be reused for different purposes. 

==== Service Portfolio Management (ITIL) ====

It helps to ensure that the IT service providers have the right mix of services to reach the desired business objectives. The sub-processes of Service Portfolio Management in ITIL are: ‘Define and Analyze new or changed Services’; ‘Approve new or changed Services’; and ‘Service Portfolio Review’. 

==== Site acceptance testing (ISO 29119) ====
Acceptance testing by users/customers at their site, to determine whether or not a component or system satisfies the user/customer needs and fits within the business processes, normally including hardware as well as software.

==== Smoke testing (ISO 29119) ====

Test execution carried out to determine if the test item is ready for systematic testing to begin. Originally used to test the integrity of enclosed vessels (e.g. submarines) by placing a smoke bomb inside them to detect any leaks.

==== Soak testing (ISO 29119) ====

See [[:general:glossary#endurance testing|Endurance Testing]]

==== Sociability testing (ISO 29119) ====

Testing that is concerned with the ability to operate the test item in an environment in which other programs are installed and running.

==== Software development lifecycle (ISO 29119) ====

A model of the phases (e.g. requirements engineering, design, implementation, testing and operation) that a project passes through and their relationships. Typical IT life cycles include waterfall, V, evolutionary and prototyping.

==== Software Engineering Process Group ====

« TODO » 

==== Software intensive system (ISO 29119) ====

System or product where the majority of the functionality is implemented in software.

==== Software Lifecycle (or Software Development Lifecycle) ====

It is a general model for the software development process, encompassing all the activities and work products required to develop a software system. Such a model may be both activity-centred (focusing on the activities of software development) and entity-centred (focusing on the work products created by these activities). 

==== Software test environment (ISO 29119) ====

The facilities, hardware, software, firmware, procedures, and documentation needed to perform qualification or other testing of software [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

Note: Elements may include but are not limited to simulators, code analyzers, test case generators, and path analyzers, and may also include elements used in the software engineering environment. 

==== Software testing (ISO 29119) ====

See [[:general:glossary#testing|Testing]]

==== Specification-based testing (ISO 29119) ====

Testing that takes into account the expected behavior of the test item, e.g. as described in requirements specifications or design specifications. The internal mechanism of a system or component is not considered.

NOTE: A synonym for specification-based testing is black-box testing. 

==== Spike testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing the performance of the test item when a sudden increase in load is applied, for example by simulating a dramatic increase in users logging on to the system.

==== Stability testing (ISO 29119) ====

Testing that is aimed at determining the capability of the test item to avoid unexpected and/or unwanted effects after modification. For example, this could include an assessment of the number of new defects (i.e. incidents) that are introduced during the repair of existing defects.

==== Standard ====

It is really hard to define what a standard is, but here are a couple of examples of standards. 
•	Process maps
•	Role descriptions
•	Templates
•	Job aids
•	Tools selections
•	Link to external content
As you can see, the types are quite diverse, so the definition is pretty much: “Whatever the communities agree on”. 

==== Standards Library ====

The portal that contains the Standards 

==== State transition testing (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute specific aspects of a state model corresponding to the test item. [BS 7925-1]

==== Statement coverage (ISO 29119) ====

Percentage of executable statements in a component that have been exercised by testing. [BS 7925-1]

==== Statement testing (ISTQB) ==== 

A white box test design technique in which test cases are designed to execute statements. 

==== Statement testing (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute source code statements. 

==== Static analysis (ISO 29119) ====

Automated analysis of a program carried out without executing the program. [BS 7925-1]

==== Static analysis (ISTQB) ==== 

Analysis of software artifacts, e.g. requirements or code, carried out without execution of these software development artifacts. Static analysis is usually carried out by means of a supporting tool. 

==== Static analysis rules (ISO 29119) ====

A set of rules that specify the rules to be followed during a static analysis. 

==== Static analysis tool (ISTQB) ==== 

See static analyzer. 

==== Static analyzer (ISTQB) ==== 

A tool that carries out static analysis. 

==== Static code analysis (ISTQB) ==== 

Analysis of source code carried out without execution of that software. 

==== Static code analyzer (ISTQB) ====

A tool that carries out static code analysis. The tool checks source code, for certain properties such as conformance to coding standards, quality metrics or data flow anomalies. 

==== Static test report (ISO 29119) ====

A report that provides a summary of the static testing that was performed.

==== Static testing (ISTQB) ====

Testing of a component or system at specification or implementation level without execution of that software, e.g. reviews or static analysis. 

==== Static testing (ISO 29119) ====

Testing of a component or system at specification or implementation level without execution of that software, e.g. reviews or static analysis.

==== Statistical testing (ISTQB) ==== 

A test design technique in which a model of the statistical distribution of the input is used to construct representative test cases. See also operational profile testing. 

==== Status accounting (ISTQB) ====

An element of configuration management, consisting of the recording and reporting of information needed to manage a configuration effectively. This information includes a listing of the approved configuration identification, the status of proposed changes to the configuration, and the implementation status of the approved changes. [IEEE 610] 

==== STEP (ISTQB) ==== 

See Systematic Test and Evaluation Process. 

==== Storage (ISTQB) ==== 

See resource utilization. 

==== Storage testing (ISTQB) ====

See resource utilization testing. 

==== Stress testing (ISTQB) ==== 

A type of performance testing conducted to evaluate a system or component at or beyond the limits of its anticipated or specified workloads, or with reduced availability of resources such as access to memory or servers. [After IEEE 610] 

See also performance testing, load testing. 

==== Stress testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing the performance of the test item when it is pushed beyond its anticipated peak load, to determine how it behaves under extreme load.

==== Stress testing tool (ISTQB) ==== 

A tool that supports stress testing. 

==== Structural coverage (ISTQB) ==== 

Coverage measures based on the internal structure of a component or system. 

==== Structural test design technique (ISTQB) ==== 

See white box test design technique.

==== Structural testing (ISTQB) ==== 

See white box testing.

==== Structural testing (ISO 29119) ====

See [[:general:glossary#structure-based testing|Structure-based Testing]] 

==== Structure-based testing (ISTQB) ==== 

See white-box testing. 

==== Structured walkthrough (ISTQB) ====

See walkthrough. 

==== Structure-based testing (ISO 29119) ====

Testing that takes into account the internal mechanism of a system or component.

NOTE: Types include branch testing, decision testing, and statement testing. Synonyms for structure-based testing are structural testing, glass-box testing, and white-box testing. 
==== Stub (ISTQB) ====

A skeletal or special-purpose implementation of a software component, used to develop or test a component that calls or is otherwise dependent on it. It replaces a called component. [After IEEE 610] 

==== Sub path (ISTQB) ==== 

A sequence of executable statements within a component. 

==== Suitability (ISTQB) ==== 

The capability of the software product to provide an appropriate set of functions for specified tasks and user objectives. [ISO 9126] See also functionality. 


==== Suitability testing (ISTQB) ==== 

The process of testing to determine the suitability of a software product 

==== Suspension criteria (ISTQB) ==== 

The criteria used to (temporarily) stop all or a portion of the testing activities on the test items. [After IEEE 829] 

==== Suspension criteria (ISO 29119) ====

The criteria used to (temporarily) stop all or a portion of the testing activities on the test items. [After IEEE 829]

==== Syntax testing (ISTQB) ====

A black box test design technique in which test cases are designed based upon the definition of the input domain and/or output domain.

==== Syntax testing (ISO 29119) ====

A specification-based test design technique based on the expected syntax of the input to the test item in which tests are designed to exercise options (valid variations) and mutations (invalid variations) of the defined syntax.
[BS 7925-1]

==== System (ISTQB) ====

A collection of components organized to accomplish a specific function or set of functions. [IEEE 610] 

==== System integration testing (ISTQB) ====  

Testing the integration of systems and packages; testing interfaces to external organizations (e.g. Electronic Data Interchange, Internet).

==== System of systems (ISTQB) ====

Multiple heterogeneous, distributed systems that are embedded in networks at multiple levels and in multiple interconnected domains, addressing large-scale inter-disciplinary common problems and purposes, usually without a common management structure. 

==== System testing (ISTQB) ==== 

The process of testing an integrated system to verify that it meets specified requirements. [Hetzel] 

==== System testing (ISO 29119) ====

Testing conducted on a complete, integrated system to evaluate the system's compliance with its specified requirements.  [ISO/IEC 24765]

==== Systematic Test and Evaluation Process (ISTQB) ==== 

A structured testing methodology, also used as a content-based model for improving the testing process. Systematic Test and Evaluation 
Process (STEP) does not require that improvements occur in a specific order. 

See also content-based model. 

===== T =====

==== Technical Architecture Framework for Information Management (TAFIM) ====

It is a reference model of the 1990s that is used for enterprise architecture development as defined by the United States Department of Defense (DoD). TAFIM identifies the services, standards, concepts, components, and configurations that can be utilized to guide the development of technical architectures to meet the specific mission requirements. 

==== Technical review (ISTQB) ==== 

A peer group discussion activity that focuses on achieving consensus on the technical approach to be taken. [Gilb and Graham, IEEE 1028] See also peer review.

==== Test (ISO 29119) ====

An activity in which a system or component is executed under specified conditions, the results are observed or recorded, and an evaluation is made of some aspect of the system or component. [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

==== Test (ISTQB) ==== 

A set of one or more test cases. [IEEE 829] 

==== Test approach (ISTQB) ==== 

The implementation of the test strategy for a specific project. It typically includes the decisions made that follow based on the (test) project’s goal and the risk assessment carried out, starting points regarding the test process, the test design techniques to be applied, exit criteria and test types to be performed. 

==== Test artifact ====

See [[:general:glossary#test ware|Test ware]]

==== Test automation (ISTQB) ==== 

The use of software to perform or support test activities, e.g. test management, test design, test execution and results checking. 

00000000000

==== Test basis (ISO 29119) ====

Body of knowledge from which the requirements for a component or system can be inferred. For example a requirements document, relevant standards, user guides, and previous versions of the system or software.

==== Test basis (ISTQB) ==== 

All documents from which the requirements of a component or system can be inferred. The documentation on which the test cases are based. If a document can be amended only by way of formal amendment procedure, then the test basis is called a frozen Test basis. 
[After TMap] 

==== Test bed (ISTQB) ==== 

See test environment. 

==== Test case (ISTQB) ==== 

A set of input values, execution preconditions, expected results and execution post conditions, developed for a particular objective or test condition, such as to exercise a particular program path or to verify compliance with a specific requirement. [After IEEE 
610] 

==== Test case (ISO 29119) ====

A set of test inputs (and actions, where applicable), execution conditions, and expected results developed to exercise specific test coverage item(s). 

==== Test case design technique (ISTQB) ====

See test design technique. 

==== Test case specification (ISTQB) ==== 

A document specifying a set of test cases (objective, inputs, test actions, expected results, and execution preconditions) for a test item. [After IEEE 829]

==== Test case design technique ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test case precondition (ISO 29119) ====

The state the test item must be in before the test case can be executed. 

==== Test case specification (ISO 29119) ====

The documentation of a set of one or more test cases.

==== Test case suite (ISTQB) ====

See test suite. 

==== Test charter (ISTQB) ==== 

A statement of test objectives, and possibly test ideas about how to test. Test charters are used in exploratory testing. See also exploratory testing.

==== Test closure (ISTQB) ==== 

During the test, closure phase of a test process data is collected from completed activities to consolidate experience, testware, facts and numbers. The test closure phase consists of finalizing and archiving the testware and evaluating the test process, including preparation of a test evaluation report. 

See also test process. 

==== Test comparator (ISTQB) ==== 

A test tool to perform automated test comparison of actual results with expected results. 

==== Test comparison (ISTQB) ==== 

The process of identifying differences between the actual results produced by the component or system under test and the expected results for a test. Test comparison 
Can be performed during test execution (dynamic comparison) or after test execution. 

==== Test completion criteria (ISTQB) ====

See exit criteria. 

==== Test completion criteria (ISO 29119) ====

Criteria for determining when planned testing is complete, defined in terms of a test measurement technique. 

[BS 7925]

==== Test completion report (ISO 29119) ====

A report that provides a summary of the testing that was performed.

==== Test condition (ISTQB) ==== 

An item or event of a component or system that could be verified by one or more test cases, e.g. a function, transaction, feature, quality attribute, or structural element.

==== Test condition (ISO 29119) ====

A testable aspect of a component or system that may be used to derive one or more test coverage items.

NOTE: For example, a function, transaction, attribute, parameter (input or output), condition, feature, quality attribute, requirement or structural element identified as a basis for testing.

==== Test control (ISTQB) ==== 

A test management task that deals with developing and applying a set of corrective actions to get a test project on track when monitoring shows a deviation from what was planned. See also test management. 

==== Test coverage (ISTQB) ==== 

See coverage. 

==== Test coverage (ISO 29119) ====

The degree, expressed as a percentage, to which specified coverage items have been exercised by a test procedure or procedures

==== Test coverage item (ISO 29119) ====

An aspect of a component or system for testing e.g. a function, transaction, feature, quality attribute, or structural element that is normally derived by applying a test design technique. 

==== Test cycle (ISTQB) ==== 

Execution of the test process against a single identifiable release of the test object. ==== Test data (ISTQB) ==== Data that exists (for example, in a database) before a test is executed, and that affects or is affected by the component or system under test.

==== Test data (ISO 29119) ====

Data, often in a database, that is set up in the test environment before a test is executed, as part of the preconditions for a test. 

==== Test data requirements (ISO 29119) ====

A document that describe the necessary and desired properties of the test data needed to execute the test procedures defined in the Test Procedure Specification.

==== Test data preparation tool (ISTQB) ==== 

A type of test tool that enables data to be selected from existing databases or created, generated, manipulated and edited for use in testing. 

==== Test design (ISTQB) ====

(1) See test design specification. 
(2) The process of transforming general testing objectives into tangible test conditions and test cases. 

==== Test design (ISO 29119) ====

The process of transforming general testing objectives into tangible test conditions, test coverage items and test cases.

==== Test design specification (ISO 29119) ====

A document specifying the features to be tested and their corresponding test conditions. 

==== Test design technique (ISTQB) ==== 

Procedure used to derive and/or select test cases. 

==== Test design tool (ISTQB) ==== 

A tool that supports the test design activity by generating test inputs from a specification that may be held in a CASE tool repository, e.g. requirements management tool, from specified test conditions held in the tool itself, or from code. 
Test driven development: A way of developing software where the test cases are developed, and often automated, before the software is developed to run those test cases. 

==== Test driver (ISTQB) ==== 

See driver. 

==== Test deliverable (ISTQB) ==== 

Any test (work) product that must be delivered to someone other than the Test (work) product’s author. 

See also deliverable.

==== Test design technique (ISO 29119) ====

Procedure used to derive and/or select test cases.

==== Test-driven development (ISO 29119) ====

A software development technique where the developer writes a test case that defines a desired function then produces code to cause the test to pass. The test cases are usually run within an automated unit test framework.

==== Test environment (ISO 29119) ====

See [[:general:glossary#software test environment|Software Test Environment]]

==== Test environment (ISTQB) ====  

An environment containing hardware, instrumentation, simulators, software tools, and other support elements needed to conduct a test. [After IEEE 610] 

==== Test environment requirements (ISO 29119) ====

A document that describes both the necessary and desired properties of the test environment. 

NOTE: All or parts of the Test Environment Requirements may reference where the information can be found, e.g. in the appropriate Organizational Test Policy and Test Strategy, Test Plan, and/or Test Specification.

==== Test estimation (ISTQB) ==== 

The calculated approximation of a result related to various aspects of testing (e.g. effort spent, completion date, costs involved, number of test cases, etc.) which is usable even if input data may be incomplete, uncertain, or noisy.

==== Test environment readiness report (ISO 29119) ====

A document that describes the status of each environment requirement.

==== Test evaluation report (ISTQB) ==== 

A document produced at the end of the test process summarizing all testing activities and results. It also contains an evaluation of the test process and lessons learned. 

==== Test execution (ISTQB) ==== 

The process of running a test on the component or system under test, producing actual result(s). 

==== Test execution (ISO 29119) ====

(1) The process of running a test on the component or system under test, producing actual result(s).
(2) Processing of a test case suite by the software under test, producing an outcome. [BS 7925]
(3) Act of performing one or more test cases. [ISO/IEC 24765, Systems and Software Engineering Vocabulary]

==== Test execution automation (ISTQB) ==== 

The use of software, e.g. capture/playback tools, to control the execution of tests, the comparison of actual results to expected results, the setting up of test preconditions, and other test control and reporting functions. 

==== Test execution log (ISO 29119) ====

A log that summarizes the course of the execution of one or more test procedures. 

==== Test execution phase (ISTQB) ==== 

The period of time in a software development lifecycle during which the components of a software product are executed, and the software product is evaluated to determine whether or not requirements have been satisfied. [IEEE 610] 

==== Test execution schedule (ISTQB) ====

A scheme for the execution of test procedures. The test procedures are included in the test execution schedule in their context and in the order in which they are to be executed. 

==== Test execution schedule (ISO 29119) ====

A scheme for the execution of test procedures. The test procedures are included in the test execution schedule in their context and in the order in which they are to be executed.

==== Test execution technique (ISTQB) ====

The method used to perform the actual test execution, either manual or automated. 
Test execution tool is a type of test tool that is able to execute other software using an automated test script, e.g. capture/playback. [Fewster and Graham]

==== Test fail (ISTQB) ====

See fail.

==== Test generator (ISTQB) ==== 

See test data preparation tool. 

==== Test harness (ISTQB) ==== 

A test environment comprised of stubs and drivers needed to execute a test. 

==== Test harness (ISO 29119) ====

(1) Testing tool that comprises a test driver and a test comparator [BS 7925] 
(2) Scaffolding code written for the purpose of exercising lower level code when the higher-level code that will ultimately exercise it is not yet available. [ISO/IEC 24765, Systems and Software Engineering Vocabulary]

==== Test implementation (ISTQB) ==== 

The process of developing and prioritizing test procedures, creating test data and, optionally, preparing test harnesses and writing automated test scripts. 

==== Test improvement plan (ISTQB) ====

A plan for achieving organizational test process improvement objectives based on a thorough understanding of the current strengths and weaknesses of the organization’s test processes and test process assets. [After CMMI]

==== Test incident (ISTQB) ==== 

See incident. 

==== Test incident report (ISTQB) ==== 

See incident report. 

==== Test infrastructure (ISTQB) ==== 

The organizational artifacts needed to perform testing, consisting of test environments, test tools, office environment and procedures. 

==== Test input (ISTQB) ====

The data received from an external source by the test object during test execution. 

The external source can be hardware, software or human.

==== Test item (ISTQB) ====

The individual element to be tested. There usually is one test object and many test items. 

==== Test item (ISO 29119) ====

A system or software item that is an object of testing.

==== Test item parameter (ISO 29119) ====

Test item parameters are used in combinatorial testing and represent a particular aspect of the test item that is relevant to the testing, and will often correspond to the input parameters to the test item, but other aspects may also be used, such as environmental factors (in configuration testing the parameters could be various environment factors, such as OS and browser).

==== Test item specification (ISO 29119) ====

See [[:general:glossary#test basis|Test Basis]]

==== Test item transmittal report (ISTQB) ==== 

See release note.

==== Test item transmittal report (ISO 29119) ====

See [[:general:glossary#release note|Release Note]]

==== Test leader (ISTQB) ==== 

See test manager. 

==== Test level (ISTQB) ====

A group of test activities that are organized and managed together. A test level is linked to the responsibilities in a project. Examples of test levels are component test, integration test, system test and acceptance test. [After TMap] 

==== Test level (ISO 29119) ====

See [[:general:glossary#test sub-process|Test Sub-process]]

==== Test log (ISTQB) ==== 

A chronological record of relevant details about the execution of tests. [IEEE 829] 

==== Test logging (ISTQB) ==== 

The process of recording information about tests executed into a test log. 

==== Test management (ISTQB) ====  

The planning, estimating, monitoring and control of test activities, typically carried out by a test manager. 

==== Test management (ISO 29119) ====

The planning, estimating, monitoring, reporting, and control of test activities.
==== Test management tool (ISTQB) ==== 

A tool that provides support to the test management and control part of a test process. It often has several capabilities, such as testware management, scheduling of tests, and the logging of results, progress tracking, incident management and test reporting. 

==== Test manager (ISTQB) ==== 

The person responsible for project management of testing activities and resources, and evaluation of a test object. The individual, who directs, controls, administers, plans and regulates the evaluation of a test object. 

==== Test Maturity Model (TMM) (ISTQB) ==== 

A five level staged framework for test process improvement, related to the Capability Maturity Model (CMM) that describes the key elements of an effective test process. 

==== Test Maturity Model Integrated (TMMi) (ISTQB) ==== 

A five level staged framework for test process improvement, related to the Capability Maturity Model Integration (CMMI) that describes the key elements of an effective test process. 

==== Test method (ISO 29119) ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test monitoring (ISTQB) ==== A test management task that deals with the activities related to periodically checking the status of a test project. Reports are prepared that compare the actual to that which was planned. See also test management. 

==== Test object (ISTQB) ==== 

The component or system to be tested. 

See also test item.

==== Test object (ISO 29119) ====

See [[:general:glossary#test item|Test Item]]

==== Test objective (ISTQB) ==== 

A reason or purpose for designing and executing a test.

==== Test objective (ISO 29119) ====

The identified set of software features to be measured under specified conditions by comparing actual behavior with the required behavior.  [ISO/IEC 25051:2006]

==== Test oracle (ISTQB) ==== 

A source to determine expected results to compare with the actual result of the software under test. An oracle may be the existing system (for a benchmark), other software, a user manual, or an individual’s specialized knowledge, but should not be the code. [After Adrion] 

===== Test outcome (ISTQB) ====

See result. 

==== Test outcome (ISO 29119) ====

The consequence/outcome of the execution of a test. It includes outputs to screens, changes to data, reports, and communication messages sent. 

===== Test pass (ISTQB) ====

See pass. 

==== Test performance indicator (ISTQB) ==== 

A high-level metric of effectiveness and/or efficiency used to guide and control progressive test development, e.g. Defect Detection Percentage (DDP). 

==== Test phase (ISTQB) ==== 

A distinct set of test activities collected into a manageable phase of a project, e.g. the execution activities of a test level. [After Gerrard]

==== Test phase (ISO 29119) ====

See [[:general:glossary#test sub-process|Test Sub=process]]

==== Test plan (ISTQB) ==== 

A document describing the scope, approach, resources and schedule of intended Test activities. It identifies amongst others test items, the features to be tested, the testing tasks, who will do each task, degree of tester independence, the test environment, and the test design techniques and entry and exit criteria to be used, and the rationale for their choice, and any risks requiring contingency planning. It is a record of the test planning process. 

[After IEEE 829] 

==== Test Plan (ISO 29119) ====

A document describing the scope, strategy, resources and schedule of intended test activities.  

==== Test planning (ISTQB) ==== 

The activity of establishing or updating a test plan.

==== Test Point Analysis (TPA) (ISTQB) ==== 

A formula based test estimation method based on function point analysis. [TMap] 

==== Test policy (ISTQB) ==== 

A high-level document describing the principles, approach and major objectives of the organization regarding testing.  

==== Test Policy (ISO 29119) ====

A high-level document describing the principles, approach and major objectives of the organization regarding testing.

==== Test procedure (ISTQB) ==== 

See test procedure specification. 

==== Test procedure (ISO 29119) ====

A sequence of test cases and any associated actions required to set up the preconditions for the test cases. 

NOTE: Test procedures include detailed instructions for how to run a set of one or more test cases selected to be run consecutively, including set up of common preconditions, and providing input and evaluating the actual result for each included test case.

==== Test Procedure Specification (ISO 29119) ====

A document describing the test sets, which are collections of test cases to be executed for a particular objective. The test cases in a test set are listed in their required order in the test procedure.

NOTE: A test procedure specification may for example be a separate document, a chapter in the test specification document, held in a database, or loosely scribbled. It is also known as a manual test script. A test procedure specification for an automated test run is usually called a test script. 

==== Test procedure specification (ISTQB) ====

A document specifying a sequence of actions for the execution of a test. Also known as test script or manual test script. [After IEEE 829] 

==== Test process (ISTQB) ==== 

The fundamental test process comprises test planning and control, test analysis and design, test implementation and execution, evaluating exit criteria and reporting, and test closure activities.

==== Test process (ISO 29119) ====

The process used to provide information on the quality of a software product. A test process shall comprise a number of activities, grouped into one or more test sub-processes.

==== Test Process Group (ISTQB) ====

A collection of (test) specialists, who facilitate the definition, maintenance, and improvement of the test processes used by an organization. [After CMMI]

==== Test Process Improvement (TPI) (ISTQB) ==== 

A continuous framework for test process improvement that describes the key elements of an effective test process, especially targeted at system testing and acceptance testing. 

==== Test process improvement manifesto (ISTQB) ====

A statement that echoes the agile manifesto, and defines values for improving the testing process. The values are: 
- Flexibility over detailed processes 
- Best Practices over templates 
- Deployment orientation over process orientation 
- peer reviews over quality assurance (departments) 
- Business driven over model driven. [Veenendaal08] 

==== Test process improver (ISTQB) ==== 

A person implementing improvements in the test process based on a test improvement plan. 
==== Test progress report (ISTQB) ==== 

A document summarizing testing activities and results, produced at regular intervals, to report progress of testing activities against a baseline (such as the original test plan) and to communicate risks and alternatives requiring a decision to management. 

===== Test record (ISTQB) ==== 

See test log. 

==== Test recording (ISTQB) ====

See test logging. 

==== Test report (ISTQB) ====

See test summary report and test progress report. 

==== Test reproducibility (ISTQB) ====

An attribute of a test indicating whether the same results are produced each time the test is executed. 

==== Test requirement (ISTQB) ====

See test condition. 

==== Test requirement (ISO 29119) ====

See [[:general:glossary#test condition|Test Condition]]

==== Test result (ISO 29119) ====

An indication of whether or not a specific test case has passed or failed, i.e. if the actual result corresponds to the expected result or if deviations were observed.

NOTE: The test result for a test case execution is usually recorded directly in the test procedure or in the individual test case in a place holder reserved for this purpose. If the test case execution passes this is typically marked with a tick mark or the like, and if the test case execution fails this is usually marked with the number of the incident report raised as a result of the observation of the deviation. The test result is therefore not 

==== Test result (ISTQB) ====

See result considered an independent document.

==== Test rig (ISTQB) ==== 

See test environment. 

==== Test run (ISTQB) ====

Execution of a test on a specific version of the test object.

==== Test run log (ISTQB) ==== 

See test log. 

==== Test scenario (ISTQB) ====

See test procedure specification. 

==== Test schedule (ISTQB) ==== 

A list of activities, tasks or events of the test process, identifying their intended start and finish dates and/or times, and interdependencies. 

==== Test schedule (ISO 29119) ====

A list of test activities, tasks or events, identifying their intended start and finish dates/ times, and their interdependencies.

===== Test script (ISTQB) ==== 

Commonly used to refer to a test procedure specification, especially an automated one.

==== Test script (ISO 29119) ====

(1) Commonly used to refer to a test procedure specification, especially an automated one.
(2) Automated test procedure used with a test harness. [BS 7925]

==== Test session (ISTQB) ==== 

An uninterrupted period of time spent in executing tests. In exploratory testing, each test session is focused on a charter, but testers can also explore new opportunities or issues during a session. The tester creates and executes test cases on the fly and records their progress. 

See also exploratory testing.

==== Test set (ISTQB) ====
See test suite. 

==== Test set (ISO 29119) ====

A set of one or more test cases with a common constraint on their execution (e.g. a specific test environment, specialized domain knowledge or specific purpose).  

==== Test situation (ISTQB) ====

See test condition. 

==== Test specification (ISTQB) ====  

A document that consists of a test design specification, test case specification and/or test procedure specification. 

==== Test specification (ISO 29119) ====

The complete documentation of the test design, test cases and/or test procedures for a specific test item.

NOTE: A test specification may be documented in one document, in a set of documents, or in other ways, for example in a mixture of documents and database entries.

==== Test specification technique (ISTQB) ====

See test design technique. 

==== Test specification technique (ISO 29119) ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test stage (ISTQB) ==== 

See test level. 

==== Test stage (ISO 29119) ====

See [[:general:glossary#test sub-process|Test Sub-process]]

==== Test Status Report (ISO 29119) ====

A report that provides up to date information about the status of the testing that is being performed.

==== Test strategy (ISTQB) ====

A high-level description of the test levels to be performed and the testing within those levels for an organization or program (one or more projects). 

==== Test Strategy (ISO 29119) ====

A high-level description of the test sub-processes to be performed and the testing within those sub-processes for an organization or program (one or more projects). 

==== Test sub-process (ISO 29119) ====

A group of related testing activities that form part of the test process, performed to fulfill a specific test objective (e.g. requirements documentation testing, unit testing, story testing, integration testing, system testing, acceptance testing). A test sub-process shall comprise one or more test types. Depending on the life cycle model used, test sub-processes are also typically called test phases, test levels, test stages or test tasks.

==== Test suite (ISTQB) ====

A set of several test cases for a component or system under test, where the post condition of one test is often used as the precondition for the next one.

==== Test suite (ISO 29119) ====

See [[:general:glossary#test procedure|Test Procedure]]

==== Test summary report (ISTQB) ==== 

A document summarizing testing activities and results. It also contains an evaluation of the corresponding test items against exit criteria. [After IEEE 829]

==== Test summary report (ISO 29119) ====

A document summarizing testing activities and results.

==== Test target (ISTQB) ==== 

A set of exit criteria. 

==== Test technique (ISTQB) ====

See test design technique. 

==== Test technique (ISO 29119) ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test tool (ISO 29119) ====

A software product that supports one or more test activities.

====Test tool (ISTQB) ====

A software product that supports one or more test activities, such as planning and control, specification, building initial files and data, test execution and test analysis. 
[TMap] 

See also CAST.

==== Test traceability matrix (ISO 29119) ====

A document or spreadsheet used to identify related items in documentation and software, such as requirements with associated tests.

==== Test type (ISTQB) ====

A group of test activities aimed at testing a component or system focused on a specific test objective, i.e. functional test, usability test, regression test etc. A test type may take place on one or more test levels or test phases. [After TMap] 

==== Test type (ISO 29119) ====

A group of testing activities that are focused on specific quality attributes. A test type may be performed in a single test sub-process or may be performed across a number of test sub-processes.

==== Testability (ISTQB) ==== 

The capability of the software product to enable modified software to be tested. [ISO 9126] 

See also maintainability.

==== Testability (ISO 29119) ====

The ease with which test criteria can be established for a system or component and tests can be performed to determine whether those criteria have been met. [After ISO 25010]

==== Testability review (ISTQB) ====

A detailed check of the test basis to determine whether the test basis is at an adequate quality level to act as an input document for the test process. [After TMap] 

==== Testable requirements (ISTQB) ====

The degree to which a requirement is stated in terms that permit establishment of test designs (and subsequently test cases) and execution of tests to determine whether the requirements have been met. [After IEEE 610] 

==== Tester (ISTQB) ==== 

A skilled professional who is involved in the testing of a component or system. 

==== Testing (ISTQB) ==== 

The process consisting of all lifecycle activities, both static and dynamic, concerned with planning, preparation and evaluation of software products and related work products. To determine that they satisfy specified requirements, to demonstrate that they are fit for 
Purpose and to detect defects. 

==== Testing (ISO 29119) ====

Comparing what the test item does with what it is expected to do.

==== Testware (ISTQB) ==== 

Artifacts produced during the test process required to plan, design, and execute tests, such as documentation, scripts, inputs, expected  results, set-up and clear-up procedures, files, databases, environment, and any additional software or utilities used in testing. [After Fewster and Graham]

==== Test ware (ISO 29119) ====

The products produced by the testing effort.

NOTE: Examples are test documentation and data [IEEE 829-2008]. 

==== Thread testing (ISTQB) ==== 

A version of component integration testing where the progressive integration of components follows the implementation of subsets of the requirements, as opposed to the integration of components by levels of a hierarchy. === time behavior (ISTQB) ==== See performance. 

==== Top-down testing (ISTQB) ====

An incremental approach to integration testing where the component at the top of the component hierarchy is tested first, with lower level components being simulated by stubs. Tested components are then used to test lower level components. The process is repeated until the lowest level components have been tested. See also integration testing. 


==== Total Quality Management (ISTQB) ====

An organization-wide management approach centered on quality, based on the participation of all its members and aiming at long-term success through customer satisfaction, and benefits to all members of the organization and to society. Total Quality Management consists of planning, organizing, directing, control, and assurance. [After ISO 8402]

==== TPG (ISTQB) ==== 

See Test Process Group. 

==== TQM (ISTQB) ====

See Total Quality Management. 

==== Traceability (ISTQB) ==== 

The ability to identify related items in documentation and software, such as requirements with associated tests. 

See also horizontal traceability, vertical traceability. 

==== Traceability matrix (ISO 29119) ====

Is a document, usually in the form of a table that correlates any two baseline documents that require a many to many relationship to determine the completeness of the relationship. It is often used with high-level requirements (these often consist of marketing requirements) and detailed requirements and risks of the software product to the matching parts of high-level design, detailed design, test plan, and test cases.

==== Transactional analysis (ISTQB) ====

The analysis of transactions between people and within people’s minds; a transaction is defined as a stimulus plus a response. Transactions take place between people and between the ego states (personality segments) within one person’s mind. 

==== Transcendent-based quality (ISTQB) ====

A view of quality, wherein quality cannot be precisely defined, but we know it when we see it, or are aware of its absence when it is missing. Quality depends on the perception and affective feelings of an individual or group of individuals towards a product. [After Garvin] See also manufacturing-based quality, product-based quality, user-based quality, value-based quality. 

===== U =====

==== Understandability (ISTQB) ====

The capability of the software product to enable the user to understand whether the software is suitable, and how it can be used for particular tasks and conditions of use. [ISO 9126] See also usability. 

==== Unified Modeling Language (UML) ====

It is an industry-standard language that helps to clearly communicate requirements, architectures and designs. The UML was originally developed by Rational Software (acquired by IBM), and it is presently maintained by the standards organization Object Management Group. 

==== Unified Process (or Unified Software Development Process) ====

It is a well known iterative and incremental software development process framework. Unified Process is an extensible framework that is needed to be customized for specific organizations or projects. The Unified Process has four phases in the lifecycle: Inception; Elaboration; Construction and Transition. 

==== Unit (ISTQB) ==== 

See component.

==== Unit test framework (ISTQB) ====

A tool that provides an environment for unit or component testing in which a component can be tested in isolation or with suitable stubs and drivers. It also provides other support for the developer, such as debugging capabilities. [Graham] 

==== Unit testing (ISTQB) ====

See component testing. 

==== Unit testing ====

See [[:general:glossary#component testing|Component Testing]]

==== Unreachable code (ISTQB) ==== 

Code that cannot be reached and therefore is impossible to execute. 

==== Usability (ISTQB) ==== 

The capability of the software to be understood, learned, used and attractive to the user when used under specified conditions. [ISO 9126]

==== Usability testing (ISTQB) ==== 

Testing to determine the extent to which the software product is understood, easy to learn, easy to operate and attractive to the users under specified conditions. [After ISO 9126] 

==== Usability testing (ISO 29119) ====

Testing to determine the extent to which a product can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use.

==== Use case (ISTQB) ==== 

A sequence of transactions in a dialogue between an actor and a component or system with a tangible result, where an actor can be a user or anything that can exchange information with the system. 

==== Use case testing (ISTQB) ==== 

A black box test design technique in which test cases are designed to execute scenarios of use cases. 

==== Use case testing (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute the flows through use cases.

==== User acceptance testing (ISTQB) ==== 

See acceptance testing. 

==== User acceptance testing (ISO 29119) ====

See [[:general:glossary#acceptance testing|Acceptance Testing]]

==== User-based quality (ISTQB) ====

A view of quality, wherein quality is the capacity to satisfy needs, wants and desires of the user(s). A product or service that does not fulfill user needs is unlikely to find any users. This is a context dependent, contingent approach to quality since different business characteristics require different qualities of a product. [After Garvin] 

See also manufacturing-based quality, product-based quality, transcendent-based quality, value-based quality. 

==== User scenario testing (ISTQB) ==== 

See use case testing. 

==== User test (ISTQB) ====

A test whereby real-life users are involved to evaluate the usability of a component or system. 


===== V =====

==== V-model (ISTQB) ==== 

A framework to describe the software development lifecycle activities from requirements specification to maintenance. The V-model illustrates how testing activities can be integrated into each phase of the software development lifecycle. 

==== Validation (ISTQB) ==== 

Confirmation by examination and through provision of objective evidence that the requirements for a specific intended use or application have been fulfilled. [ISO 9000] value-based quality:

A view of quality, wherein quality is defined by price. A quality product or service is one that provides desired performance at an acceptable cost. Quality is determined by means of a decision process with stakeholders on trade-offs between time, effort and cost aspects. [After Garvin] See also manufacturing-based quality, product-based quality, transcendent-based quality, user-based quality.

==== Variable (ISTQB) ==== 

An element of storage in a computer that is accessible by a software program by referring to it by a name.

==== Verification (ISTQB) ==== 

Confirmation by examination and through provision of objective evidence that specified requirements have been fulfilled. [ISO 9000] 

==== Validation (ISO 29119) ====

Confirmation by examination and provision of objective evidence that the particular requirements for a specific intended use have been fulfilled [BS 7925]

==== Verification (ISO 29119) ====

Confirmation by examination and provision of objective evidence that specified requirements have been fulfilled [BS 7925]

==== Version control (ISTQB) ==== 

See configuration control. 

==== Vertical traceability (ISTQB) ==== 

The tracing of requirements through the layers of development documentation to components. 

==== Volume testing (ISTQB) ==== 

Testing where the system is subjected to large volumes of data. 

See also resource-utilization testing.

==== Volume testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing the performance of the test item when it is processing specified levels of data. For example, this may include assessing test item performance when its database is nearing maximum capacity.

===== W =====

==== Walkthrough (ISTQB) ====

A step-by-step presentation by the author of a document in order to gather 
Information and to establish a common understanding of its content. [Freedman and 
Weinberg, IEEE 1028] 

See also peer review. 

==== Walkthrough (ISO 29119) ====

A step-by-step presentation by the author of a document.  [IEEE 1028-2008] 


==== WBS (ISTQB) ====

See Work Breakdown Structure. 

==== White-box technique (ISTQB) ==== 

See white-box test design technique. 

==== White-box test design technique (ISTQB) ==== 

Procedure to derive and/or select test cases based on an analysis of the internal structure of a component or system. 

==== White-box testing (ISTQB) ==== 

Testing based on an analysis of the internal structure of the component or system. 

==== White box testing techniques (ISO 29119) ====

See [[:general:glossary#structure-based testing|Structure-based Testing]]

==== White-box test design technique (ISTQB) ==== 

Procedure to derive and/or select test cases based on an analysis of the internal structure of a component or system. 

==== Wide Band Delphi (ISTQB) ==== 

An expert based test estimation technique that aims at making an accurate estimation using the collective wisdom of the team members.


The percentage of all single condition outcomes that independently affect a decision outcome that have been exercised by a test case suite. 100% condition determination coverage implies 100% decision condition coverage.  

==== Condition determination testing (ITSQB) ==== 

A white box test design technique in which test cases are designed to execute single condition outcomes that independently affect a decision outcome.

==== Condition outcome (ITSQB) ==== 

The evaluation of a condition to True or False. 

==== Condition testing (ITSQB) ==== 

A white box test design technique in which test cases are designed to execute condition outcomes. 

==== Condition testing (ISO 29119) ====

Classes of a structure-based test design techniques that use a model of the source code of the test item, which identifies decisions containing two or more conditions. There are a number of forms of condition testing, all based on exercising these conditions, such as branch condition testing, branch condition combination testing, and modified condition decision coverage (MCDC) testing.

==== Concurrency testing (ISO 29119) ====

Testing to determine how the occurrence of two or more activities within the same interval of time, either achieved by interleaving the activities or by simultaneous execution, is handled by the component or system. 

[After IEEE 610].

==== Confidence test (ITSQB) ==== 

See smoke test. 

==== Configuration (ITSQB) ==== 

The composition of a component or system as defined by the number, nature, and interconnections of its constituent parts. 

==== Configuration auditing (ITSQB) ==== 

The function to check on the contents of libraries of configuration items, e.g. for standards compliance. [IEEE 610] 

==== Configuration control (ITSQB) ====  

An element of configuration management, consisting of the evaluation, co-ordination, approval or disapproval, and implementation of changes to Configuration items after formal establishment of their configuration identification. [IEEE 610] 

==== Configuration control board (CCB) (ITSQB) ==== 

A group of people responsible for evaluating and approving or disapproving proposed changes to configuration items, and for ensuring implementation of approved changes. [IEEE 610] 

==== Configuration identification (ITSQB) ==== 

An element of configuration management, consisting of selecting the configuration items for a system and recording their functional and physical characteristics in technical documentation. [IEEE 610] 

==== Configuration item (ITSQB) ==== 

An aggregation of hardware, software or both, that is designated for configuration management and treated as a single entity in the configuration management process. [IEEE 610] 

==== Configuration management (ITSQB) ==== 

A discipline applying technical and administrative direction and surveillance to: identify and document the functional and physical characteristics of a Configuration item, control changes to those characteristics, record and report change processing and implementation status, and verify compliance with specified requirements. [IEEE 610] 

==== Configuration management tool (ITSQB) ==== ===== A ===== tool that provides support for the identification and control of configuration items, their status over changes and versions, and the release of baselines consisting of configuration items. 

==== Configuration testing (ITSQB) ====

See portability testing

==== Confirmation testing (ITSQB) ==== 

See re-testing 

==== Configuration testing (ISO 29119) ====

Testing to determine the extent to which the test item fulfils specified behavior in different configurations (the arrangement of a computer system or component as defined by the number, nature, and interconnections of its constituent parts). 

==== Conformance testing (ITSQB) ==== 

See compliance testing 

==== Conformance testing (ISO 29119) ====

See [[:general:glossary#compliance testing|Compilance Testing]]

==== Consistency (ITSQB) ==== 

The degree of uniformity, standardization, and freedom from contradiction among the documents or parts of a component or system. [IEEE 610] 

==== Content-based model (ITSQB) ==== 

A process model providing a detailed description of good engineering practices, e.g. test practices. 

==== Continuous representation(ITSQB) ==== 

A capability maturity model structure wherein capability levels provide a recommended order for approaching process improvement within specified process areas. [CMMI] 

==== Contract Administration ====

It relates to the management of the relationship with the seller. 

==== Contract Close-Out ====

It pertains to the completion and the settlement of a contract with the resolution of all outstanding issues. 

==== Control flow (ITSQB) ==== 

A sequence of events (paths) in the execution through a component or system. 

==== Control flow analysis (ITSQB) ==== 

A form of static analysis based on a representation of unique paths (sequences of events) in the execution through a component or system. Control flow analysis evaluates the integrity of control flow structures, looking for possible control flow anomalies such as closed loops or logically unreachable process steps. 

==== Control flow analysis (ISO 29119) ====

A form of static analysis based on a representation of sequences of events in the execution through a component or system.

==== Control flow graph (ITSQB) ==== 

An abstract representation of all possible sequences of events (paths) in the execution through a component or system. 

==== Control flow path (ITSQB) ==== 

See path. 

==== Conversion testing (ITSQB) ==== 

Testing of software used to convert data from existing systems for use in replacement systems. 

==== Conversion testing (ISO 29119) ====

A test technique aimed at determining whether data can be transferred from an existing test item to a new (replacement) test item. For example, this could include assessing the ability to transfer data from one database to another.

==== Corporate dashboard (ITSQB) ====  

A dashboard-style representation of the status of corporate performance data. See also balanced scorecard, dashboard.

==== Cost of quality (ITSQB) ==== 

The total costs incurred on quality activities and issues and often split into prevention costs, appraisal costs, internal failure costs and external failure costs. 

==== COTS (ITSQB) ==== 

Acronym for Commercial Off-The-Shelf software. 

See off-the-shelf software. 

==== Coverage (ITSQB) ==== 

The degree, expressed as a percentage, to which a specified coverage item has been exercised by a test suite. 

==== Coverage analysis (ITSQB) ==== 

Measurement of achieved coverage to a specified coverage item during test execution referring to predetermined criteria to determine whether ==== additional testing (ITSQB) ==== is required and if so, which test cases are needed. 

==== Coverage item (ITSQB) ==== 

An entity or property used as a basis for test coverage, e.g. equivalence partitions or code statements. 

==== Coverage tool (ITSQB) ==== 

A tool that provides objective measures of what structural elements, e.g. statements, branches have been exercised by a test suite. 

==== COP ====

See [[:general:glossary#community of practice|Community of Practice]] 

==== Coverage measurement tool ====

A tool that provides objective measures of what structural elements, e.g. statements, branches have been exercised by a test.

==== Coverage measurement tool (ITSQB) ==== 

See coverage tool.

==== Critical success factor (ITSQB) ==== 

An element which is necessary for an organization or project to achieve its mission. They are the critical factors or activities required for ensuring the success. 

See also content-based model. 

==== Critical Testing Processes (ITSQB) ==== 

A content-based model for test process improvement built around twelve critical processes. These include highly visible processes, by which peers and management judge competence and mission-critical processes in which performance affects the company's profits and reputation. 

==== CTP (ITSQB) ==== 

See Critical Testing (ITSQB) 

==== Custom software (ITSQB) ====  

See bespoke software. 

==== Cyclomatic complexity (ITSQB) ====

The number of independent paths through a program. 

Cyclomatic complexity is defined as: L – N + 2P, where 

- L = the number of edges/links in a graph 
- N = the number of nodes in a graph 
- P = the number of disconnected parts of the graph (e.g. a called graph or subroutine) 
[After McCabe] 

Cyclomatic number: See cyclomatic complexity. 

===== D =====

==== Daily build (ITSQB) ====

A development activity where a complete system is compiled and linked every day (usually overnight), so that a consistent system is available at any time including all latest changes. 

Dashboard: A representation of dynamic measurements of operational performance for some organization or activity, using metrics represented via metaphores such as visual “dials”, “counters”, and other devices resembling those on the dashboard of an automobile, so that the effects of events or activities can be easily understood and related to operational goals. 

See also corporate dashboard, scorecard. 

==== Data definition (ITSQB) ==== 

An executable statement where a variable is assigned a value.

==== Data driven testing (ITSQB) ==== 

A scripting technique that stores test input and expected results in a table or spreadsheet, so that a single control script can execute all of the tests in the table. Data Driven testing is often used to support the application of test execution tools such as capture/playback tools. [Fewster and Graham] 

See also keyword driven testing 

==== Data-driven testing (ISO 29119) ====

A scripting technique that stores test input and expected results in a table or spreadsheet, so that a single control script can execute all of the tests in the table. Data driven testing is often used to support the application of test execution tools such as capture/playback tools. [Fewster and Graham].

==== Data flow (ITSQB) ====

An abstract representation of the sequence and possible changes of the state of data objects, where the state of an object is any of: creation, usage, or destruction. [Beizer] 

====Data flow analysis (ITSQB) ==== 

A form of static analysis based on the definition and usage of variables. 

====Data flow coverage (ITSQB) ====

The percentage of definition-use pairs that have been exercised by a test suite. 

==== Data flow testing (ITSQB) ==== 

A white box test design technique in which test cases are designed to execute definition and use pairs of variables. 

==== Data flow testing (ISO 29119) ====

A class of structure-based test design techniques that use a model of the test item which identifies control flow sub paths through the program that link the definition and subsequent use of individual program variables. There are a number of forms of data flow testing, including all-definitions testing, all-c-uses testing, all-p-uses testing, all-uses testing, and all-du-paths testing.

==== Data integrity testing (ITSQB) ====

See database integrity testing 

==== Database integrity testing (ITSQB) ==== 

Testing the methods and processes used to access and manage the data(base), to ensure access methods, processes and data rules function as expected and that during access to the database, data is not corrupted or unexpectedly deleted, updated or created. 

==== Dd-path (ITSQB) ====  

A path of execution (usually through a graph representing a program, such as a flow-chart) that does not include any conditional nodes such as the path of execution between two decisions.

====Dead code (ITSQB) ====

See unreachable code. 

==== Debugger (ITSQB) ====  

See debugging tool. 

==== Debugging (ITSQB) ====  

The process of finding, analyzing and removing the causes of failures in software. 

==== Debugging tool (ITSQB) ====  

A tool used by programmers to reproduce failures, investigate the state of programs and find the corresponding defect. Debuggers enable programmers to execute programs step by step, to halt a program at any program statement and to set and examine program variables. 

==== Decision (ITSQB) ====  

A program point at which the control flow has two or more alternative routes. A node with two or more links to separate branches.

==== Decision condition coverage (ITSQB) ====

The percentage of all condition outcomes and decision outcomes that have been exercised by a test suite. 100% decision condition coverage implies both 100% condition coverage and 100% decision coverage.  

==== Decision condition testing (ITSQB) ==== 

A white box test design technique in which test cases are designed to execute condition outcomes and decision outcomes. decision coverage: The percentage of decision outcomes that have been exercised by a test suite. 100% decision coverage implies both 100% branch coverage and 100% statement coverage. 
Decision outcome: The result of a decision (which therefore determines the branches to be taken). 

==== Decision coverage (ISO 29119) ====

The percentage of decision outcomes that have been exercised by testing. [BS 7925-1]

==== Decision statement (ISO 29119) ====

Decisions correspond to statements in the source code where two (or more) possible outcomes (and hence sub paths) may be taken by the control flow. Typical decisions are used for simple selections (e.g. if-then-else), to decide when to exit loops (e.g. while-loop), and in case (switch) statements (e.g. case-1-2-3-..-N).

See also [[:general:glossary#decision testing|Decision Testing]]

==== Decision table (ITSQB) ====

A table showing combinations of inputs and/or stimuli (causes) with their 
associated outputs and/or actions (effects), which can be used to design test cases. 

==== Decision table testing (ITSQB) ====

A black box test design technique in which test cases are designed to 
execute the combinations of inputs and/or stimuli (causes) shown in a decision table. 
[Veenendaal04] See also decision table. 

==== Decision table testing (ISO 29119) ====

A specification-based test design technique that uses a model in the form of a decision table of the logical relationships between conditions (causes) and actions (effects) for the test item expressed as Booleans. 

==== Decision testing (ITSQB) ==== 
A white box test design technique in which test cases are designed to execute decision outcomes. 

==== Decision testing (ISO 29119) ====

A structure-based test design technique that uses a model of the source code of the test item which identifies decision statements in the source code, where a decision statement is an executable statement that many transfer control to another statement depending upon the logic of the decision statement.

==== Defect  (ITSQB) ====

A flaw in a component or system that can cause the component or system to fail to perform its required function, e.g. an incorrect statement or data definition. A, if  encountered during execution, may cause a failure of the component or system. 

==== Defect (ISO 29119) ====

(1) A flaw in a component or system that can cause it to fail to perform its required function.
(2) Any condition that deviates from expectation based on requirements specifications, design documents, 

NOTE: Defects may be found during, but not limited to, reviewing, testing, analysis, compilation, or use of software products or applicable documentation

==== Defect based technique (ITSQB) ====  

See defect based test design technique. 

==== Defect based test design technique (ITSQB) ====  

A procedure to derive and/or select test cases targeted at one or more defect categories, with tests being developed from what is known about the specific defect category. See also defect taxonomy. 

==== Defect density (ITSQB) ====

The number of defects identified in a component or system divided by the 
size of the component or system (expressed in standard measurement terms, e.g. lines-of-code, number of classes or function points). 

==== Defect density (ISO 29119) ====

The number of defects identified in a component or system divided by the size of the component or system (expressed in standard measurement terms, e.g. lines of code, number of classes or function points).

==== Defect Detection Percentage (DDP)  (ITSQB) ====

The number of defects found by a test phase, divided by the number found by that test phase and any other means afterwards. 

==== Defect detection percentage (DDP) (ISO 29119) ====

The number of defects found by a test phase, divided by the number found by that test phase and any other means afterwards.

==== Defect management (ITSQB) ==== 

The process of recognizing, investigating, taking action and disposing of defects. It involves recording defects, classifying them and identifying the impact. 
[After IEEE 1044] 

==== Defect management tool (ITSQB) ====

A tool that facilitates the recording and status tracking of defects and changes. They often have workflow-oriented facilities to track and control the allocation, correction and re-testing of defects and provide reporting facilities. 

See also incident management tool. 

==== Defect masking (ITSQB) ==== 

An occurrence in which one defect prevents the detection of another. [After IEEE 610] 

==== Defect report (ITSQB) ==== 

A document reporting on any flaw in a component or system that can cause the component or system to fail to perform its required function. [After IEEE 829] 

==== Defect report (ISO 29119) ====

A document reporting on any flaw in a component or system that can cause the component or system to fail to perform its required function. [After IEEE 829].

==== Defect seeding (ISO 29119) ====

The process of intentionally adding known defects to those already in the component or system for the purpose of monitoring the rate of detection and removal, and estimating the number of remaining defects. [IEEE 610].

==== Defect taxonomy (ISO 29119) ====

A system of (hierarchical) categories designed to be a useful aid for reproducibly classifying defects.

==== Defect taxonomy (ITSQB) ====

A system of (hierarchical) categories designed to be a useful aid for reproducibly classifying defects. 

==== Defect tracking tool (ITSQB) ==== 

See defect management tool. 

==== Definition-use pair (ITSQB) ==== 

The association of the definition of a variable with the use of that variable. Variable uses include computational (e.g. multiplication) or to direct the execution of a path (“predicate” use). 

==== Deliverable (ITSQB) ====

Any (work) product that must be delivered to someone other than the (work) product’s author.

==== Deming cycle (ITSQB) ====

An iterative four-step problem-solving process, (plan-do-check-act), typically used in process improvement. [After Deming]

==== Design-based testing (ITSQB) ==== An approach to testing in which test cases are designed based on the architecture and/or detailed design of a component or system (e.g. tests of interfaces between components or systems). 

==== Desk checking (ITSQB) ==== 

Testing of software or a specification by manual simulation of its execution. 

See also static testing 

==== Desk checking (ISO 29119) ====

(1) Testing of software or specification by manual simulation of its execution. 

See also [[:general:glossary#static analysis|Static Analysis]]

(2) Testing of software by the manual simulation of its execution [BS 7925].

==== Development testing (ITSQB) ====: 

Formal or informal testing conducted during the implementation of a component or system, usually in the development environment by developers. [After IEEE 
610] 

==== Deviation (ITSQB) ====

See incident. 

==== Deviation report (ITSQB) ====

See incident report. 

==== Diagnosing (IDEAL) (ITSQB) ==== 

The phase within the IDEAL model where it is determined where one is, relative to where one wants to be. The diagnosing phase consists of the activities: characterize current and desired states and develop recommendations. 

See also IDEAL.

==== Dirty testing (ITSQB) ==== 

See negative testing 

==== Disaster recovery testing (ISO 29119) ====

A category of testing concerned with the ability to recover the test item in the event of failure. This can include assessing the ability to transfer the operation of the test item to and from a remote disaster recovery facility at a different operating site.

==== Documentation testing (ITSQB) ==== 

Testing the quality of the documentation, e.g. user guide or installation guide. 
domain: The set from which valid input and/or output values can be selected. 

==== Driver (ITSQB) ==== 

A software component or test tool that replaces a component that takes care of the control and/or the calling of a component or system. [After TMap] 

==== Dynamic analysis (ITSQB) ==== 

The process of evaluating behavior, e.g. memory performance, CPU usage, of a system or component during execution. [After IEEE 610] 

==== Dynamic analysis tool (ITSQB) ==== 

A tool that provides run-time information on the state of the software code. These tools are most commonly used to identify unassigned pointers, check pointer arithmetic and to monitor the allocation, use and de-allocation of memory and to flag memory leaks. 

==== Dynamic comparison (ITSQB) ==== 

Comparison of actual and expected results, performed while the software is being executed, for example by a test execution tool. 

==== Dynamic testing (ITSQB) ==== 

Testing that involves the execution of the software of a component or system. 

==== Dynamic testing (ISO 29119) ====

Testing that involves the execution of the software of a component or system.

===== E =====

==== Each choice testing (ISO 29119) ====

A form of combinatorial testing in which the test coverage items are the set of values for each of the P-V pairs. 

==== Eclipse Process Framework (OpenUP) ====

It is an open source project that is managed by the Eclipse Foundation. It has the two goals: to provide an extensible framework and exemplary tools for software process engineering; and to provide exemplary and extensible process content for a range of software development and management processes supporting iterative, incremental development, and agile methods and applicable to a broad set of development platforms and applications. 

==== Efficiency (ITSQB) ==== 

The capability of the software product to provide appropriate performance, relative to the amount of resources used under stated conditions. [ISO 9126] 

==== Efficiency testing (ITSQB) ==== the process of testing to determine the efficiency of a software product. 

==== EFQM (European Foundation for Quality Management) excellence model (ITSQB) ==== 

A non-prescriptive framework for an organization’s quality management system, defined and owned by the European Foundation for Quality Management, based on five 'Enabling' criteria (covering what an organization does), and four 'Results' criteria (covering what an organization achieves). 

==== Elementary comparison testing (ITSQB) ==== 

A black box test design technique in which test cases are designed to execute combinations of inputs using the concept of condition determination coverage. [TMap] 

==== Emotional intelligence (ITSQB) ====  
The ability, capacity, and skill to identify, assess, and manage the emotions of one's self, of others, and of groups.

==== Emulator (ITSQB) ====  

A device, computer program, or system that accepts the same inputs and produces the same outputs as a given system. [IEEE 610] See also simulator.

==== Endurance testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing whether the test item can sustain a specified required load for a continuous period of time.

==== Entry criteria (ITSQB) ====  

The set of generic and specific conditions for permitting a process to go forward with a defined task, e.g. test phase. The purpose of entry criteria is to prevent a task from starting which would entail more (wasted) effort compared to the effort needed to remove the failed entry criteria. [Gilb and Graham] 

==== Entry criteria (ISO 29119) ====

The set of generic and specific conditions for permitting a process to go forward with a defined task, e.g. test phase.

==== Equivalence class (ISO 29119) ====

See [[:general:glossary#equivalence partitioning|Equivalence Partitioning]]

==== Entry point (ITSQB) ====  

An executable statement or process step which defines a point at which a given process is intended to begin.

==== Equivalence class (ITSQB) ====  

See equivalence partition. 

==== Equivalence class coverage (ISO 29119) ====

See [[:general:glossary#equivalence partition coverage|Equivalence Partition Coverage]]

==== Equivalence partition (ITSQB) ====

A portion of an input or output domain for which the behavior of a component or system is assumed to be the same, based on the specification.

==== Equivalence partition (ISO 29119) ====

A partition of the inputs or outputs (i.e. parameters) of the test item, such that all the values in the partition can reasonably be expected to be treated similarly (i.e. they may be considered "equivalent"). Equivalence partitions are typically derived for both valid and invalid input and output data (i.e. an invalid input value would be rejected by the test item, and an invalid output value should never be generated).

==== Equivalence partitioning (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute representative values from equivalence partitions, i.e. portions of an input or output domain for which the behavior of a component or system is assumed to be the same, based on the specification.

==== Equivalence partitioning (ITSQB) ====  

A black box test design technique in which test cases are designed to execute representatives from equivalence partitions. In principle test cases are designed to cover each partition at least once.

==== Equivalence partition coverage (ITSQB) ====  

The percentage of equivalence partitions that have been exercised by a test suite. 

==== Equivalence partition coverage (ISO 29119) ====

Percentage of equivalence partitions that have been executed by testing.

==== Error (ITSQB) ====  

A human action that produces an incorrect result. [After IEEE 610] 


==== Error (ISO 29119) ====

A human action that produces an incorrect result.  [IEEE 610.12-1990]

==== Error guessing (ISO 29119) ====

A test design technique where the experience of the tester is used to anticipate what defects might be present in the component or system under test as a result of errors made, and to design tests specifically to expose them. [BS 7925-1]

==== Error guessing (ITSQB) ====  

A test design technique where the experience of the tester is used to anticipate what defects might be present in the component or system under test as a result of errors made, and to design tests specifically to expose them. 

==== Error seeding (ITSQB) ====  

See fault seeding. 

==== Error seeding tool (ITSQB) ====

See fault seeding tool.

==== Error tolerance (ITSQB) ====  

The ability of a system or component to continue normal operation despite the presence of erroneous inputs. [After IEEE 610].

==== Establishing (IDEAL) (ITSQB) ====

The phase within the IDEAL model where the specifics of how an organization will reach its destination are planned. The establishing phase consists of the activities: set priorities, develop approach and plan actions. 

See also IDEAL.

==== Evaluation (ITSQB) ====

See testing 

==== Exception handling (ITSQB) ====  

Behavior of a component or system in response to erroneous input, from either a human user or from another component or system, or to an internal failure. 

==== Executable statement (ITSQB) ==== ===== A ===== statement which, when compiled, is translated into object code, and which will be executed procedurally when the program is running and may perform an action on data. 

==== Exercised (ITSQB) ====  

A program element is said to be exercised by a test case when the input value causes the execution of that element, such as a statement, decision, or other structural element.  

==== Exhaustive testing (ITSQB) ==== 

A test approach in which the test suite comprises all combinations of input values and preconditions. 

==== Exit criteria (ITSQB) ====

The set of generic and specific conditions, agreed upon with the stakeholders, for permitting a process to be officially completed. The purpose of exit criteria is to prevent a task from being considered completed when there are still outstanding parts of the task which have not been finished. Exit criteria are used to report against and to plan when to stop testing. [After Gilb and Graham] 

==== Exit criteria (ISO 29119) ====

The set of generic and specific conditions, agreed upon with the stakeholders, for permitting a process to be officially completed.

==== Exit point (ITSQB) ====  

An executable statement or process step which defines a point at which a given process is intended to cease.

==== Expected outcome (ITSQB) ====  

See expected result. 

==== Expected outcome (ISO 29119) ====

The behavior predicted by the specification, or another source, of the component or system under specified conditions. 

==== Expected result (ITSQB) ====  

The behavior predicted by the specification, or another source, of the component or system under specified conditions. 

==== Experience-based technique (ITSQB) ====  

See experience-based test design technique. 

==== Experience-based test design technique (ITSQB) ====

Procedure to derive and/or select test cases based on the tester’s experience, knowledge and intuition. 

==== Experience-based testing (ISO 29119) ====

A class of test design techniques where the experience of the tester is used to anticipate what defects might be present in the test item as a result of errors made, and to design tests specifically to expose them.

==== Exploratory testing (ISO 29119) ====

A testing approach where the tester actively controls the design of the tests as those tests are performed and uses information gained while testing to design new and better tests.

==== Exploratory testing (ITSQB) ==== 

An informal test design technique where the tester actively controls the design of the tests as those tests are performed and uses information gained while testing to design new and better tests. [After Bach] 

==== Extreme programming (ITSQB) ====  

A software engineering methodology used within agile software development whereby core practices are programming in pairs, doing extensive code review, ==== unit testing (ITSQB) ==== of all code, and simplicity and clarity in code. See also agile software development. 

===== F =====

==== Fail (ITSQB) ====  

A test is deemed to fail if its actual result does not match its expected result. 

==== Failure (ITSQB) ====  

Deviation of the component or system from its expected delivery, service or result. 
[After Fenton] 

==== Failure (ISO 29119) ====

A deviation of the component or system from its expected delivery, service or result.

==== Failure mode (ITSQB) ====  

The physical or functional manifestation of a failure. For example, a system in 
Failure mode may be characterized by slow operation, incorrect outputs, or complete termination of execution. [IEEE 610] 

==== Failure Mode and Effect Analysis (FMEA) (ITSQB) ====  

A systematic approach to risk identification and analysis of identifying possible modes of failure and attempting to prevent their occurrence. 

See also Failure Mode, Effect and Criticality Analysis (FMECA). 

==== Failure Mode, Effects, and Criticality Analysis (FMECA) (ITSQB) ====  

An extension of FMEA, as in addition to the basic FMEA, it includes a criticality analysis, which is used to chart the probability of failure modes against the severity of their consequences. The result highlights failure modes with relatively high probability and severity of consequences, allowing remedial effort to be directed where it will produce the greatest value. 

See also Failure Mode and Effect Analysis (FMEA). 

==== Failure rate (ITSQB) ====

The ratio of the number of failures of a given category to a given unit of measure, e.g. failures per unit of time, failures per number of transactions, failures per number of computer runs. [IEEE 610]

==== False-fail result (ITSQB) ====  

A test result in which a defect is reported although no such defect actually exists in the test object. 

=== False-pass result (ITSQB) ====  

A test result which fails to identify the presence of a defect that is actually present in the test object. 

==== False-positive result (ITSQB) ====  

See false-fail result. 

==== False-negative result (ITSQB) ====  

See false-pass result. 

Fault: See defect. 

==== Fault (ISO 29119) ====

See [[:general:glossary#defect|Defect]]

==== Fault attack (ITSQB) ====  

See attack.

==== Fault density (ITSQB) ====  

See defect density. 

==== Fault Detection Percentage (FDP) (ITSQB) ====  

See Defect Detection Percentage (DDP).

==== Fault masking (ITSQB) ====  

See defect masking.

==== Fault seeding (ITSQB) ====

The process of intentionally adding known defects to those already in the component or system for the purpose of monitoring the rate of detection and removal, and estimating the number of remaining defects. [IEEE 610] 

==== Fault seeding tool (ITSQB) ====  

A tool for seeding (i.e. intentionally inserting) faults in a component or `system. 

==== Fault tolerance (ITSQB) ====  

The capability of the software product to maintain a specified level of performance in cases of software faults (defects) or of infringement of its specified interface. [ISO 9126] 

See also reliability, robustness.

==== Fault Tree Analysis (FTA) (ITSQB) ====

A technique used to analyze the causes of faults (defects). The technique visually models how logical relationships between failures, human errors, and external events can combine to cause specific faults to disclose.

==== Feasible path (ITSQB) ====  

A path for which a set of input values and preconditions exists which causes it to be executed. 

==== Feature (ITSQB) ====

An attribute of a component or system specified or implied by requirements documentation (for example reliability, usability or design constraints). [After IEEE 1008] 

==== Feature set (ISO 29119) ====

A collection of related features to be tested. A feature set may be treated independently of other feature sets in the subsequent test design activities and tasks. The feature sets for a test constitute the test architecture; the test architecture may be similar to the architecture of the test item(s), or it may be different if this facilitates a more efficient test. 

==== Field-testing (ITSQB) ==== 

See beta testing 

==== Financial Management of IT Services (ITIL) ====

It is aimed at helping an IT service provider in effectively managing its budgeting, accounting and charging requirements. The ITIL Financial Management has the following sub-processes: ‘Financial Management Support’; ‘Financial Planning’; ‘Financial Analysis and Reporting’; and ‘Service Invoicing’. 

==== Finite state machine (ITSQB) ==== 

A computational model consisting of a finite number of states and transitions between those states, possibly with accompanying actions. [IEEE 610] 

==== Finite state testing (ITSQB) ==== 

See state transition testing

==== Finite state testing (ISO 29119) ====

See [[:general:glossary#state transition testing|State Transition Testing]]

==== Fishbone diagram (ITSQB) ====

See cause-effect diagram.

==== Formal review (ITSQB) ====

A review characterized by documented procedures and requirements, e.g. inspection. 

==== Frozen test basis (ITSQB) ====  

A test basis document that can only be amended by a formal change control process. 

See also baseline.

==== Function Point Analysis (FPA) (ITSQB) ====  

Method aiming to measure the size of the functionality of an information system. The measurement is independent of the technology. This measurement may be used as a basis for the measurement of productivity, the estimation of the needed resources, and project control. 

==== Functional integration (ITSQB) ====  

An integration approach that combines the components or systems for the purpose of getting a basic functionality working early. ==== See also integration testing (ITSQB) ==== 

==== Functional requirement (ITSQB) ====  

A requirement that specifies a function that a component or system must perform. [IEEE 610]  

==== Functional requirement (ISO 29119) ====

A requirement that specifies a function that a system or system component must be able to perform. Typically needs to be supplemented by corresponding non-functional requirements, such as performance, usability, security and availability.

==== Functional test design technique (ITSQB) ====  

Procedure to derive and/or select test cases based on an analysis of the specification of the functionality of a component or system without reference to its internal structure. See also black box test design technique. 

====Functional testing (ITSQB) ==== 

Testing based on an analysis of the specification of the functionality of a component or system. 

See also black box testing 

==== Functional testing (ISO 29119) ====

1. Testing to determine the degree to which the product provides functions that meet stated and implied needs when the product is used under specified conditions. [based on 25010] 
2. Testing that ignores the internal mechanism of a system or component and focuses solely on the outputs generated in response to selected inputs and execution conditions.
3. Testing conducted to evaluate the compliance of a system or component with specified functional requirements. [ISO/IEC 24765]

===== G =====

==== Glass box testing (ITSQB) ==== 

See white box testing 

==== Glass box testing (ISO 29119) ====

See [[:general:glossary#structure-based testing|Structure-based Testing]]

==== Global ALM Community ====

The collection of communities across the globe that work on Software Process Improvements using the Global SPII.

==== Goal Question Metric (ITSQB) ====  

An approach to software measurement using a three-level model: 

Conceptual level (goal), operational level (question) and quantitative level (metric). 
GQM

See Goal Question Metric. 

===== H =====

==== Hazard analysis (ITSQB) ==== ===== A ===== technique used to characterize the elements of risk. The result of a hazard analysis will drive the methods used for ==== development and testing (ITSQB) ==== of a system. See also risk analysis. 

==== Heuristic evaluation (ITSQB) ====  

A static usability test technique to determine the compliance of a user interface with recognized usability principles (the so-called “heuristics”). 


==== High-level test case (ITSQB) ====  

A test case without concrete (implementation level) values for input data and expected results. Logical operators are used; instances of the actual values are not yet defined and/or available. See also low-level test case. 

==== High-level test case (ISO 29119) ====

A test case without concrete (implementation level) values for input data and expected results. Logical operators are used; instances of the actual values are not yet defined and/or available. 

==== Horizontal traceability (ITSQB) ====  

The tracing of requirements for a test level through the layers of test documentation (e.g. test plan, test design specification, test case specification and test procedure specification or test script). 

==== Horizontal traceability (ISO 29119) ====

The tracing of requirements for a test level through the layers of test documentation (e.g. test plan, test design specification, test case specification and test procedure specification or test script).

==== Hyperlink (ITSQB) ====

A pointer within a web page that leads to other web pages. 

==== Hyperlink test tool (ITSQB) ==== 

A tool used to check that no broken hyperlinks are present on a web site. 

===== I =====

==== IDEAL (ITSQB) ====

An organizational improvement model that serves as a roadmap for initiating, planning, and implementing improvement actions. The IDEAL model is named for the five phases it describes: initiating, diagnosing, establishing, acting, and learning 

==== Impact analysis (ITSQB) ====  

The assessment of change to the layers of development documentation, test documentation and components, in order to implement a given change to specified requirements. 

==== Improvement Proposal ====

« TODO » 

==== Incident (ISO 29119) ====

An event occurring during the use of a software work product or software system that requires investigation.
NOTE: Incidents may be found during, but not limited to analysis, reviewing, testing, compilation, or use of software products or applicable documentation.

==== Incident (ITSQB) ====  

Any event occurring that requires investigation. [After IEEE 1008] 

==== Incident logging (ITSQB) ====

Recording the details of any incident that occurred, e.g. during testing 

==== Incident management (ITSQB) ====  

The process of recognizing, investigating, taking action and disposing of incidents. It involves logging incidents, classifying them and identifying the impact. [After IEEE 1044]  


==== Incident management tool (ITSQB) ====  

A tool that facilitates the recording and status tracking of Incidents. They often have workflow-oriented facilities to track and control the allocation, ==== correction and re-testing (ITSQB) ==== of incidents and provide reporting facilities. 

See also defect management tool. 

==== Incident report (ITSQB) ====  

A document reporting on any event that occurred, e.g. during the testing which requires investigation. [After IEEE 829]

==== Incident report (ISO 29119) ====

A report that documents any event that occurs during the testing process that requires investigation. This report may be called a problem, test incident, defect, trouble, issue, anomaly, bug or error report. The contents of an incident report may be defined elsewhere in an organization, for example as part of the definition of the Configuration Management Processes, in which case that definition should be used.

NOTE: The information given here is only the information needed when an incident report is first raised. More information may be added to the incident report as it is passing through the related change control process.

==== Incremental development model (ITSQB) ====  

A development lifecycle where a project is broken into a series of increments, each of which delivers a portion of the functionality in the overall project requirements. The requirements are prioritized and delivered in priority order in the appropriate increment. In some (but not all) versions of this lifecycle model, each subproject follows a ‘mini V-model’ with its own design, coding and testing phases. 

==== Incremental testing (ITSQB) ==== Testing where components or systems are integrated and tested one or some at a time, until all the components or systems are integrated and tested. 

==== Independence of testing (ITSQB) ====  Separation of responsibilities, which encourages the accomplishment of ==== objective testing (ITSQB) ==== [After DO-178b]

==== Indicator (ITSQB) ====  

A measure that can be used to estimate or predict another measure. [ISO 14598]

==== Infeasible path (ITSQB) ====  

A path that cannot be exercised by any set of possible input values. 

==== Informal review (ITSQB) ====   

A review not based on a formal (documented) procedure. 

==== Initiating (IDEAL) (ITSQB) ====

The phase within the IDEAL model where the groundwork is laid for a successful improvement effort. The initiating phase consists of the activities: set context, build sponsorship and charter infrastructure. 

See also IDEAL. 

==== Input (ITSQB) ====   

A variable (whether stored within a component or outside) that is read by a component. 

==== Input domain (ITSQB) ====

The set from which valid input values can be selected. See also domain.

Input value: An instance of an input. 

See also input.

==== Inspection (ITSQB) ====  

A type of peer review that relies on visual examination of documents to detect defects, e.g. violations of development standards and non-conformance to higher level documentation. The most formal review technique and therefore always based on a documented procedure. [After IEEE 610, IEEE 1028] 

See also peer review.

==== Inspection leader (ITSQB) ====  

See moderator. 

==== Inspector: (ITSQB) ====

See reviewer.

==== Install ability (ITSQB) ====   

The capability of the software product to be installed in a specified environment [ISO 9126]. 

See also portability.

==== Install ability testing (ITSQB) ==== 

The process of testing the install ability of a software product. 

==== See also portability testing (ITSQB) ====. 

==== Installation guide (ITSQB) ====  

Supplied instructions on any suitable media, which guides the installer through the installation process. This may be a manual guide, step-by-step procedure, Installation wizard, or any other similar process description. 

==== Installation wizard (ITSQB) ====  

Supplied software on any suitable media, which leads the installer through the installation process. It normally runs the installation process, provides feedback on installation results, and prompts for options.  

==== Institute of Electrical and Electronics Engineers (IEEE) (ITSQB) ====

It is a non-profit association that is dedicated to advancing technological innovation and excellence. IEEE is one of the leading standards making organizations and its standards relate to a broad range of industries such as, power and energy, Information Technology, biomedical and healthcare, transportation, nanotechnology, telecommunications and information assurance. 

==== Instrumentation (ITSQB) ====  

The insertion of additional code into the program in order to collect information about program behavior during execution, e.g. for measuring code coverage. 

==== Instrumented (ITSQB) ====  

A software tool used to carry out instrumentation. 

==== Inspection (ISO 29119) ====

1. A type of peer review that relies on visual examination of documents to detect defects, e.g. violations of development standards and non-conformance to higher-level documentation. The most formal review technique and therefore always based on a documented procedure. 

[After IEEE 610, IEEE 1028] 

See also [[:general:glossary#peer review|Peer Review]]

2. Group review quality improvement process for written material, consisting of two aspects: product 
(Document itself) improvement and process improvement (of both document production and inspection) 

[BS 7925]

3. A visual examination of a software product to detect and identify software anomalies, including errors and deviations from standards and specifications [IEEE 1028-2008 IEEE Standard for Software Reviews] 

4. A static analysis technique that relies on visual examination of development products to detect errors, violations of development standards, and other problems. [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

Note: Inspections are peer examinations led by impartial facilitators who are trained in inspection techniques. Determination of remedial or investigative action for an anomaly is a mandatory element of a software inspection, although the solution should not be determined in the inspection meeting. Types include code inspection; design inspection.

==== Install ability testing (ISO 29119) ====

Tests aimed at the installation process (as described in the installation manual or guidelines), the people who will carry out the installation, the target platform(s) and the test item(s) to be installed.

==== Intake test (ITSQB) ====  

A special instance of a smoke test to decide if the component or system is ready for detailed and ==== further testing (ITSQB) ==== An intake test is typically carried out at the start of the test 
execution phase. 

See also smoke test.

==== Integration (ITSQB) ====  

The process of combining components or systems into larger assemblies. 

==== Integration testing (ITSQB) ====  

Testing performed to expose defects in the interfaces and in the interactions between integrated components or systems. 

See also component integration testing, system integration testing.

==== Integration testing (ISO 29119) ====

Testing performed to expose defects in the interfaces and in the interactions between integrated components or systems.

==== Interface testing (ISO 29119) ====

(1) An integration test type that is concerned with testing the interfaces between components or systems.
(2) Integration testing where the interfaces between system components are tested. 
[BS 7925] 
(3) Testing conducted to evaluate whether systems or components pass data and control correctly to one another [ISO/IEC 24765, Systems and Software Engineering Vocabulary]. 

See also [[:general:glossary#component testing, integration testing, system testing, unit test|Component Testing, Integration Testing, System Testing, Unit Test]]

==== Interface testing (ITSQB) ==== 

An integration test type that is concerned with testing the interfaces between components or systems. 

==== International Organization for Standardization (ISO) 9000 standards ====

The ISO 9000 family of standards pertain to quality management systems and they are designed in order to help the organizations ensure that they meet the needs of customers and other stakeholders. 

==== Interoperability (ITSQB) ====  

The capability of the software product to interact with one or more specified components or systems. [After ISO 9126] See also functionality.

==== Interoperability testing (ISO 29119) ====

Testing to determine the interoperability of a software product.

==== Interoperability testing (ITSQB) ====  

The process of testing to determine the interoperability of a software product. See also functionality testing. 

==== Interoperability testing (ITSQB) ====  

The process of testing to determine the interoperability of a software product. See also functionality testing. 

==== Invalid testing (ITSQB) ==== 

Testing using input values that should be rejected by the component or system. See also error tolerance, ==== negative testing (ITSQB) ==== 

==== IP ====

See Improvement Proposal 

==== Ishikawa diagram (ITSQB) ====  

See cause-effect diagram. 

==== ISO  ====

See International Organization for Standardization 

==== Isolation testing (ITSQB) ==== 

Testing of individual components in isolation from surrounding components, with surrounding components being simulated by stubs and drivers, if needed. 

==== Item transmittal report (ITSQB) ====  

See release note. 

==== Iterative development model (ITSQB) ====  

A development lifecycle where a project is broken into a usually large number of iterations. Iteration is a complete development loop resulting in a release (internal or external) of an executable product, a subset of the final product under development, which grows from iteration to iteration to become the final product. 

==== Iterative Software Development Process (as in RUP) ====

It is a software development process that prescribes the development of initially small but ever-larger portions of a software project for helping those who are involved in the discovery of important issues early before the problems or faulty assumptions can lead to disaster. It commences with an initial planning stage and it ends with the deployment of the cyclic interactions in between the stages. 

==== IT Service Management (ITSM) ====

It is a discipline for managing the Information Technology systems that are based on the customer's perspective of the contribution of IT to business. ITSM is process-focused and it thus it is aligned with the process improvement frameworks (such as, TQM, Six Sigma, business process management, CMMI). 

==== ITSM ====

See IT Service Management 

===== K =====

==== Key performance indicator (ITSQB) ====

See performance indicator. 

==== Keyword driven testing (ITSQB) ====

A scripting technique that uses data files to contain not only test data and expected results, but also keywords related to the application being tested. The keywords are interpreted by special supporting scripts that are called by the control script for the test. See also data driven testing. 

===== L =====

==== LCSAJ (ITSQB) ==== 

A Linear Code Sequence and Jump, consists of the following three items (conventionally identified by line numbers in a source code listing): the start of the linear sequence of executable statements, the end of the linear sequence, and the target line to which control flow is transferred at the end of the linear sequence. 

==== LCSAJ coverage (ITSQB) ==== 

The percentage of LCSAJs of a component that have been exercised by a test suite. 100% LCSAJ coverage implies 100% decision coverage. 

==== LCSAJ testing (ITSQB) ==== 

A white box test design technique in which test cases are designed to execute LCSAJs. 

==== Lead assessor (ITSQB) ==== 

The person who leads an assessment. In some cases, for instance CMMi and 
TMMi when formal assessments are conducted, the lead-assessor must be accredited and formally trained. 

==== Learn ability (ITSQB) ==== 

The capability of the software product to enable the user to learn its application. 
[ISO 9126] See also usability. 

==== Learning (IDEAL) (ITSQB) ==== 

The phase within the IDEAL model where one learns from experiences and improves one’s ability to adopt new processes and technologies in the future. The Learning phase consists of the activities: analyze and validate, and propose future actions. 

See also IDEAL.

==== Level test plan (ITSQB) ====

A test plan that typically addresses one test level. 

See also test plan. 

==== Level test plan (ISO 29119) ====

A test plan that specifically addresses one test level. 

See also [[:general:glossary#test plan|Test Plan]]

==== Lifecycle model (ITSQB) ==== 

A partitioning of the life of a product or project into phases. 

==== [CMMI] ==== 

See also software lifecycle.

==== Link testing (ITSQB) ==== 

See component integration testing. 

==== Load profile (ITSQB) ==== 

A specification of the activity which a component or system being tested may experience in production. A load profile consists of a designated number of virtual users who process a defined set of transactions in a specified time period and according to a predefined operational profile. 

See also operational profile.

==== Load testing (ITSQB) ==== 

A type of performance testing conducted to evaluate the behavior of a component or system with increasing load, e.g. numbers of parallel users and/or numbers of transactions, to determine what load can be handled by the component or system. 

See also performance testing, stress testing.

==== Load testing (ISO 29119) ====

A sub-category of performance testing where testing is aimed at assessing the performance of the system when it is placed under specifically increasing loads, usually from low usage conditions, through to typical and peak load conditions.

==== Logic-coverage testing (ITSQB) ====

See white box testing. [Myers] 
Logic-driven testing: 

See white box testing. 

==== Logical test case (ITSQB) ====

See high-level test case. 

==== Low level test case (ITSQB) ====

A test case with concrete (implementation level) values for input data and expected results. Logical operators from high-level test cases are replaced by actual values that correspond to the objectives of the logical operators. See also high-level test case.

===== M =====


==== Maintainability (ITSQB) ==== The ease with which a software product can be modified to correct defects, modified to meet new requirements, modified to make future maintenance easier, or adapted to a changed environment. [ISO 9126] 

==== Maintainability testing (ITSQB) ====

The process of testing to determine the maintainability of a software product. 
Maintenance: Modification of a software product after delivery to correct defects, to improve performance or other attributes, or to adapt the product to a modified environment. [IEEE 1219] 

==== Maintenance testing (ITSQB) ====

Testing the changes to an operational system or the impact of a changed environment to an operational system. 

==== Maintainability testing (ISO 29119) ====

Testing to determine the degree of effectiveness and efficiency with which the product can be modified.

==== Maintenance testing (ISO 29119) ====

Testing the changes to an operational system or the impact of a changed environment to an operational System

==== Management review (ITSQB) ====

A systematic evaluation of software acquisition, supply, development, operation, or maintenance process, performed by or on behalf of management that monitors progress, determines the status of plans and schedules, confirms requirements and their system allocation, or evaluates the effectiveness of management approaches to achieve fitness for purpose. [After IEEE 610, IEEE 1028] 

==== Manufacturing-based quality (ITSQB) ====

A view of quality, whereby quality is measured by the degree to which a product or service conforms to its intended design and requirements. Quality arises from the rocess(es)  used. [After Garvin] See also product-based quality, transcendent-based quality, user-based quality, value-based quality. 

==== Master test plan (ITSQB) ====

A test plan that typically addresses multiple test levels. 

See also test plan.

==== Maturity (ITSQB) ====

(1) The capability of an organization with respect to the effectiveness and efficiency of its processes and work practices. See also Capability Maturity Model, Test 
Maturity Model. 
(2) The capability of the software product to avoid failure as a result of defects in the software. [ISO 9126] 

See also reliability. 

==== Maturity level (ITSQB) ==== Degree of process improvement across a predefined set of process areas in which all goals in the set are attained. [TMMi] 

==== Maturity model (ITSQB) ====

A structured collection of elements that describe certain aspects of maturity in an organization, and aid in the definition and understanding of an organization's processes. A maturity model often provides a common language, shared vision and framework for prioritizing improvement actions. 

==== Mean Time between Failures (ITSQB) ====

The arithmetic mean (average) time between failures of a system. The MTBF is typically part of a reliability growth model that assumes the failed system is immediately repaired, as a part of a defect fixing process. 

See also reliability growth model. 

==== Mean Time To Repair (ITSQB) ====

The arithmetic mean (average) time a system will take to recover from any failure. This typically includes testing to insure that the defect has been resolved.

==== Measure (ITSQB) ==== The number or category assigned to an attribute of an entity by making a measurement. [ISO 14598] 

==== Measurement (ITSQB) ====

The process of assigning a number or category to an entity to describe an attribute of that entity. [ISO 14598] 

==== Measurement scale (ITSQB) ====

A scale that constrains the type of data analysis that can be performed on it. [ISO 14598] 

==== Memory leak (ITSQB) ==== A memory access failure due to a defect in a program's dynamic store allocation logic that causes it to fail to release memory after it has finished using it, eventually causing the program and/or other concurrent processes to fail due to lack of memory. 

==== Memory management testing (ISO 29119) ====

Testing aimed at determining the amount (normally maximum) of memory to be used (e.g. hard disk memory, RAM and ROM) and/or defined levels of memory leakage under specific operating conditions.

==== Management Steering Group (PII) (ISO 29119) ====

« TODO » 

==== Metric (ISO 29119) ====

A measurement scale and the method used for measurement. [ISO 14598].

Modified condition decision coverage percentage of all branch condition outcomes that independently affect a decision outcome that have been exercised by testing. [BS 7925-1]

Modified condition decision testing test case design technique in which test cases are designed to execute branch condition outcomes that independently affect a decision outcome. [BS 7925-1]

==== Metric (ITSQB) ==== 

A measurement scale and the method used for measurement. [ISO 14598]

==== Migration testing (ITSQB) ====

See conversion testing. 

==== Milestone (ITSQB) ====

A point in time in a project at which defined (intermediate) deliverables and results should be ready. 

==== Mind-map (ITSQB) ==== A diagram used to represent words, ideas, tasks, or other items linked to and arranged around a central key word or idea. Mind maps are used to generate, visualize, structure, classify ideas, and as an aid in study, organization, problem solving, decision making, and writing. 

==== Mistake (ITSQB) ====

See error. 

==== Modeling tool (ITSQB) ====

A tool that supports the creation, amendment and verification of models of the software or system [Graham]. 

Moderator: The leader and main person responsible for an inspection or other review process. 

==== Modified condition decision coverage (ITSQB) ====

See condition determination coverage.

==== Modified condition decision testing (ITSQB) ====

See condition determination testing. 

==== Modified multiple condition coverage (ITSQB) ====

See condition determination coverage. 

==== Modified multiple condition testing (ITSQB) ====

See condition determination testing.

==== Module (ITSQB) ====

See component. 

==== Module testing (ITSQB) ====

See component testing. 

==== Module testing (ISO 29119) ====

See [[:general:glossary#component testing|Component Testing]]

==== Monitor (ITSQB) ====

A software tool or hardware device that runs concurrently with the component or system under test and supervises, records and/or analyses the behavior of the component or system. [After IEEE 610] 

==== Monitoring tool (ITSQB) ====

See monitor. 

==== Monkey testing (ITSQB) ====

Testing by means of a random selection from a large range of inputs and by randomly pushing buttons, ignorant of how the product is being used. 

==== MSG ====

See Management Steering Group 

==== MTBF (ITSQB) ==== 

See Mean Time Between Failures. 

==== MTTR (ITSQB) ==== 

See Mean Time To Repair. 

==== Multiple conditions (ITSQB) ==== 

See compound condition. 

==== Multiple condition coverage (ITSQB) ==== 

The percentage of combinations of all single condition outcomes within one statement that have been exercised by a test suite. 100% multiple condition coverage implies 100% condition determination coverage. 

==== Multiple condition coverage (ISO 29119) ====

Percentage of combinations of all single condition outcomes within one statement that have been exercised by a test procedure.  

==== Multiple condition testing (ITSQB) ==== 

A white box test design technique in which test cases are designed to execute combinations of single condition outcomes (within one statement). 

==== Multiple condition testing (ISO 29119) ====

A test design technique in which test cases are designed to execute combinations of condition outcomes within a decision.

==== Mutation analysis (ITSQB) ==== 

A method to determine test suite thoroughness by measuring the extent to which a test suite can discriminate the program from slight variants (mutants) of the program. 

==== Mutation testing (ITSQB) ==== 

See back-to-back testing. 

===== N =====

==== N-switch coverage (ITSQB) ====

The percentage of sequences of N+1 transitions that have been exercised by a test suite. [Chow]

==== N-switch testing (ITSQB) ====

A form of state transition testing in which test cases are designed to execute all valid sequences of N+1 transitions. [Chow] 

See also state transition testing.

==== Negative testing (ITSQB) ====

Tests aimed at showing that a component or system does not work. Negative testing is related to the testers’ attitude rather than a specific test approach or test design technique, e.g. testing with invalid input values or exceptions. [After Beizer].

==== Negative testing (ISO 29119) ====

Attitude rather than a specific test approach or test design technique, e.g. testing with invalid input values or exceptions. [After Beizer].

==== Non-conformity (ITSQB) ====

Non-fulfillment of a specified requirement. [ISO 9000] 

==== Non-functional requirement (ITSQB) ==== A requirement that does not relate to functionality, but to attributes such as reliability, efficiency, usability, maintainability and portability. 

==== Non-functional test design technique (ITSQB) ==== Procedure to derive and/or select test cases for non-functional testing based on an analysis of the specification of a component or system without reference to its internal structure. See also black box test design technique. 

==== Non-functional testing (ITSQB) ====

Testing the attributes of a component or system that do not relate to functionality, e.g. reliability, efficiency, usability, maintainability and portability. 

==== Non-functional testing (ISO 29119) ====

Testing the attributes of a component or system that do not relate to functionality.
NOTE e.g. reliability, efficiency, usability, maintainability and portability.

===== O =====

==== Off-the-shelf software (ITSQB) ====

A software product that is developed for the general market, i.e. for a large number of customers, and that is delivered to many customers in identical format. 

==== Operability (ITSQB) ====

The capability of the software product to enable the user to operate and control it. 
[ISO 9126] See also usability. 

==== Operability (ISO 29119) ====

The capability of the software product to enable the user to operate and control it. [ISO 9126] 

See also [[:general:glossary#usability|Usability]]

==== Operational acceptance testing (ISO 29119) ====

Operational testing in the acceptance test phase typically performed in a simulated real-life operational environment by operator and/or administrator focusing on operational aspects, e.g. recoverability, resource-behavior, install ability and technical compliance.

==== Operational acceptance testing (ITSQB) ==== 

Operational testing in the acceptance test phase, typically performed in a (simulated) operational environment by operations and/or systems administration staff focusing on operational aspects, e.g. recoverability, resource-behavior, install ability and technical compliance. See also operational testing. 

==== Operational environment (ITSQB) ====

Hardware and software products installed at users or customers’ sites where the component or system under test will be used. The software may include Operating systems, database management systems, and other applications. 

==== Operational profile (ITSQB) ==== 

The representation of a distinct set of tasks performed by the component or system, possibly based on user behavior when interacting with the component or system, and their probabilities of occurrence. A task is logical rather that physical and can 
be executed over several machines or be executed in non-contiguous time segments. 

==== Operational profile testing (ITSQB) ==== 

Statistical testing using a model of system operations (short duration tasks) and their probability of typical use. [Musa]

==== Organizational test specification (ISO 29119) ====

A document that provides information about testing for an organization, i.e. information that is not project dependent. The most common examples of organizational test specifications are Test Policy and Organizational Test Strategy. 

==== Operational testing (ITSQB) ==== 

Testing conducted to evaluate a component or system in its operational environment. [IEEE 610] 

==== Oracle (ITSQB) ====

See test oracle. 

==== Organizational Test Strategy (ISO 29119) ====

A document that is aligned with the test policy. The strategy is defined at an organizational level and applies to all testing within its scope.

==== Orthogonal array (ISO 29119) ====

A matrix with specific properties that can be used to identify a near optimal pair-wise set of test cases in combinatorial testing.

==== Orthogonal array (ITSQB) ====

A 2-dimensional array constructed with special mathematical properties, such that choosing any two columns in the array provides every pair combination of each number in the array. 

==== Orthogonal array testing (ITSQB) ====

A systematic way of testing all-pair combinations of variables using orthogonal arrays. It significantly reduces the number of all combinations of variables to test all pair combinations. 

See also pair wise testing. 

==== Outcome (ITSQB) ====

See result. 

==== Output (ITSQB) ====

A variable (whether stored within a component or outside) that is written by a component. 

==== Output domain (ITSQB) ====

The set from which valid output values can be selected. 

See also domain.

==== Output value (ITSQB) ====

An instance of an output. 

See also output.  

===== P =====

==== P-V Pair (ISO 29119) ====

The test conditions for all combinatorial testing techniques; the P-V pair corresponds to a chosen test item parameter taking on a specific value.

==== Pair programming (ITSQB) ====

A software development approach whereby lines of code (production and/or test) of a component are written by two programmers sitting at a single computer. This implicitly means ongoing real-time code reviews are performed.

==== Pair testing (ITSQB) ====

Two persons, e.g. two testers, a developer and a tester, or an end-user and a tester, working together to find defects. Typically, they share one computer and trade control of it while testing. 

==== Pair wise testing (ITSQB) ====

A black box test design technique in which test cases are designed to execute all possible discrete combinations of each pair of input parameters. See also orthogonal array testing. 

==== Pair-wise testing (ISO 29119) ====

A form of combinatorial testing in which the test coverage items are pairs of P-V pairs, where each P-V pair is for a different test item parameter.

==== Pareto analysis (ITSQB) ====

A statistical technique in decision making that is used for selection of a limited number of factors that produce significant overall effects. In terms of quality improvement, a large majority of problems (80%) are produced by a few key causes (20%).

==== Partition testing (ITSQB) ====

See equivalence partitioning. [Beizer]

==== Partition testing (ISO 29119) ====

Inputs within a partition are expected to exercise the same test coverage item (e.g. equivalence partitions, boundary values, decision outcomes, state transitions). Most test design techniques, both specification-based and structure-based, fall into the category of partition testing techniques. 

==== Pass (ITSQB) ====

A test is deemed to pass if its actual result matches its expected result. 

==== Pass/fail criteria (ITSQB) ====

Decision rules used to determine whether a test item (function) or feature has passed or failed a test. [IEEE 829] 

==== Pass/fail criteria (ISO 29119) ====

Decision rules used to determine whether a test item (function) or feature has passed or failed a test. [IEEE 829].

==== Path (ITSQB) ====

A sequence of events, e.g. executable statements, of a component or system from an entry point to an exit point. 

==== Path coverage (ITSQB) ====

The percentage of paths that have been exercised by a test suite. 100% path coverage implies 100% LCSAJ coverage. 

==== Path coverage (ISO 29119) ====

Percentage of paths in a component executed by testing. [BS 7925-1]

==== Path sensitizing (ITSQB) ====

Choosing a set of input values to force the execution of a given path. 

==== Path testing (ITSQB) ====

A white box test design technique in which test cases are designed to execute paths. 

==== Path testing (ISO 29119) ====

A structure-based test design technique in which test cases are designed to execute all or selected paths of a component.

==== Peer review (ITSQB) ==== 

A review of a software work product by colleagues of the producer of the product for the purpose of identifying defects and improvements. Examples are inspection, technical review and walkthrough. 

==== Performance (ITSQB) ====

The degree to which a system or component accomplishes its designated functions within given constraints regarding processing time and throughput rate. [After IEEE 610] See also efficiency. 

==== Performance indicator (ITSQB) ====

A high level metric of effectiveness and/or efficiency used to guide and control progressive development, e.g. lead-time slip for software development. [CMMI] 

==== Performance profiling (ITSQB) ====

Definition of user profiles in performance, load and/or stress testing. Profiles should reflect anticipated or actual usage based on an operational profile of a component or system, and hence the expected workload. See also load profile, operational profile. 

==== Performance testing (ITSQB) ====

The process of testing to determine the performance of a software product. See also efficiency testing.

==== Performance testing (ISO 29119) ====

This may include assessing the performance of the test item in terms of transactions per second, throughput per second, response times, round trip time and resource utilization levels.

==== Performance testing tool (ITSQB) ====

A tool to support performance testing that usually has two main facilities; load generation and test transaction measurement. Load generation can simulate either multiple users or high volumes of input data. During execution, response time measurements are taken from selected transactions and these are logged. Performance testing tools normally provide reports based on test logs and graphs of load against response times. 

==== Phase test plan (ITSQB) ====

A test plan that typically addresses one test phase. 

See also test plan.

==== PII ====

Process Improvement Infrastructure (PII) is all the infrastructure that allows organizations to efficiently improve their processes. It involves software tools, improvement processes, etc.






==== PII Admin ====

This is the person that is the functional owner of the PII and is responsible for the smooth operations of the improvement organisation.

[[TODO]]




==== PIT ====

See Process Improvement Team 

==== Pointer (ITSQB) ====

A data item that specifies the location of another data item; for example, a data item that specifies the address of the next employee record to be processed. [IEEE 610] 

==== Portability (ITSQB) ====

The ease with which the software product can be transferred from one hardware or software environment to another. [ISO 9126]

==== Portability testing (ITSQB) ====

The process of testing to determine the portability of a software product.

==== Portability testing (ISO 29119) ====

Testing to determine the degree to which a system or component can be effectively and efficiently transferred from one hardware, software or other operational or usage environment to another.

==== Post-execution comparison (ITSQB) ====

Comparison of actual and expected results, performed after the software has finished running. 

==== Post-project meeting (ITSQB) ====

See retrospective meeting. 

==== Precondition (ITSQB) ====

Environmental and state conditions that must be fulfilled before the component or system can be executed with a particular test or test procedure. 

==== Precondition (ISO 29119) ====

Environmental and state conditions that must be fulfilled before the component or system can be executed with a particular test or test procedure.

==== Probe effect (ITSQB) ====

The effect on the component or system by the measurement instrument when the component or system is being measured, e.g. by a performance testing tool or monitor. 
For example performance may be slightly worse when performance testing tools are being used.

==== Problem (ITSQB) ==== See defect.

==== Problem management (ITSQB) ====

See defect management. 

==== Problem report (ITSQB) ====

See defect report. 

==== Procedure testing (ITSQB) ====

Testing aimed at ensuring that the component or system can operate in conjunction with new or existing users’ business procedures or operational procedures. 

==== Procedure testing (ISO 29119) ====

Testing of procedural documentation written in the form of procedural instructions. These procedural instructions will normally come in the form of one of the following documents:
 User guide;
 Instruction manual;
 User reference manual.

==== Process (ITSQB) ====

A set of interrelated activities, which transform inputs into outputs. [ISO 12207] 
==== Process assessment (ITSQB) ==== A disciplined evaluation of an organization’s software processes against a reference model. [after ISO 15504]

==== Process cycle test (ITSQB) ====

A black box test design technique in which test cases are designed to execute business procedures and processes. [TMap] 

See also procedure testing. 

==== Process improvement (ITSQB) ====

A program of activities designed to improve the performance and maturity of the organization’s processes, and the result of such a program. [CMMI] 

==== Process Improvement Team (PII) ====

« TODO » 

Within this group following roles exist: 

PIT Member
PIT Lead

==== Process model (ITSQB) ====

A framework wherein processes of the same nature are classified into a overall model, e.g. a test improvement model. 

==== Product-based quality (ITSQB) ====

A view of quality, wherein quality is based on a well-defined set of quality attributes. These attributes must be measured in an objective and quantitative way. Differences in the quality of products of the same type can be traced back to the way the specific quality attributes have been implemented. [After Garvin] 

See also manufacturing-based quality, quality attribute, transcendent-based quality, user-based quality, value-based quality.

==== Product risk (ITSQB) ====

A risk directly related to the test object. 

See also risk. 

==== Production acceptance testing (ITSQB) ====

See operational acceptance testing. 

==== Production acceptance testing (ISO 29119) ====

See [[:general:glossary#operational acceptance testing|Operational Acceptance Testing]]

==== Program instrumenter (ITSQB) ====

See instrumenter.

==== Program testing (ITSQB) ====

See component testing. 

==== Project (ITSQB) ====

A project is a unique set of coordinated and controlled activities with start and finish dates undertaken to achieve an objective conforming to specific requirements, including the constraints of time, cost and resources. [ISO 9000] 

==== Project Brief (PRINCE2) ====

It is a description and an outline for what the project is attempting to achieve and the business justifications behind a project implementation 

==== Project Initiation Documentation (PRINCE2) ====

It bundles the information that was acquired throughout the Starting up a Project and Initiating a Project processes in a PRINCE2 controlled project environment. The Project Initiation Document, or PID, is a PRINCE2 term that means the plan of the overall approach in project management. 

==== Project retrospective (ITSQB) ====

A structured way to capture lessons learned and to create specific action plans for improving on the nextproject or nextproject phase. 

==== Project risk (ITSQB) ====

A risk related to management and control of the (test) project, e.g. lack of staffing, strict deadlines, changing requirements, etc. 

See also risk. 

==== Project test plan (ITSQB) ====
See master test plan.

==== Pseudo-random (ITSQB) ====

A series which appears to be random but is in fact generated according to some prearranged sequence. 

===== Q =====

==== Qualification (ITSQB) ====

The process of demonstrating the ability to fulfill specified requirements. Note the term ‘qualified’ is used to designate the corresponding status. [ISO 9000] 

==== Quality (ITSQB) ====

The degree to which a component, system or process meets specified requirements and/or user/customer needs and expectations. [After IEEE 610] 

==== Quality assurance (ITSQB) ====

Part of quality management focused on providing confidence that quality requirements will be fulfilled. [ISO 9000] 

==== Quality assurance (ISO 29119) ====

Part of quality management focused on providing confidence that quality requirements will be fulfilled. [ISO 9000].

==== Quality attribute (ITSQB) ====

A feature or characteristic that affects an item’s quality. [IEEE 610] 

==== Quality characteristic (ITSQB) ====

See quality attribute. 

==== Quality control (ISO 29119) ====
A set of activities designed to evaluate the quality of developed or manufactured products. [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

==== Quality gate (ITSQB) ====

A special milestone in a project. Quality gates are located between those phases of a project strongly depending on the outcome of a previous phase. A quality gate includes a formal check of the documents of the previous phase. 

==== Quality management (ITSQB) ====

Coordinated activities to direct and control an organization with regard to quality. Direction and control with regard to quality generally includes the establishment of the quality policy and quality objectives, quality planning, quality control, quality assurance and quality improvement. [ISO 9000] 

==== Quality management (ISO 29119) ====

Coordinated activities to direct and control an organization with regard to quality [ISO/IEC TR 19759:2005 Software Engineering ² Guide to the Software Engineering Body of Knowledge (SWEBOK)].

===== R =====

==== Random testing (ITSQB) ==== 

A black box test design technique where test cases are selected, possibly using a pseudo-random generation algorithm, to match an operational profile. This technique can be used for testing non-functional attributes such as reliability and performance. 

==== Random testing (ISO 29119) ====

A specification-based test design technique where test cases are randomly selected from the input domain of the test item. Where available, the expected operational distribution of inputs may be used to generate the random inputs.

==== Rational Method Composer (RUP) ====

A flexible process management platform having a set of comprehensive tooling and rich process libraries to help the companies implement effective processes for successful software and IT projects. It features more than 100 selectable and customizable process guidance, (including RUP), for solving the common problems in business, management or software development. 

==== Rational Process Library (RUP) ====

It is a diverse collection of method content, guidance, templates, and processes having more than 100 selectable and customizable process best practices that can be applied to a large number of processes and domains. It offers a robust collection of best practices guidance for software and system development, management, and governance and it is included in IBM Rational Method Composer. 

==== Rational Unified Process (ITSQB) ==== 

A proprietary adaptable iterative software development process framework consisting of four project lifecycle phases: inception, elaboration, construction and transition. 

==== Real-Time ====

[todo]
Systems that use a time accuracy greater than 1mS. In general, operating systems use a time-slicing approach to scheduling processes of 20mS timeslots, so for real-time applications to work additional steps are required to make this happen.

==== Recorder (ITSQB) ====

See scribe. 

==== Record/playback tool (ITSQB) ====

See capture/playback tool. 

==== Recoverability (ITSQB) ====

The capability of the software product to re-establish a specified level of performance and recover the data directly affected in case of failure. [ISO 9126] 

See also reliability.

==== Recoverability testing (ITSQB) ====

The process of testing to determine the recoverability of a software product. See also reliability testing.

==== Recoverability testing (ISO 29119) ====

The process of testing to determine the recoverability of a software product. 

See also [[:general:glossary#reliability testing|Reliability Testing]]

==== Recovery testing (ITSQB) ====

See recoverability testing. 

==== Recovery testing (ISO 29119) ====

Testing that is concerned with the ability to recover a test item, its data, configuration and/or environment from a backup. It is also used to determine whether the backup and recovery procedures for the system are accurate. This type of testing may be carried out as part of a disaster recovery test.

==== Regression testing (ITSQB) ====

Testing of a previously tested program following modification to ensure that defects have not been introduced or uncovered in unchanged areas of the software, as a result of the changes made. It is performed when the software or its environment is changed. 

==== Regression testing (ISO 29119) ====

Selective retesting of a system or component to verify that modifications have not caused unintended effects and that the system or component still complies with its specified requirements. 

==== Regulation testing (ITSQB) ====

See compliance testing. 

==== Release note (ITSQB) ====

A document identifying test items, their configuration, current status and other delivery information delivered by development to testing, and possibly other stakeholders, at the start of a test execution phase. [After IEEE 829]

==== Reliability (ITSQB) ==== 

The ability of the software product to perform its required functions under stated conditions for a specified period of time, or for a specified number of operations. [ISO 9126] 

==== Reliability growth model (ITSQB) ====

A model that shows the growth in reliability over time during continuous testing of a component or system as a result of the removal of defects that result in reliability failures. 

==== Reliability testing (ITSQB) ====

The process of testing to determine the reliability of a software product.


==== Reliability testing (ISO 29119) ====

Testing to determine the degree to which a system or component performs specified functions under specified conditions for a specified period of time.

==== Replaceability (ITSQB) ==== The capability of the software product to be used in place of another specified software product for the same purpose in the same environment. [ISO 9126] 

See also portability requirement
==== Resource utilization testing (ISO 29119) ====

The process of testing to determine the resource-utilization of a software product.

==== Resource utilization testing (ITSQB) ==== 

The process of testing to determine the resource-utilization of a software product. See also efficiency testing.

==== Result (ITSQB) ====

The consequence/outcome of the execution of a test. It includes outputs to screens, changes to data, reports, and communication messages sent out. 

See also actual result, expected result. 

==== Resumption criteria (ITSQB) ====

The testing activities that must be repeated when testing is re-started after a suspension. [After IEEE 829] 

==== Resumption criteria (ISO 29119) ====

The testing activities that must be repeated when testing is re-started after a suspension. [After IEEE 829]

==== Re-testing (ITSQB) ====

Testing that runs test cases that failed the last time they were run, in order to verify the success of corrective actions. 

==== Retesting (ISO 29119) ====

Testing that runs test cases that failed previously in order to verify the success of corrective actions.

==== Retrospective meeting (ITSQB) ====

A meeting at the end of a project during which the project team members evaluate the project and learn lessons that can be applied to the next project. 

==== Requirements-based testing (ITSQB) ==== 

An approach to testing in which test cases are designed based on test objectives and test conditions derived from requirements, e.g. tests that exercise specific functions or probe non-functional attributes such as reliability or usability. 

==== Requirements management tool (ITSQB) ====

A tool that supports the recording of requirements, Requirements attributes (e.g. priority, knowledge responsible) and annotation, and facilitates traceability through layers of requirements change management. Some requirements management tools also provide facilities for static analysis, such as consistency checking and violations to pre-defined requirements rules. 

==== Requirements phase (ITSQB) ====

The period of time in the software lifecycle during which the requirements for a software product are defined and documented. ==== [IEEE 610] resource utilization (ITSQB) ==== The capability of the software product to use appropriate amounts and types of resources, for example the amounts of main and secondary memory used by the program and the sizes of required temporary or overflow files, when the software performs its function under stated conditions. [After ISO 9126] 

See also efficiency. 

==== Review (ISO 29119) ====

An evaluation of a product or project status to ascertain discrepancies from planned results and to recommend improvements.  [IEEE 1028-2008]

==== Review (ITSQB) ====

An evaluation of a product or project status to ascertain discrepancies from planned results and to recommend improvements. Examples include management review, informal review, technical review, inspection, and walkthrough. [After IEEE 1028] 

==== Review checklist (ISO 29119) ====

A checklist that specifies the points to be checked for the test item during a review. 
NOTE e.g. The review checklist may be an organizational asset, and hence maintained centrally, or it may be local to a specific project, possibly getting inspiration from a general checklist. Checklists for specific types of test items, e.g. requirements specification or test specifications, may be needed. 

==== Review tool (ITSQB) ====

A tool that provides support to the review process. Typical features include review planning and tracking support, communication support, collaborative reviews and a repository for collecting and reporting of metrics. 

==== Reviewer (ITSQB) ====

The person involved in the review that identifies and describes anomalies in the product or project under review. Reviewers can be chosen to represent different viewpoints and roles in the review process. 

==== Risk (ISO 29119) ====

Effect of uncertainty on objectives

NOTE 1: An effect is a deviation from the expected outcome - positive and/or negative.
NOTE 2: Objectives can have different aspects, such as financial, health and safety, and environmental goals, and can apply at different levels, such as strategic, organization-wide, project, product and process.
NOTE 3: Risk is often characterized by reference to potential events, a consequence, or a combination of these and how they can affect the achievement of objectives.
NOTE 4: Risk is often expressed in terms of a combination of the consequences of an event or a change in circumstances, and the associated likelihood of occurrence.

==== Risk (ITSQB) ==== 

A factor that could result in future negative consequences; usually expressed as impact and likelihood. 

==== Risk analysis (ITSQB) ====

The process of assessing identified risks to estimate their impact and probability of occurrence (likelihood). 

==== Risk-based testing (ISO 29119) ====

An approach to testing whereby the selection and prioritization of testing is based on the corresponding type and level of perceived risk.

==== Risk-based testing (ITSQB) ====

An approach to testing to reduce the level of product risks and inform stakeholders of their status, starting in the initial stages of a project. It involves the identification of product risks and the use of risk levels to guide the test process. 

==== Risk category (ITSQB) ====

See risk type. 

==== Risk control (ITSQB) ==== The process through which decisions are reached and protective measures are implemented for reducing risks to, or maintaining risks within, specified levels. 
==== Risk identification (ITSQB) ==== The process of identifying risks using techniques such as brainstorming, checklists and failure history. 

==== Risk level (ITSQB) ====

The importance of a risk as defined by its characteristics impact and likelihood. 
The level of risk can be used to determine the intensity of testing to be performed. A risk level can be expressed either qualitatively (e.g. high, medium, low) or quantitatively. 

==== Risk management (ITSQB) ==== 

Systematic application of procedures and practices to the tasks of identifying, analyzing, prioritizing, and controlling risk. 

==== Risk mitigation (ITSQB) ====

See risk control. 

==== Risk type (ITSQB) ====

A set of risks grouped by one or more common factors such as a quality attribute, cause, location, or potential effect of risk;. A specific set of product risk types is related to the type of testing that can mitigate (control) that risk type. For example, the risk of user-interactions being misunderstood can be mitigated by usability testing. 

==== Robustness (ITSQB) ====

The degree to which a component or system can function correctly in the presence of invalid inputs or stressful environmental conditions. [IEEE 610] 

See also error-tolerance, fault-tolerance. 

==== Robustness testing (ITSQB) ==== 

Testing to determine the robustness of the software product. 

==== Root cause (ITSQB) ====

A source of a defect such that if it is removed, the occurrence of the defect type is decreased or removed. [CMMI] 

==== Root cause analysis (ITSQB) ====

An analysis technique aimed at identifying the root causes of defects. By directing corrective measures at root causes, it is hoped that the likelihood of defect Recurrence will be minimized. 

==== RUP (ITSQB) ====

See Rational Unified Process. 

===== S (ISO 29119) =====

==== Safety (ITSQB) ==== The capability of the software product to achieve acceptable levels ofrisk of harm to people, business, software, property or the environment in a specified context of use. [ISO 9126] 

==== Safety critical system (ITSQB) ====

A system whose failure or malfunction may result in death or serious injury to people, or loss or severe damage to equipment, or environmental harm. 

==== Safety testing (ITSQB) ====

Testing to determine the safety of a software product. 

==== Sanity test (ITSQB) ====

See smoke test. 

==== Satellite Communities / SPII / SEPG ====

These are the communities that have implemented parts of “Share” and are using it to improve their software delivery processes. They can both be collaborating with the Global ALM Community to contribute to the Global ALM Standards Library, or they can download a local clone of the Global ALM Standards Libraries and tailor it for their own use without contributing back to the global community. The communities can be within an organization or across in the form of after-hour sessions for instance. 

==== Scalability (ITSQB) ====

The capability of the software product to be upgraded to accommodate increased loads. [After Gerrard] 

==== Scalability testing (ITSQB) ====

Testing to determine the scalability of the software product. 

==== Scalability testing (ISO 29119) ====

Testing to determine the ease with which the test item can be modified to cope with changing (normally increasing) loads (e.g. increased number of users and/or volume of input data).

==== Scenario testing (ITSQB) ====

See use case testing.

==== Scenario testing (ISO 29119) ====

A specification-based test design technique that uses a model of the sequences of interactions between a user and a test item for the purpose of testing workflows within the test item.

==== Scorecard (ITSQB) ====

A representation of summarized performance measurements representing progress towards the implementation of long-term goals. A scorecard provides static measurements of performance over or at the end of a defined interval. See also balanced scorecard, dashboard. 

==== Scribe (ITSQB) ====

The person who records each defect mentioned and any suggestions for process improvement during a review meeting, on a logging form. The scribe should ensure that the logging form is readable and understandable. 

==== Scripted testing (ITSQB) ====

Test execution carried out by following a previously documented sequence of tests. 

==== Scripted testing (ISO 29119) ====

Test execution carried out by following a previously documented sequence of tests.

==== Scripting language (ITSQB) ====

A programming language in which executable test scripts are written, used by a test execution tool (e.g. a capture/playback tool). 

==== SCRUM (ITSQB) ==== 

An iterative incremental framework for managing projects commonly used with agile software development. See also agile software development.

==== Security (ITSQB) ==== 

Attributes of software products that bear on its ability to prevent unauthorized access, whether accidental or deliberate, to programs and data. [ISO 9126] 

See also functionality.

==== Security testing (ITSQB) ==== 

Testing to determine the security of the software product. See also functionality testing. 

==== Security testing (ISO 29119) ====

Testing to determine the degree to which information and data are protected so that unauthorized persons or systems cannot read or modify them and authorized persons or systems are not denied access to them.

==== SEPG ====

See Software Engineering Process Group 

==== Serviceability testing ====

See [[:general:glossary#maintainability testing|Maintainability Testing]]

==== Service Catalogue (ITIL) ====

It is a list of services provided by an organization to its employees or its customers. Each of the service within the catalogue normally includes: A description of the service; Timeframes or service level agreement for fulfilling the service; Who is entitled to request/view the service; Costs (if any); and How to fulfill the service. 

==== Service Oriented Architecture (SOA) ====

It is a set of principles and methodologies that are needed for the design and development of software in the form of interoperable services. These services are well-defined business functionalities built as software components (i.e. snippets of code or data structures) that can be reused for different purposes. 

==== Service Portfolio Management (ITIL) ====

It helps to ensure that the IT service providers have the right mix of services to reach the desired business objectives. The sub-processes of Service Portfolio Management in ITIL are: ‘Define and Analyze new or changed Services’; ‘Approve new or changed Services’; and ‘Service Portfolio Review’. 

==== Site acceptance testing (ISO 29119) ====
Acceptance testing by users/customers at their site, to determine whether or not a component or system satisfies the user/customer needs and fits within the business processes, normally including hardware as well as software.

==== Smoke testing (ISO 29119) ====

Test execution carried out to determine if the test item is ready for systematic testing to begin. Originally used to test the integrity of enclosed vessels (e.g. submarines) by placing a smoke bomb inside them to detect any leaks.

==== Soak testing (ISO 29119) ====

See [[:general:glossary#endurance testing|Endurance Testing]]

==== Sociability testing (ISO 29119) ====

Testing that is concerned with the ability to operate the test item in an environment in which other programs are installed and running.

==== Software development lifecycle (ISO 29119) ====

A model of the phases (e.g. requirements engineering, design, implementation, testing and operation) that a project passes through and their relationships. Typical IT life cycles include waterfall, V, evolutionary and prototyping.

==== Software Engineering Process Group ====

« TODO » 

==== Software intensive system (ISO 29119) ====

System or product where the majority of the functionality is implemented in software.

==== Software Lifecycle (or Software Development Lifecycle) ====

It is a general model for the software development process, encompassing all the activities and work products required to develop a software system. Such a model may be both activity-centred (focusing on the activities of software development) and entity-centred (focusing on the work products created by these activities). 

==== Software test environment (ISO 29119) ====

The facilities, hardware, software, firmware, procedures, and documentation needed to perform qualification or other testing of software [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

Note: Elements may include but are not limited to simulators, code analyzers, test case generators, and path analyzers, and may also include elements used in the software engineering environment. 

==== Software testing (ISO 29119) ====

See [[:general:glossary#testing|Testing]]

==== Specification-based testing (ISO 29119) ====

Testing that takes into account the expected behavior of the test item, e.g. as described in requirements specifications or design specifications. The internal mechanism of a system or component is not considered.

NOTE: A synonym for specification-based testing is black-box testing. 

==== Spike testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing the performance of the test item when a sudden increase in load is applied, for example by simulating a dramatic increase in users logging on to the system.

==== Stability testing (ISO 29119) ====

Testing that is aimed at determining the capability of the test item to avoid unexpected and/or unwanted effects after modification. For example, this could include an assessment of the number of new defects (i.e. incidents) that are introduced during the repair of existing defects.

==== Standard ====

It is really hard to define what a standard is, but here are a couple of examples of standards. 
•	Process maps
•	Role descriptions
•	Templates
•	Job aids
•	Tools selections
•	Link to external content
As you can see, the types are quite diverse, so the definition is pretty much: “Whatever the communities agree on”. 

==== Standards Library ====

The portal that contains the Standards 

==== State transition testing (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute specific aspects of a state model corresponding to the test item. [BS 7925-1]

==== Statement coverage (ISO 29119) ====

Percentage of executable statements in a component that have been exercised by testing. [BS 7925-1]

==== Statement testing (ITSQB) ==== 

A white box test design technique in which test cases are designed to execute statements. 

==== Statement testing (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute source code statements. 

==== Static analysis (ISO 29119) ====

Automated analysis of a program carried out without executing the program. [BS 7925-1]

==== Static analysis (ITSQB) ==== 

Analysis of software artifacts, e.g. requirements or code, carried out without execution of these software development artifacts. Static analysis is usually carried out by means of a supporting tool. 

==== Static analysis rules (ISO 29119) ====

A set of rules that specify the rules to be followed during a static analysis. 

==== Static analysis tool (ITSQB) ==== 

See static analyzer. 

==== Static analyzer (ITSQB) ==== 

A tool that carries out static analysis. 

==== Static code analysis (ITSQB) ==== 

Analysis of source code carried out without execution of that software. 

==== Static code analyzer (ITSQB) ====

A tool that carries out static code analysis. The tool checks source code, for certain properties such as conformance to coding standards, quality metrics or data flow anomalies. 

==== Static test report (ISO 29119) ====

A report that provides a summary of the static testing that was performed.

==== Static testing (ITSQB) ====

Testing of a component or system at specification or implementation level without execution of that software, e.g. reviews or static analysis. 

==== Static testing (ISO 29119) ====

Testing of a component or system at specification or implementation level without execution of that software, e.g. reviews or static analysis.

==== Statistical testing (ITSQB) ==== 

A test design technique in which a model of the statistical distribution of the input is used to construct representative test cases. See also operational profile testing. 

==== Status accounting (ITSQB) ====

An element of configuration management, consisting of the recording and reporting of information needed to manage a configuration effectively. This information includes a listing of the approved configuration identification, the status of proposed changes to the configuration, and the implementation status of the approved changes. [IEEE 610] 

==== STEP (ITSQB) ==== 

See Systematic Test and Evaluation Process. 

==== Storage (ITSQB) ==== 

See resource utilization. 

==== Storage testing (ITSQB) ====

See resource utilization testing. 

==== Stress testing (ITSQB) ==== 

A type of performance testing conducted to evaluate a system or component at or beyond the limits of its anticipated or specified workloads, or with reduced availability of resources such as access to memory or servers. [After IEEE 610] 

See also performance testing, load testing. 

==== Stress testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing the performance of the test item when it is pushed beyond its anticipated peak load, to determine how it behaves under extreme load.

==== Stress testing tool (ITSQB) ==== 

A tool that supports stress testing. 

==== Structural coverage (ITSQB) ==== 

Coverage measures based on the internal structure of a component or system. 

==== Structural test design technique (ITSQB) ==== 

See white box test design technique.

==== Structural testing (ITSQB) ==== 

See white box testing.

==== Structural testing (ISO 29119) ====

See [[:general:glossary#structure-based testing|Structure-based Testing]] 

==== Structure-based testing (ITSQB) ==== 

See white-box testing. 

==== Structured walkthrough (ITSQB) ====

See walkthrough. 

==== Structure-based testing (ISO 29119) ====

Testing that takes into account the internal mechanism of a system or component.

NOTE: Types include branch testing, decision testing, and statement testing. Synonyms for structure-based testing are structural testing, glass-box testing, and white-box testing. 
==== Stub (ITSQB) ====

A skeletal or special-purpose implementation of a software component, used to develop or test a component that calls or is otherwise dependent on it. It replaces a called component. [After IEEE 610] 

==== Sub path (ITSQB) ==== 

A sequence of executable statements within a component. 

==== Suitability (ITSQB) ==== 

The capability of the software product to provide an appropriate set of functions for specified tasks and user objectives. [ISO 9126] See also functionality. 


==== Suitability testing (ITSQB) ==== 

The process of testing to determine the suitability of a software product 

==== Suspension criteria (ITSQB) ==== 

The criteria used to (temporarily) stop all or a portion of the testing activities on the test items. [After IEEE 829] 

==== Suspension criteria (ISO 29119) ====

The criteria used to (temporarily) stop all or a portion of the testing activities on the test items. [After IEEE 829]

==== Syntax testing (ITSQB) ====

A black box test design technique in which test cases are designed based upon the definition of the input domain and/or output domain.

==== Syntax testing (ISO 29119) ====

A specification-based test design technique based on the expected syntax of the input to the test item in which tests are designed to exercise options (valid variations) and mutations (invalid variations) of the defined syntax.
[BS 7925-1]

==== System (ITSQB) ====

A collection of components organized to accomplish a specific function or set of functions. [IEEE 610] 

==== System integration testing (ITSQB) ====  

Testing the integration of systems and packages; testing interfaces to external organizations (e.g. Electronic Data Interchange, Internet).

==== System of systems (ITSQB) ====

Multiple heterogeneous, distributed systems that are embedded in networks at multiple levels and in multiple interconnected domains, addressing large-scale inter-disciplinary common problems and purposes, usually without a common management structure. 

==== System testing (ITSQB) ==== 

The process of testing an integrated system to verify that it meets specified requirements. [Hetzel] 

==== System testing (ISO 29119) ====

Testing conducted on a complete, integrated system to evaluate the system's compliance with its specified requirements.  [ISO/IEC 24765]

==== Systematic Test and Evaluation Process (ITSQB) ==== 

A structured testing methodology, also used as a content-based model for improving the testing process. Systematic Test and Evaluation 
Process (STEP) does not require that improvements occur in a specific order. 

See also content-based model. 

===== T =====

==== Technical Architecture Framework for Information Management (TAFIM) ====

It is a reference model of the 1990s that is used for enterprise architecture development as defined by the United States Department of Defense (DoD). TAFIM identifies the services, standards, concepts, components, and configurations that can be utilized to guide the development of technical architectures to meet the specific mission requirements. 

==== Technical review (ITSQB) ==== 

A peer group discussion activity that focuses on achieving consensus on the technical approach to be taken. [Gilb and Graham, IEEE 1028] See also peer review.

==== Test (ISO 29119) ====

An activity in which a system or component is executed under specified conditions, the results are observed or recorded, and an evaluation is made of some aspect of the system or component. [ISO/IEC 24765, Systems and Software Engineering Vocabulary] 

==== Test (ITSQB) ==== 

A set of one or more test cases. [IEEE 829] 

==== Test approach (ITSQB) ==== 

The implementation of the test strategy for a specific project. It typically includes the decisions made that follow based on the (test) project’s goal and the risk assessment carried out, starting points regarding the test process, the test design techniques to be applied, exit criteria and test types to be performed. 

==== Test artifact ====

See [[:general:glossary#test ware|Test ware]]

==== Test automation (ITSQB) ==== 

The use of software to perform or support test activities, e.g. test management, test design, test execution and results checking. 

00000000000

==== Test basis (ISO 29119) ====

Body of knowledge from which the requirements for a component or system can be inferred. For example a requirements document, relevant standards, user guides, and previous versions of the system or software.

==== Test basis (ITSQB) ==== 

All documents from which the requirements of a component or system can be inferred. The documentation on which the test cases are based. If a document can be amended only by way of formal amendment procedure, then the test basis is called a frozen Test basis. 
[After TMap] 

==== Test bed (ITSQB) ==== 

See test environment. 

==== Test case (ITSQB) ==== 

A set of input values, execution preconditions, expected results and execution post conditions, developed for a particular objective or test condition, such as to exercise a particular program path or to verify compliance with a specific requirement. [After IEEE 
610] 

==== Test case (ISO 29119) ====

A set of test inputs (and actions, where applicable), execution conditions, and expected results developed to exercise specific test coverage item(s). 

==== Test case design technique (ITSQB) ====

See test design technique. 

==== Test case specification (ITSQB) ==== 

A document specifying a set of test cases (objective, inputs, test actions, expected results, and execution preconditions) for a test item. [After IEEE 829]

==== Test case design technique ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test case precondition (ISO 29119) ====

The state the test item must be in before the test case can be executed. 

==== Test case specification (ISO 29119) ====

The documentation of a set of one or more test cases.

==== Test case suite (ITSQB) ====

See test suite. 

==== Test charter (ITSQB) ==== 

A statement of test objectives, and possibly test ideas about how to test. Test charters are used in exploratory testing. See also exploratory testing.

==== Test closure (ITSQB) ==== 

During the test, closure phase of a test process data is collected from completed activities to consolidate experience, testware, facts and numbers. The test closure phase consists of finalizing and archiving the testware and evaluating the test process, including preparation of a test evaluation report. 

See also test process. 

==== Test comparator (ITSQB) ==== 

A test tool to perform automated test comparison of actual results with expected results. 

==== Test comparison (ITSQB) ==== 

The process of identifying differences between the actual results produced by the component or system under test and the expected results for a test. Test comparison 
Can be performed during test execution (dynamic comparison) or after test execution. 

==== Test completion criteria (ITSQB) ====

See exit criteria. 

==== Test completion criteria (ISO 29119) ====

Criteria for determining when planned testing is complete, defined in terms of a test measurement technique. 

[BS 7925]

==== Test completion report (ISO 29119) ====

A report that provides a summary of the testing that was performed.

==== Test condition (ITSQB) ==== 

An item or event of a component or system that could be verified by one or more test cases, e.g. a function, transaction, feature, quality attribute, or structural element.

==== Test condition (ISO 29119) ====

A testable aspect of a component or system that may be used to derive one or more test coverage items.

NOTE: For example, a function, transaction, attribute, parameter (input or output), condition, feature, quality attribute, requirement or structural element identified as a basis for testing.

==== Test control (ITSQB) ==== 

A test management task that deals with developing and applying a set of corrective actions to get a test project on track when monitoring shows a deviation from what was planned. See also test management. 

==== Test coverage (ITSQB) ==== 

See coverage. 

==== Test coverage (ISO 29119) ====

The degree, expressed as a percentage, to which specified coverage items have been exercised by a test procedure or procedures

==== Test coverage item (ISO 29119) ====

An aspect of a component or system for testing e.g. a function, transaction, feature, quality attribute, or structural element that is normally derived by applying a test design technique. 

==== Test cycle (ITSQB) ==== 

Execution of the test process against a single identifiable release of the test object. ==== Test data (ITSQB) ==== Data that exists (for example, in a database) before a test is executed, and that affects or is affected by the component or system under test.

==== Test data (ISO 29119) ====

Data, often in a database, that is set up in the test environment before a test is executed, as part of the preconditions for a test. 

==== Test data requirements (ISO 29119) ====

A document that describe the necessary and desired properties of the test data needed to execute the test procedures defined in the Test Procedure Specification.

==== Test data preparation tool (ITSQB) ==== 

A type of test tool that enables data to be selected from existing databases or created, generated, manipulated and edited for use in testing. 

==== Test design (ITSQB) ====

(1) See test design specification. 
(2) The process of transforming general testing objectives into tangible test conditions and test cases. 

==== Test design (ISO 29119) ====

The process of transforming general testing objectives into tangible test conditions, test coverage items and test cases.

==== Test design specification (ISO 29119) ====

A document specifying the features to be tested and their corresponding test conditions. 

==== Test design technique (ITSQB) ==== 

Procedure used to derive and/or select test cases. 

==== Test design tool (ITSQB) ==== 

A tool that supports the test design activity by generating test inputs from a specification that may be held in a CASE tool repository, e.g. requirements management tool, from specified test conditions held in the tool itself, or from code. 
Test driven development: A way of developing software where the test cases are developed, and often automated, before the software is developed to run those test cases. 

==== Test driver (ITSQB) ==== 

See driver. 

==== Test deliverable (ITSQB) ==== 

Any test (work) product that must be delivered to someone other than the Test (work) product’s author. 

See also deliverable.

==== Test design technique (ISO 29119) ====

Procedure used to derive and/or select test cases.

==== Test-driven development (ISO 29119) ====

A software development technique where the developer writes a test case that defines a desired function then produces code to cause the test to pass. The test cases are usually run within an automated unit test framework.

==== Test environment (ISO 29119) ====

See [[:general:glossary#software test environment|Software Test Environment]]

==== Test environment (ITSQB) ====  

An environment containing hardware, instrumentation, simulators, software tools, and other support elements needed to conduct a test. [After IEEE 610] 

==== Test environment requirements (ISO 29119) ====

A document that describes both the necessary and desired properties of the test environment. 

NOTE: All or parts of the Test Environment Requirements may reference where the information can be found, e.g. in the appropriate Organizational Test Policy and Test Strategy, Test Plan, and/or Test Specification.

==== Test estimation (ITSQB) ==== 

The calculated approximation of a result related to various aspects of testing (e.g. effort spent, completion date, costs involved, number of test cases, etc.) which is usable even if input data may be incomplete, uncertain, or noisy.

==== Test environment readiness report (ISO 29119) ====

A document that describes the status of each environment requirement.

==== Test evaluation report (ITSQB) ==== 

A document produced at the end of the test process summarizing all testing activities and results. It also contains an evaluation of the test process and lessons learned. 

==== Test execution (ITSQB) ==== 

The process of running a test on the component or system under test, producing actual result(s). 

==== Test execution (ISO 29119) ====

(1) The process of running a test on the component or system under test, producing actual result(s).
(2) Processing of a test case suite by the software under test, producing an outcome. [BS 7925]
(3) Act of performing one or more test cases. [ISO/IEC 24765, Systems and Software Engineering Vocabulary]

==== Test execution automation (ITSQB) ==== 

The use of software, e.g. capture/playback tools, to control the execution of tests, the comparison of actual results to expected results, the setting up of test preconditions, and other test control and reporting functions. 

==== Test execution log (ISO 29119) ====

A log that summarizes the course of the execution of one or more test procedures. 

==== Test execution phase (ITSQB) ==== 

The period of time in a software development lifecycle during which the components of a software product are executed, and the software product is evaluated to determine whether or not requirements have been satisfied. [IEEE 610] 

==== Test execution schedule (ITSQB) ====

A scheme for the execution of test procedures. The test procedures are included in the test execution schedule in their context and in the order in which they are to be executed. 

==== Test execution schedule (ISO 29119) ====

A scheme for the execution of test procedures. The test procedures are included in the test execution schedule in their context and in the order in which they are to be executed.

==== Test execution technique (ITSQB) ====

The method used to perform the actual test execution, either manual or automated. 
Test execution tool is a type of test tool that is able to execute other software using an automated test script, e.g. capture/playback. [Fewster and Graham]

==== Test fail (ITSQB) ====

See fail.

==== Test generator (ITSQB) ==== 

See test data preparation tool. 

==== Test harness (ITSQB) ==== 

A test environment comprised of stubs and drivers needed to execute a test. 

==== Test harness (ISO 29119) ====

(1) Testing tool that comprises a test driver and a test comparator [BS 7925] 
(2) Scaffolding code written for the purpose of exercising lower level code when the higher-level code that will ultimately exercise it is not yet available. [ISO/IEC 24765, Systems and Software Engineering Vocabulary]

==== Test implementation (ITSQB) ==== 

The process of developing and prioritizing test procedures, creating test data and, optionally, preparing test harnesses and writing automated test scripts. 

==== Test improvement plan (ITSQB) ====

A plan for achieving organizational test process improvement objectives based on a thorough understanding of the current strengths and weaknesses of the organization’s test processes and test process assets. [After CMMI]

==== Test incident (ITSQB) ==== 

See incident. 

==== Test incident report (ITSQB) ==== 

See incident report. 

==== Test infrastructure (ITSQB) ==== 

The organizational artifacts needed to perform testing, consisting of test environments, test tools, office environment and procedures. 

==== Test input (ITSQB) ====

The data received from an external source by the test object during test execution. 

The external source can be hardware, software or human.

==== Test item (ITSQB) ====

The individual element to be tested. There usually is one test object and many test items. 

==== Test item (ISO 29119) ====

A system or software item that is an object of testing.

==== Test item parameter (ISO 29119) ====

Test item parameters are used in combinatorial testing and represent a particular aspect of the test item that is relevant to the testing, and will often correspond to the input parameters to the test item, but other aspects may also be used, such as environmental factors (in configuration testing the parameters could be various environment factors, such as OS and browser).

==== Test item specification (ISO 29119) ====

See [[:general:glossary#test basis|Test Basis]]

==== Test item transmittal report (ITSQB) ==== 

See release note.

==== Test item transmittal report (ISO 29119) ====

See [[:general:glossary#release note|Release Note]]

==== Test leader (ITSQB) ==== 

See test manager. 

==== Test level (ITSQB) ====

A group of test activities that are organized and managed together. A test level is linked to the responsibilities in a project. Examples of test levels are component test, integration test, system test and acceptance test. [After TMap] 

==== Test level (ISO 29119) ====

See [[:general:glossary#test sub-process|Test Sub-process]]

==== Test log (ITSQB) ==== 

A chronological record of relevant details about the execution of tests. [IEEE 829] 

==== Test logging (ITSQB) ==== 

The process of recording information about tests executed into a test log. 

==== Test management (ITSQB) ====  

The planning, estimating, monitoring and control of test activities, typically carried out by a test manager. 

==== Test management (ISO 29119) ====

The planning, estimating, monitoring, reporting, and control of test activities.
==== Test management tool (ITSQB) ==== 

A tool that provides support to the test management and control part of a test process. It often has several capabilities, such as testware management, scheduling of tests, and the logging of results, progress tracking, incident management and test reporting. 

==== Test manager (ITSQB) ==== 

The person responsible for project management of testing activities and resources, and evaluation of a test object. The individual, who directs, controls, administers, plans and regulates the evaluation of a test object. 

==== Test Maturity Model (TMM) (ITSQB) ==== 

A five level staged framework for test process improvement, related to the Capability Maturity Model (CMM) that describes the key elements of an effective test process. 

==== Test Maturity Model Integrated (TMMi) (ITSQB) ==== 

A five level staged framework for test process improvement, related to the Capability Maturity Model Integration (CMMI) that describes the key elements of an effective test process. 

==== Test method (ISO 29119) ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test monitoring (ITSQB) ==== A test management task that deals with the activities related to periodically checking the status of a test project. Reports are prepared that compare the actual to that which was planned. See also test management. 

==== Test object (ITSQB) ==== 

The component or system to be tested. 

See also test item.

==== Test object (ISO 29119) ====

See [[:general:glossary#test item|Test Item]]

==== Test objective (ITSQB) ==== 

A reason or purpose for designing and executing a test.

==== Test objective (ISO 29119) ====

The identified set of software features to be measured under specified conditions by comparing actual behavior with the required behavior.  [ISO/IEC 25051:2006]

==== Test oracle (ITSQB) ==== 

A source to determine expected results to compare with the actual result of the software under test. An oracle may be the existing system (for a benchmark), other software, a user manual, or an individual’s specialized knowledge, but should not be the code. [After Adrion] 

===== Test outcome (ITSQB) ====

See result. 

==== Test outcome (ISO 29119) ====

The consequence/outcome of the execution of a test. It includes outputs to screens, changes to data, reports, and communication messages sent. 

===== Test pass (ITSQB) ====

See pass. 

==== Test performance indicator (ITSQB) ==== 

A high-level metric of effectiveness and/or efficiency used to guide and control progressive test development, e.g. Defect Detection Percentage (DDP). 

==== Test phase (ITSQB) ==== 

A distinct set of test activities collected into a manageable phase of a project, e.g. the execution activities of a test level. [After Gerrard]

==== Test phase (ISO 29119) ====

See [[:general:glossary#test sub-process|Test Sub=process]]

==== Test plan (ITSQB) ==== 

A document describing the scope, approach, resources and schedule of intended Test activities. It identifies amongst others test items, the features to be tested, the testing tasks, who will do each task, degree of tester independence, the test environment, and the test design techniques and entry and exit criteria to be used, and the rationale for their choice, and any risks requiring contingency planning. It is a record of the test planning process. 

[After IEEE 829] 

==== Test Plan (ISO 29119) ====

A document describing the scope, strategy, resources and schedule of intended test activities.  

==== Test planning (ITSQB) ==== 

The activity of establishing or updating a test plan.

==== Test Point Analysis (TPA) (ITSQB) ==== 

A formula based test estimation method based on function point analysis. [TMap] 

==== Test policy (ITSQB) ==== 

A high-level document describing the principles, approach and major objectives of the organization regarding testing.  

==== Test Policy (ISO 29119) ====

A high-level document describing the principles, approach and major objectives of the organization regarding testing.

==== Test procedure (ITSQB) ==== 

See test procedure specification. 

==== Test procedure (ISO 29119) ====

A sequence of test cases and any associated actions required to set up the preconditions for the test cases. 

NOTE: Test procedures include detailed instructions for how to run a set of one or more test cases selected to be run consecutively, including set up of common preconditions, and providing input and evaluating the actual result for each included test case.

==== Test Procedure Specification (ISO 29119) ====

A document describing the test sets, which are collections of test cases to be executed for a particular objective. The test cases in a test set are listed in their required order in the test procedure.

NOTE: A test procedure specification may for example be a separate document, a chapter in the test specification document, held in a database, or loosely scribbled. It is also known as a manual test script. A test procedure specification for an automated test run is usually called a test script. 

==== Test procedure specification (ITSQB) ====

A document specifying a sequence of actions for the execution of a test. Also known as test script or manual test script. [After IEEE 829] 

==== Test process (ITSQB) ==== 

The fundamental test process comprises test planning and control, test analysis and design, test implementation and execution, evaluating exit criteria and reporting, and test closure activities.

==== Test process (ISO 29119) ====

The process used to provide information on the quality of a software product. A test process shall comprise a number of activities, grouped into one or more test sub-processes.

==== Test Process Group (ITSQB) ====

A collection of (test) specialists, who facilitate the definition, maintenance, and improvement of the test processes used by an organization. [After CMMI]

==== Test Process Improvement (TPI) (ITSQB) ==== 

A continuous framework for test process improvement that describes the key elements of an effective test process, especially targeted at system testing and acceptance testing. 

==== Test process improvement manifesto (ITSQB) ====

A statement that echoes the agile manifesto, and defines values for improving the testing process. The values are: 
- Flexibility over detailed processes 
- Best Practices over templates 
- Deployment orientation over process orientation 
- peer reviews over quality assurance (departments) 
- Business driven over model driven. [Veenendaal08] 

==== Test process improver (ITSQB) ==== 

A person implementing improvements in the test process based on a test improvement plan. 
==== Test progress report (ITSQB) ==== 

A document summarizing testing activities and results, produced at regular intervals, to report progress of testing activities against a baseline (such as the original test plan) and to communicate risks and alternatives requiring a decision to management. 

===== Test record (ITSQB) ==== 

See test log. 

==== Test recording (ITSQB) ====

See test logging. 

==== Test report (ITSQB) ====

See test summary report and test progress report. 

==== Test reproducibility (ITSQB) ====

An attribute of a test indicating whether the same results are produced each time the test is executed. 

==== Test requirement (ITSQB) ====

See test condition. 

==== Test requirement (ISO 29119) ====

See [[:general:glossary#test condition|Test Condition]]

==== Test result (ISO 29119) ====

An indication of whether or not a specific test case has passed or failed, i.e. if the actual result corresponds to the expected result or if deviations were observed.

NOTE: The test result for a test case execution is usually recorded directly in the test procedure or in the individual test case in a place holder reserved for this purpose. If the test case execution passes this is typically marked with a tick mark or the like, and if the test case execution fails this is usually marked with the number of the incident report raised as a result of the observation of the deviation. The test result is therefore not 

==== Test result (ITSQB) ====

See result considered an independent document.

==== Test rig (ITSQB) ==== 

See test environment. 

==== Test run (ITSQB) ====

Execution of a test on a specific version of the test object.

==== Test run log (ITSQB) ==== 

See test log. 

==== Test scenario (ITSQB) ====

See test procedure specification. 

==== Test schedule (ITSQB) ==== 

A list of activities, tasks or events of the test process, identifying their intended start and finish dates and/or times, and interdependencies. 

==== Test schedule (ISO 29119) ====

A list of test activities, tasks or events, identifying their intended start and finish dates/ times, and their interdependencies.

===== Test script (ITSQB) ==== 

Commonly used to refer to a test procedure specification, especially an automated one.

==== Test script (ISO 29119) ====

(1) Commonly used to refer to a test procedure specification, especially an automated one.
(2) Automated test procedure used with a test harness. [BS 7925]

==== Test session (ITSQB) ==== 

An uninterrupted period of time spent in executing tests. In exploratory testing, each test session is focused on a charter, but testers can also explore new opportunities or issues during a session. The tester creates and executes test cases on the fly and records their progress. 

See also exploratory testing.

==== Test set (ITSQB) ====
See test suite. 

==== Test set (ISO 29119) ====

A set of one or more test cases with a common constraint on their execution (e.g. a specific test environment, specialized domain knowledge or specific purpose).  

==== Test situation (ITSQB) ====

See test condition. 

==== Test specification (ITSQB) ====  

A document that consists of a test design specification, test case specification and/or test procedure specification. 

==== Test specification (ISO 29119) ====

The complete documentation of the test design, test cases and/or test procedures for a specific test item.

NOTE: A test specification may be documented in one document, in a set of documents, or in other ways, for example in a mixture of documents and database entries.

==== Test specification technique (ITSQB) ====

See test design technique. 

==== Test specification technique (ISO 29119) ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test stage (ITSQB) ==== 

See test level. 

==== Test stage (ISO 29119) ====

See [[:general:glossary#test sub-process|Test Sub-process]]

==== Test Status Report (ISO 29119) ====

A report that provides up to date information about the status of the testing that is being performed.

==== Test strategy (ITSQB) ====

A high-level description of the test levels to be performed and the testing within those levels for an organization or program (one or more projects). 

==== Test Strategy (ISO 29119) ====

A high-level description of the test sub-processes to be performed and the testing within those sub-processes for an organization or program (one or more projects). 

==== Test sub-process (ISO 29119) ====

A group of related testing activities that form part of the test process, performed to fulfill a specific test objective (e.g. requirements documentation testing, unit testing, story testing, integration testing, system testing, acceptance testing). A test sub-process shall comprise one or more test types. Depending on the life cycle model used, test sub-processes are also typically called test phases, test levels, test stages or test tasks.

==== Test suite (ITSQB) ====

A set of several test cases for a component or system under test, where the post condition of one test is often used as the precondition for the next one.

==== Test suite (ISO 29119) ====

See [[:general:glossary#test procedure|Test Procedure]]

==== Test summary report (ITSQB) ==== 

A document summarizing testing activities and results. It also contains an evaluation of the corresponding test items against exit criteria. [After IEEE 829]

==== Test summary report (ISO 29119) ====

A document summarizing testing activities and results.

==== Test target (ITSQB) ==== 

A set of exit criteria. 

==== Test technique (ITSQB) ====

See test design technique. 

==== Test technique (ISO 29119) ====

See [[:general:glossary#test design technique|Test Design Technique]]

==== Test tool (ISO 29119) ====

A software product that supports one or more test activities.

====Test tool (ITSQB) ====

A software product that supports one or more test activities, such as planning and control, specification, building initial files and data, test execution and test analysis. 
[TMap] 

See also CAST.

==== Test traceability matrix (ISO 29119) ====

A document or spreadsheet used to identify related items in documentation and software, such as requirements with associated tests.

==== Test type (ITSQB) ====

A group of test activities aimed at testing a component or system focused on a specific test objective, i.e. functional test, usability test, regression test etc. A test type may take place on one or more test levels or test phases. [After TMap] 

==== Test type (ISO 29119) ====

A group of testing activities that are focused on specific quality attributes. A test type may be performed in a single test sub-process or may be performed across a number of test sub-processes.

==== Testability (ITSQB) ==== 

The capability of the software product to enable modified software to be tested. [ISO 9126] 

See also maintainability.

==== Testability (ISO 29119) ====

The ease with which test criteria can be established for a system or component and tests can be performed to determine whether those criteria have been met. [After ISO 25010]

==== Testability review (ITSQB) ====

A detailed check of the test basis to determine whether the test basis is at an adequate quality level to act as an input document for the test process. [After TMap] 

==== Testable requirements (ITSQB) ====

The degree to which a requirement is stated in terms that permit establishment of test designs (and subsequently test cases) and execution of tests to determine whether the requirements have been met. [After IEEE 610] 

==== Tester (ITSQB) ==== 

A skilled professional who is involved in the testing of a component or system. 

==== Testing (ITSQB) ==== 

The process consisting of all lifecycle activities, both static and dynamic, concerned with planning, preparation and evaluation of software products and related work products. To determine that they satisfy specified requirements, to demonstrate that they are fit for 
Purpose and to detect defects. 

==== Testing (ISO 29119) ====

Comparing what the test item does with what it is expected to do.

==== Testware (ITSQB) ==== 

Artifacts produced during the test process required to plan, design, and execute tests, such as documentation, scripts, inputs, expected  results, set-up and clear-up procedures, files, databases, environment, and any additional software or utilities used in testing. [After Fewster and Graham]

==== Test ware (ISO 29119) ====

The products produced by the testing effort.

NOTE: Examples are test documentation and data [IEEE 829-2008]. 

==== Thread testing (ITSQB) ==== 

A version of component integration testing where the progressive integration of components follows the implementation of subsets of the requirements, as opposed to the integration of components by levels of a hierarchy. === time behavior (ITSQB) ==== See performance. 

==== Top-down testing (ITSQB) ====

An incremental approach to integration testing where the component at the top of the component hierarchy is tested first, with lower level components being simulated by stubs. Tested components are then used to test lower level components. The process is repeated until the lowest level components have been tested. See also integration testing. 


==== Total Quality Management (ITSQB) ====

An organization-wide management approach centered on quality, based on the participation of all its members and aiming at long-term success through customer satisfaction, and benefits to all members of the organization and to society. Total Quality Management consists of planning, organizing, directing, control, and assurance. [After ISO 8402]

==== TPG (ITSQB) ==== 

See Test Process Group. 

==== TQM (ITSQB) ====

See Total Quality Management. 

==== Traceability (ITSQB) ==== 

The ability to identify related items in documentation and software, such as requirements with associated tests. 

See also horizontal traceability, vertical traceability. 

==== Traceability matrix (ISO 29119) ====

Is a document, usually in the form of a table that correlates any two baseline documents that require a many to many relationship to determine the completeness of the relationship. It is often used with high-level requirements (these often consist of marketing requirements) and detailed requirements and risks of the software product to the matching parts of high-level design, detailed design, test plan, and test cases.

==== Transactional analysis (ITSQB) ====

The analysis of transactions between people and within people’s minds; a transaction is defined as a stimulus plus a response. Transactions take place between people and between the ego states (personality segments) within one person’s mind. 

==== Transcendent-based quality (ITSQB) ====

A view of quality, wherein quality cannot be precisely defined, but we know it when we see it, or are aware of its absence when it is missing. Quality depends on the perception and affective feelings of an individual or group of individuals towards a product. [After Garvin] See also manufacturing-based quality, product-based quality, user-based quality, value-based quality. 

===== U =====

==== Understandability (ITSQB) ====

The capability of the software product to enable the user to understand whether the software is suitable, and how it can be used for particular tasks and conditions of use. [ISO 9126] See also usability. 

==== Unified Modeling Language (UML) ====

It is an industry-standard language that helps to clearly communicate requirements, architectures and designs. The UML was originally developed by Rational Software (acquired by IBM), and it is presently maintained by the standards organization Object Management Group. 

==== Unified Process (or Unified Software Development Process) ====

It is a well known iterative and incremental software development process framework. Unified Process is an extensible framework that is needed to be customized for specific organizations or projects. The Unified Process has four phases in the lifecycle: Inception; Elaboration; Construction and Transition. 

==== Unit (ITSQB) ==== 

See component.

==== Unit test framework (ITSQB) ====

A tool that provides an environment for unit or component testing in which a component can be tested in isolation or with suitable stubs and drivers. It also provides other support for the developer, such as debugging capabilities. [Graham] 

==== Unit testing (ITSQB) ====

See component testing. 

==== Unit testing ====

See [[:general:glossary#component testing|Component Testing]]

==== Unreachable code (ITSQB) ==== 

Code that cannot be reached and therefore is impossible to execute. 

==== Usability (ITSQB) ==== 

The capability of the software to be understood, learned, used and attractive to the user when used under specified conditions. [ISO 9126]

==== Usability testing (ITSQB) ==== 

Testing to determine the extent to which the software product is understood, easy to learn, easy to operate and attractive to the users under specified conditions. [After ISO 9126] 

==== Usability testing (ISO 29119) ====

Testing to determine the extent to which a product can be used by specified users to achieve specified goals with effectiveness, efficiency and satisfaction in a specified context of use.

==== Use case (ITSQB) ==== 

A sequence of transactions in a dialogue between an actor and a component or system with a tangible result, where an actor can be a user or anything that can exchange information with the system. 

==== Use case testing (ITSQB) ==== 

A black box test design technique in which test cases are designed to execute scenarios of use cases. 

==== Use case testing (ISO 29119) ====

A specification-based test design technique in which test cases are designed to execute the flows through use cases.

==== User acceptance testing (ITSQB) ==== 

See acceptance testing. 

==== User acceptance testing (ISO 29119) ====

See [[:general:glossary#acceptance testing|Acceptance Testing]]

==== User-based quality (ITSQB) ====

A view of quality, wherein quality is the capacity to satisfy needs, wants and desires of the user(s). A product or service that does not fulfill user needs is unlikely to find any users. This is a context dependent, contingent approach to quality since different business characteristics require different qualities of a product. [After Garvin] 

See also manufacturing-based quality, product-based quality, transcendent-based quality, value-based quality. 

==== User scenario testing (ITSQB) ==== 

See use case testing. 

==== User test (ITSQB) ====

A test whereby real-life users are involved to evaluate the usability of a component or system. 


===== V =====

==== V-model (ITSQB) ==== 

A framework to describe the software development lifecycle activities from requirements specification to maintenance. The V-model illustrates how testing activities can be integrated into each phase of the software development lifecycle. 

==== Validation (ITSQB) ==== 

Confirmation by examination and through provision of objective evidence that the requirements for a specific intended use or application have been fulfilled. [ISO 9000] value-based quality:

A view of quality, wherein quality is defined by price. A quality product or service is one that provides desired performance at an acceptable cost. Quality is determined by means of a decision process with stakeholders on trade-offs between time, effort and cost aspects. [After Garvin] See also manufacturing-based quality, product-based quality, transcendent-based quality, user-based quality.

==== Variable (ITSQB) ==== 

An element of storage in a computer that is accessible by a software program by referring to it by a name.

==== Verification (ITSQB) ==== 

Confirmation by examination and through provision of objective evidence that specified requirements have been fulfilled. [ISO 9000] 

==== Validation (ISO 29119) ====

Confirmation by examination and provision of objective evidence that the particular requirements for a specific intended use have been fulfilled [BS 7925]

==== Verification (ISO 29119) ====

Confirmation by examination and provision of objective evidence that specified requirements have been fulfilled [BS 7925]

==== Version control (ITSQB) ==== 

See configuration control. 

==== Vertical traceability (ITSQB) ==== 

The tracing of requirements through the layers of development documentation to components. 

==== Volume testing (ITSQB) ==== 

Testing where the system is subjected to large volumes of data. 

See also resource-utilization testing.

==== Volume testing (ISO 29119) ====

A sub category of performance testing where testing is aimed at assessing the performance of the test item when it is processing specified levels of data. For example, this may include assessing test item performance when its database is nearing maximum capacity.

===== W =====

==== Walkthrough (ITSQB) ====

A step-by-step presentation by the author of a document in order to gather 
Information and to establish a common understanding of its content. [Freedman and 
Weinberg, IEEE 1028] 

See also peer review. 

==== Walkthrough (ISO 29119) ====

A step-by-step presentation by the author of a document.  [IEEE 1028-2008] 


==== WBS (ITSQB) ====

See Work Breakdown Structure. 

==== White-box technique (ITSQB) ==== 

See white-box test design technique. 

==== White-box test design technique (ITSQB) ==== 

Procedure to derive and/or select test cases based on an analysis of the internal structure of a component or system. 

==== White-box testing (ITSQB) ==== 

Testing based on an analysis of the internal structure of the component or system. 

==== White box testing techniques (ISO 29119) ====

See [[:general:glossary#structure-based testing|Structure-based Testing]]

==== White-box test design technique (ITSQB) ==== 

Procedure to derive and/or select test cases based on an analysis of the internal structure of a component or system. 

==== Wide Band Delphi (ITSQB) ==== 

An expert based test estimation technique that aims at making an accurate estimation using the collective wisdom of the team members.

